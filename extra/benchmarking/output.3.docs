../../extra/xdocs/build_instruct.xml
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0HTTP/1.1 100 Continue

HTTP/1.1 200 OK
Date: Mon, 17 Apr 2017 01:22:22 GMT
Server: Apache/2.4.10 (Debian)
Vary: Accept-Encoding
Transfer-Encoding: chunked
Content-Type: text/plain; charset=utf-8


<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>ASF: Building Xalan-C++</title>
<meta http-equiv="content-type" content="text/html; charset=UTF-8" />
<meta http-equiv="Content-Style-Type" content="text/css" />
<link rel="stylesheet" type="text/css" href="resources/apache-xalan.css" />
</head>
<!--
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements. See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership. The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the  "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 -->
<body>
<div id="title">
<table class="HdrTitle">
<tbody>
<tr>
<th rowspan="2">
<a href="http://www.apache.org">
<img alt="Trademark Logo" src="resources/asf_logo.png" width="144" height="75" />
</a>
</th>
<th text-align="center" width="75%">
<a href="index.html" />
</th>
</tr>
<tr>
<td valign="middle">Building Xalan-C++</td>
</tr>
</tbody>
</table>
<table class="HdrButtons" align="center" border="1">
<tbody>
<tr>
<td>
<a href="http://www.apache.org">Apache Foundation</a>
</td>
<td>
<a href="http://xalan.apache.org">Xalan Project</a>
</td>
<td>
<a href="http://xerces.apache.org">Xerces Project</a>
</td>
<td>
<a href="http://www.w3.org/TR">Web Consortium</a>
</td>
<td>
<a href="http://www.oasis-open.org/standards">Oasis Open</a>
</td>
</tr>
</tbody>
</table>
</div>
<div id="navLeft">
<ul />
</div>
<div id="content">
<h2>Building Xalan-C++</h2>
<a name="build">‌</a>
<p>This section is obsolete and is being rewritten.
See: <a href="BUILD-LIBS.html">BUILD-LIBS.html</a>
</p>
<p>This page was created for users who have downloaded the source distribution of Xalan-C++ and are looking for guidance on how to
   build the Xalan-C++ libraries themselves.</p>
<ul>
  <li>
<a href="#rebuild">Rebuilding Xalan-C++</a>
</li>
  <li>
<a href="samples.html#rebuilding">Rebuilding sample applications</a>
</li>
</ul>

<a name="rebuild">‌</a> 
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h4>Rebuilding Xalan-C++</h4>
<ul>
  <li>
<a href="#needed">What you need from the distributions</a>
</li>   
  <li>
<a href="#win32">Steps for doing a Windows Build</a>
</li>
  <li>
<a href="#dotNet">Steps for doing a Windows Build with Visual Studio .NET</a>
</li>
  <li>
<a href="#unix">Steps for doing a UNIX build</a>
</li>       
  <li>
<a href="#locale">Steps for doing a Build with Message Localization Support</a>
</li>
  
</ul>


<a name="needed">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h4>What you need from the distributions</h4>
<p>To rebuild Xalan-C++, you need the Xalan-C++ source files, the Xerces-C++ header files, and for Windows the Xerces-C++ .lib file. 
   If you want to rebuild with the ICU, you will need to download the ICU source package to build the ICU libraries. </p>
<table class="note">
<tr>
<td class="noteImg">
<img src="resources/note.gif" alt="note" />
</td>
<td class="noteTxt">You can also download Xalan-C++ source distributions from <a href="" />: Xalan-C_1_11_0-src.zip 
      and Xalan-C_1_11_0-src.tar.gz. Xerces-C++ source distributions are available from <a href="" />: 
      xerces-c-3.1.1-src.zip and xerces-c-3.1.1-src.tar.gz.</td>
</tr>
</table>
<p>Keep in mind that at any given point in time the Xalan-C++ and Xerces-C++ source trees in the Apache XML repository may not 
   be consistent. When we release a version of Xalan-C++ we certify that it is compatible with a given version of Xerces-C++. To 
   be safe, use the Xerces distributions that we certify as compatible. Reminder: Xalan-C++ Version 1.11 is compatible with 
   Xerces-C++ version 3.1.1.</p>
<p>For information on using the <a href="" />, see <a href="usagepatterns.html#icu">Using the ICU</a>.
   The recommended version of ICU for Xalan-C++ Version 1.11 is International Components for Unicode(ICU) version 3.2. You may be able to use newer ICU releases as they appear.</p>


<a name="win32">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h4>Steps for doing a Windows build</h4>
<p>To build Xalan-C++ on Windows, you need Xerces-C++ and a C++ compiler for Windows (either MS Visual C++ 6.0 installed with Service 
   Pack 5 for Visual C++ OR Visual Studio .NET).</p> 
<p>If you are using a different Service Pack, you must rebuild all of the Xerces and Xalan binaries.</p>
<p>Before you do the following, be sure you have <a href="install.html#windowspath">provided Visual C++ the paths to 
   the Xerces headers and libraries</a>.</p>
<ol>    
  <li>Create the XERCESCROOT environment variable and set it to the path of the root directory of Xerces-C++.</li>
  <li>If you are building with ICU, create the ICUROOT environment variable and set it the the path of the ICU root directory.</li>
  <li>Use Visual C++ to open the Xalan workspace (.dsw) from the xml-xalan\c\Projects\Win32\VC6.  If you are building with 
      ICU, then use XalanICU.dsw.  Otherwise, open the Xalan.dsw workspace.<br />
<br />
  <table class="note">
<tr>
<td class="noteImg">
<img src="resources/note.gif" alt="note" />
</td>
<td class="noteTxt">You may need to restart Visual Studio .NET in order for ICUROOT and XERCESCROOT to take effect.</td>
</tr>
</table>
  <br />
  As an alternative method to the steps described above, would be to go to "Tools" and select "Options" from Visual C++.  From the 
  "Options" window, click on the "Directories" tab and do the following:
  <ol>
    <li>Show Directories for: Executable files.  Add the Xerces bin directory to the list.</li>
    <li>Show Directories for: Include files.  Add the Xerces include directory to the list.  If you are building with ICU, add the 
        ICU include directory to the list as well.</li>
    <li>Show Directories for: Library files. Add the Xerces lib directory to the list.  If you are building with ICU, add the ICU 
        lib directory to the list as well.</li>
  </ol>
</li>
</ol>

<table class="note">
<tr>
<td class="noteImg">
<img src="resources/note.gif" alt="note" />
</td>
<td class="noteTxt">To recompile existing applications without changing your source code, be sure to modify your Project settings to pick up the 
      Xalan headers in its new location. (see image below)</td>
</tr>
</table>
<p>
<img src="options-sane.gif" alt="Visual C++ 6.0 Include Directories change" />
</p>



<a name="dotNet">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h4>Steps for doing a Windows Build with Microsoft Visual Studio .NET</h4>
<p>For users who want to build with Visual Studio .NET,</p>
<ol>
  <li>Create the XERCESCROOT environment variable and set it to the path of the root directory of Xerces-C++.</li>
  <li>If you are building with ICU, create the ICUROOT environment variable and set it to the path of the ICU root directory.</li>
  <li>Use Visual Studio .NET to open the Xalan solution (.sln) from the xml-xalan\c\Projects\Win32\VC7.1.  If you are building 
      with ICU, then use XalanICU.sln.  Otherwise, open the Xalan.sln solution file.<br />
<br />
  <table class="note">
<tr>
<td class="noteImg">
<img src="resources/note.gif" alt="note" />
</td>
<td class="noteTxt">You may need to restart Visual Studio .NET in order for ICUROOT and XERCESCROOT to take effect.</td>
</tr>
</table>
  <br />
  An alternative method to the steps described above, would be to go to "Tools" and select "Options" from Visual Studio .NET.  From 
  the "Options" window, click on the "Projects" folder to expand the list.  Select "VC++ Directories" from the list and do the following:
  <ol>
    <li>Show Directories for: Executable files.  Add the Xerces bin directory to the list.</li>
    <li>Show Directories for: Include files.  Add the Xerces include directory to the list.  If you are building with ICU, add the 
        ICU include directory to the list as well.</li>
    <li>Show Directories for: Library files. Add the Xerces lib directory to the list.  If you are building with ICU, add the ICU 
        lib directory to the list as well.</li>
  </ol>
</li>
</ol>

<table class="note">
<tr>
<td class="noteImg">
<img src="resources/note.gif" alt="note" />
</td>
<td class="noteTxt">To recompile existing applications without changing your source code, be sure to modify your Project settings to pick up the 
      Xalan headers in its new location. (see image below)</td>
</tr>
</table>
<p>
<img src="NET_options.jpg" alt="Visual Studio .NET Include Directories change" />
</p>



<a name="unix">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h4>Steps for doing a UNIX build</h4>
<p>For users who want to build in the UNIX environment,</p>
<ol>
  <li>The Xalan build files are written for GNU make, and will not work with other make utilities.<br />
<br />
</li>    
  <li>Set the XERCESCROOT environment variable to the path to the root directory of Xerces-C++.<br />
<br />
</li>    
  <li>Set the XALANCROOT environment variable to the path to the c directory in the root directory of the Xalan-C++
      distribution.  For example, if the distribution is located in "/home/mydir", you would set the XALANCROOT to 
      "/home/mydir/xml-xalan/c". <br />
<br />
</li>
  <li>(Optional) If you decide to build with ICU, integrate the build with ICU by installing the ICU (see <a href="usagepatterns.html#icu">Using the ICU</a>) and defining XALAN_USE_ICU to a value, for example:
      export XALAN_USE_ICU=true.  Set the ICUROOT environment variable to the path to the root directory of ICU.  
      Note that building Xalan with ICU requires that Xerces must also be built with ICU.<br />
<br />
</li>
  <li>Change directory to XALANCROOT. You can also build Xalan-C outside of the source tree, but you will need to adjust the path to the
      runConfigure script in the next step.<br />
<br />
</li>      
  <li>Run the runConfigure utility and provide the platform, C compiler, and C++ compiler flags as 
      indicated below.  The runConfigure utility is used to generate the appropriate Makefile for 
      the desired build platform based on the options specified by the user. Valid options for the 
      runConfigure utility are:<br />
<br />
      <code>./runConfigure -p &lt;value&gt; -c &lt;value&gt; -x &lt;value&gt; [-[flag] &lt;value&gt;]</code>
<br />
<br />
      <table border="1">
        <tr>
<th class="content" rowspan="1" colspan="1">flag</th>
<th class="content" rowspan="1" colspan="1">Description</th>
</tr>
        <tr>
<td class="content" rowspan="1" colspan="1">p</td>
<td class="content" rowspan="1" colspan="1">Build platform. Option must be provided by user. Valid values <br />include: 
                          aix, linux, freebsd, netbsd, solaris, hp-10, hp-11, hp-11-ia64, irix,<br /> 
                          tru64, macosx, cygwin. </td>
</tr>
        <tr>
<td class="content" rowspan="1" colspan="1">c</td>
<td class="content" rowspan="1" colspan="1">C compiler name. Example: gcc, cc, c89, xlc_r, etc.</td>
</tr>
        <tr>
<td class="content" rowspan="1" colspan="1">x</td>
<td class="content" rowspan="1" colspan="1">C++ compiler name. Example: g++, xlC_r, CC, etc.</td>
</tr>
        <tr>
<td class="content" rowspan="1" colspan="1">d</td>
<td class="content" rowspan="1" colspan="1">Indicates build is a debug build. Takes no values. Default is no <br />debug.</td>
</tr>
        <tr>
<td class="content" rowspan="1" colspan="1">t</td>
<td class="content" rowspan="1" colspan="1">Transcoder to use. Valid value is 'icu'. Default is null.</td>
</tr>
        <tr>
<td class="content" rowspan="1" colspan="1">m</td>
<td class="content" rowspan="1" colspan="1">Type of localization support method. Valid values include: inmem, <br />icu, and nls. 
                          Default is inmem.</td>
</tr>
        <tr>
<td class="content" rowspan="1" colspan="1">M</td>
<td class="content" rowspan="1" colspan="1">Locale for Message Localization Support. Default is "en_US"</td>
</tr>
        <tr>
<td class="content" rowspan="1" colspan="1">r</td>
<td class="content" rowspan="1" colspan="1">Threads option. Valid values include: pthread or dce. Default is <br />pthread. 
                          (valid on HP-UX only)</td>
</tr>
        <tr>
<td class="content" rowspan="1" colspan="1">b</td>
<td class="content" rowspan="1" colspan="1">Specify whether it is a 32-bit or 64-bit build. Valid values are 32 <br />and 64. 
                          Default is 32-bit</td>
</tr>
        <tr>
<td class="content" rowspan="1" colspan="1">P</td>
<td class="content" rowspan="1" colspan="1">Install root directory. Used if invoking build with gmake install or <br />gmake 
                          install-package. Default install root directory is /usr/local</td>
</tr>
        <tr>
<td class="content" rowspan="1" colspan="1">l</td>
<td class="content" rowspan="1" colspan="1">Extra link options other than the default. Default is null</td>
</tr>
        <tr>
<td class="content" rowspan="1" colspan="1">z</td>
<td class="content" rowspan="1" colspan="1">Extra compiler options other than the default. Default is null</td>
</tr>
        <tr>
<td class="content" rowspan="1" colspan="1">C</td>
<td class="content" rowspan="1" colspan="1">Extra configuration options.</td>
</tr>
        <tr>
<td class="content" rowspan="1" colspan="1">h</td>
<td class="content" rowspan="1" colspan="1">To get help on the above commands. Default is no help.</td>
</tr>
      </table>
<br />
      <b>
<i>Linux using GCC:</i>
</b>  <code>./runConfigure -p linux -c gcc -x g++</code>
<br />
      <b>
<i>Linux using the Intel compiler:</i>
</b>  <code>./runConfigure -p linux -c icc -x icc</code>
<br />
      <b>
<i>AIX (32-bit):</i>
</b>    <code>./runConfigure -p aix -c xlc_r -x xlC_r</code>
<br />
<br />
      <b>
<i>AIX (64-bit):</i>
</b>    <code>./runConfigure -p aix -c xlc_r -x xlC_r -b 64</code>
<br />
<br />
      <b>
<i>Cygwin (32-bit):</i>
</b>  <code>./runConfigure -p cygwin -c gcc -x g++</code>
<br />
<br />
      <b>
<i>HP-UX 11 (32-bit):</i>
</b>  <code>./runConfigure -p hp-11 -c cc -x aCC</code>
<br />
<br />
      <b>
<i>HP-UX 11 (64-bit):</i>
</b>  <code>./runConfigure -p hp-11 -c cc -x aCC -b 64</code>
<br />
<br />
      <b>
<i>HP-UX 11 for Itanium (32-bit):</i>
</b>  <code>./runConfigure -p hp-11-ia64 -c cc -x aCC</code>
<br />
<br />
      <b>
<i>HP-UX 11 for Itanium (64-bit):</i>
</b>  <code>./runConfigure -p hp-11-ia64 -c cc -x aCC -b 64</code>
<br />
<br />
      <b>
<i>Solaris (32-bit):</i>
</b>  <code>./runConfigure -p solaris -c cc -x CC</code>
<br />
<br />
      <b>
<i>Solaris (64-bit):</i>
</b>  <code>./runConfigure -p solaris -c cc -x CC -b 64</code>
<br />
<br />
      if you choose to install the distribution after building the libraries and executables, 
      then you will need to indicate where you would like the distribution to be installed. 
      To specify the install directory for your distribution, specify the flag -P &lt;install directory&gt;. 
      for example, building and installing on the AIX platform:<br />
<br />
      <code>./runConfigure -p aix -c xlc_r -x xlC_r -P $HOME/my_xalan</code>
<br />
<br />
      <table class="note">
<tr>
<td class="noteImg">
<img src="resources/note.gif" alt="note" />
</td>
<td class="noteTxt">The standard binary directories bin, lib, and include are created in the specified directory only if the install or 
            install-package option is specified in the build process.<br />
<br />
</td>
</tr>
</table>
      To see the other runConfigure flags you may include, use the help flag:<br />
<br />
           <code>./runConfigure -h</code>
<br />
<br />
</li>
  <li>Purge the previous build:<br />
<br />
      <code>     make clean</code>
<br />
<br />
</li>
  <li>Run the new build:<br />
<br />
           <code>make</code>
<br />
      or<br />
           <code>make <b>
<i>targ</i>
</b>
</code>
<br />
<br />
      where <b>
<i>targ</i>
</b> can be one of:
      <table border="1">
        <tr>
<th class="content" rowspan="1" colspan="1">targ</th>
<th class="content" rowspan="1" colspan="1">Description</th>
</tr>
        <tr>
<td class="content" rowspan="1" colspan="1">all</td>
<td class="content" rowspan="1" colspan="1">Build the libraries and Xalan executable. This is the default target <br />if no targ 
                            is specified.</td>
</tr>
        <tr>
<td class="content" rowspan="1" colspan="1">clean</td>
<td class="content" rowspan="1" colspan="1">Deletes existing binaries, executables, libraries, tests, and <br />samples.</td>
</tr>
        <tr>
<td class="content" rowspan="1" colspan="1">install</td>
<td class="content" rowspan="1" colspan="1">Build the library, executables, and samples, and copy them (along with <br />the header files) 
                                the specified install location.</td>
</tr>
        <tr>
<td class="content" rowspan="1" colspan="1">install-package</td>
<td class="content" rowspan="1" colspan="1">Installs the library, executables, and samples to the <br />specified location.</td>
</tr>
        <tr>
<td class="content" rowspan="1" colspan="1">Samples</td>
<td class="content" rowspan="1" colspan="1">Builds the samples.</td>
</tr>
        <tr>
<td class="content" rowspan="1" colspan="1">Tests</td>
<td class="content" rowspan="1" colspan="1">Builds the tests.</td>
</tr>
      </table>
      </li>
</ol>



<a name="locale">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h4>Steps for doing a Build with Message Localization Support</h4>
<p>Message Localization Support is a new feature to allow users to build Xalan-C++  such that diagnostic messages are issued 
   in the language of their choice. Message localization support comes in three flavours:</p>
<ul>
  <li>Building static messages in the form of a library (DLL or shared object) which can be bound 
      to the Xalan executable. This method is referred to as "in memory".  By default, Xalan-C++ is built using "in memory" 
      method.</li>
  <li>Building messages in the form of a library using localization support provided by the International Components for 
      Unicode (ICU). </li>
  <li>Building messages in the form of a message catalog. This method utilizes the localization support provided by the Unix 
      National Language Support (NLS) system. This method is supported for UNIX platforms only. </li>
</ul>
<p>Regardless of which method you choose, a message file containing translated messages in the language of your choice must 
   be provided. The standard message file provided in the Xalan-C++ Version 1.11 source package is in XML Localization Interchange 
   File Format (XLIFF) format and conforms to the XLIFF 1.1 standard (please see 
   <a href="http://www.oasis-open.org/committees/xliff/documents/xliff-specification.htm">
   http://www.oasis-open.org/committees/xliff/documents/xliff-specification.htm</a> for more information.) All message files 
   must be written and conform with the XLIFF 1.1 standard.</p>
<p>Once an XLIFF message file has been created, the XLIFF file should be stored under xml-xalan/c/src/xalanc/NLS/&lt;locale_name&gt; 
   directory (for example, the default XLIFF message file provided is XalanMsg_en_US.xlf). To build, you will need to follow the 
   same steps as shown above for building in Unix or Windows but with a small change.</p>
<p>For building on Windows platform with "In Memory" method:</p>
<ol>
  <li>Create the environment variable XERCESCROOT and set it to the path to the root directory of Xerces-C++.</li>
  <li>Create the environment variable ICUROOT and set it to the path to the ICU root directory.</li>
  <li>Open the Xalan.dsw workspace using Microsoft Visual C++. The "inmem" localization method should be configured by default.</li>
  <li>Select the Localization project, and go to Settings and click on the "General" tab.  Verify 
      the build command line to use "nmake /f BuildMessages.mak TYPE=inmem LOCAL=en_US"</li>
  <li>Run "Build all" with the configuration of your choice. </li>
</ol>
<p>For building on the Windows platform with ICU method:</p>
<ol>
  <li>Create the environment variable XERCESCROOT and set it to the path to the root directory of Xerces-C++.</li>
  <li>Create the environment variable ICUROOT and set it to the path to the ICU root directory.</li>
  <li>Open the XalanICU.dsw workspace using Microsoft Visual C++. </li>
  <li>Select the AllInOneWithICU project, and ensure that the project depends on the LocalizationWithICU 
      project. </li>
  <li>Select the LocalizationWithICU project, and go to Settings and click on the "General" tab. Modify 
      the build command line to use "nmake /f BuildMessages.mak TYPE=icu LOCAL=en_US"</li>
  <li>Open the tools.ini file under Projects\Win32\VC6\Utils\Localization and add the ICU root 
      directory to the ICUROOT variable setting.</li>
  <li>Run "Build all" with the configuration of your choice. </li>
</ol>
<p>For building on the Unix platform:</p>
<ol>
  <li>Repeat steps 1 through 5 as outlined under "Steps for doing a UNIX Build" </li>
  <li>Run the runConfigure and provide the platform, C compiler, C++ compiler, the message locale 
      system flavour you are intending to build, and the locale support.<br />
<br />
      Example 1: to use the NLS method for localization support using the default locale en_US:<br />
<br />
      <b>
<i>AIX (32-bit):</i>
</b>  <code>./runConfigure -p aix -c xlc_r -x xlC -m nls</code>
<br />
<br />
      <b>
<i>AIX (64-bit):</i>
</b>  .<code>/runConfigure -p aix -c xlc_r -x xlC_r -b 64 -m nls</code>
<br />
<br />
      Example 2: to use the 'icu' method for localization support using the locale fr_FR:<br />
<br />
      <b>
<i>AIX (32-bit):</i>
</b>  <code>./runConfigure -p aix -c xlc_r -x xlC_r -m icu -M fr_Fr</code>
<br />
<br />
      <b>
<i>AIX (64-bit):</i>
</b>  <code>./runConfigure -p aix -c xlc_r -x xlC_r -b 64 -m icu -M fr_Fr</code>
<br />
<br />
  </li>
  <li>Perform steps 7 and 8 as outlined under "Steps for doing a UNIX Build" </li>
</ol>
<p>After Xalan-C++ and associated libraries have been successfully built, the message catalog will be stored in the directory 
   xml-xalan/c/bin.<br />
<br />
<table border="1">
  <tr>
<th class="content" rowspan="1" colspan="1">Localization Build Type</th>
<th class="content" rowspan="1" colspan="1">File Name</th>
</tr>
  <tr>
<td class="content" rowspan="1" colspan="1">
<b>
<i>ICU or "in memory" method:</i>
</b>
</td>
<td class="content" rowspan="1" colspan="1">libxalanMsg111.so (for UNIX)<br />
          XalanMessages_1_11.dll and XalanMessages_1_11.lib (for Windows)</td>
</tr>
  <tr>
<td class="content" rowspan="1" colspan="1">
<b>
<i>NLS method:</i>
</b>
</td>
<td class="content" rowspan="1" colspan="1">xalanMsg1_11.cat can be found in $XALANCROOT/nls/&lt;locale_name&gt;/ directory</td>
</tr>
</table>
</p>
<p>The location of the message library, Xalan-C++ and Xerces-C++ binaries need to be added to the PATH and library path variables. 
   Depending on the Message Localization Support method you've chosen, the following steps will need to be performed such that 
   Xalan-C++ will be able to utilize the message library. </p>
<ul>
  <li>For an "in memory" or "icu" build, the location of the Xalan-C++ and Xerces-C++ executables need to be added to the PATH variable. 
      The location of the message library will need to be added to: 
      <ul>
        <li>the LIBPATH variable for AIX users </li>
        <li>the LD_LIBRARY_PATH variable for RedHat, SuSE, and Solaris users </li>
        <li>the SHLIB_PATH variable for HP-UX users. </li>
      </ul>
  </li>
  <li>For an NLS build, the message catalog will need to be added to the NLSPATH. </li>
</ul>   
 100 77550    0 24677  100 52873   181k   389k --:--:-- --:--:-- --:--:--  391k
  



<p align="right" size="2">
<a href="#content">(top)</a>
</p>
</div>
<div id="footer">Copyright © 1999-2012 The Apache Software Foundation<br />Apache, Xalan, and the Feather logo are trademarks of The Apache Software Foundation<div class="small">Web Page created on - </div>
</div>
</body>
</html>

../../extra/xdocs/builddocs.xml
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0HTTP/1.1 100 Continue

HTTP/1.1 200 OK
Date: Mon, 17 Apr 2017 01:22:22 GMT
Server: Apache/2.4.10 (Debian)
Vary: Accept-Encoding
Transfer-Encoding: chunked
Content-Type: text/plain; charset=utf-8


<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>ASF: Building The Documents</title>
<meta http-equiv="content-type" content="text/html; charset=UTF-8" />
<meta http-equiv="Content-Style-Type" content="text/css" />
<link rel="stylesheet" type="text/css" href="resources/apache-xalan.css" />
</head>
<!--
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements. See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership. The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the  "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 -->
<body>
<div id="title">
<table class="HdrTitle">
<tbody>
<tr>
<th rowspan="2">
<a href="http://www.apache.org">
<img alt="Trademark Logo" src="resources/asf_logo.png" width="144" height="75" />
</a>
</th>
<th text-align="center" width="75%">
<a href="index.html" />
</th>
</tr>
<tr>
<td valign="middle">Building The Documents</td>
</tr>
</tbody>
</table>
<table class="HdrButtons" align="center" border="1">
<tbody>
<tr>
<td>
<a href="http://www.apache.org">Apache Foundation</a>
</td>
<td>
<a href="http://xalan.apache.org">Xalan Project</a>
</td>
<td>
<a href="http://xerces.apache.org">Xerces Project</a>
</td>
<td>
<a href="http://www.w3.org/TR">Web Consortium</a>
</td>
<td>
<a href="http://www.oasis-open.org/standards">Oasis Open</a>
</td>
</tr>
</tbody>
</table>
</div>
<div id="navLeft">
<ul />
</div>
<div id="content">
<h2>Building The Documents</h2>
<ul>
<li>
<a href="#thedocs">The Xalan-C/C++ HTML Documentation</a>
</li>
<li>
<a href="#unixsetup">Setup UNIX for Building the Documents</a>
</li>
  <ul>
  <li>
<a href="#unixdocbld">Build the Documentation on UNIX</a>
</li>
  </ul>
<li>
<a href="#winsetup">Setup WINDOWS for Building the Documents</a>
</li>
<li>
<a href="#aboutstylebook">About the StyleBook XML Markup</a>
</li>
  <ul>
  <li>
<a href="#sb_dirlayout">Source Directory Layout</a>
</li>
  <li>
<a href="#sb_scripts">Document Building Scripts</a>
</li>
  </ul>
</ul>
<p>Our HTML web page construction does not use or require
any Java installed or the use of JavaScript.</p>

<a name="thedocs">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>The Xalan-C/C++ HTML Documentation</h3>
<p>The current Xalan-C/C++ HTML documentation pages are available on our website
   <a href="http://xalan.apache.org/xalan-c/index.html">
   http://xalan.apache.org/xalan-c</a>.</p>
<p>The HTML documentation pages can be built from the Xalan-C
source distribution.  Let <code>${XALANC}</code> indicate the top directory
of the source distribution.</p>
<blockquote class="source">
<pre>
   ${XALANC}/src/ = the program library source files
   ${XALANC}/xdocs/ = the program documentation source files
   ${XALANC}/build/docs/ = the directory created for documentation builds
   ${XALANC}/build/docs/apiDocs/html/ = apiDocs created here, then moved
   ${XALANC}/build/docs/xalan-c/ =  the HTML documentation tree
</pre>
</blockquote>
<p>UNIX platforms can build the complete documentation package (web pages plus
interactive api reference).</p>
<p> Windows platforms an only build the basic web pages.</p>

<a name="unixsetup">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>Setup UNIX for Building the Documents</h3>
<ol>
<li>Requires the <code>
<b>Xalan</b>
</code> executable in the <code>${PATH}</code> environment.</li>
<li>Requires the <code>
<b>libxerces-c.so</b>
</code> and 
    <code>
<b>libxalan-c.so</b>
</code> libraries in a path
   that is accessible to the <code>
<b>Xalan</b>
</code> executable.</li>
<li>Requires a current installation of the 
    <a href="http://www.doxygen.org">Doxygen</a> package.</li>
<li>The interactive graphics for apiDocs require the 
    <a href="http://www.graphviz.org">GraphViz</a> (dot) package.</li>
</ol>
<a name="unixdocbld">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h4>Build the Documentation on UNIX</h4>
<ol>
<li>Connect to the <code>${XALANC}/xdocs/</code> directory.</li>
<li>Run the <code>
<b>make-apiDocs.sh</b>
</code> (full graphics) or 
    <code>
<b>make-apiDocs-nograf.sh</b>
</code> (no graphics).</li>
<li>The script automatically chains to <code>
<b>sources/make-book.sh</b>
</code>
   for building the remainder of the documentation.</li>
<li>You can now relocate and package the documentation at
   <code>${XALANC}/build/docs/xalan-c/</code>
   to your final destination of choice.</li>
</ol>


<a name="winsetup">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>Setup WINDOWS for Building the Documents</h3>
<ol>
<li>Create a <code>%XALANC%\bin\</code> directory. Then copy the 
  <code>
<b>xalan.exe</b>
</code> and the DLL
   libraries for xerces-c and xalan-c into that directory.  This is where
   the <code>
<b>make-xalan.bat</b>
</code> file expects to find the 
   <code>
<b>xalan.exe</b>
</code> executable.</li>

<li>Connect to the <code>%XALANC%\xdocs\sources\</code> directory.</li>

<li>Run the <code>
<b>make-book.bat</b>
</code> script to create 
   the <code>%XALANC%\build\docs\xalan-c\</code> documentation.</li>

<li>You can now relocate and package the documentation at
   <code>%XALANC%\build\docs\xalan-c\</code> to your final destination of choice.</li>
</ol>
<table class="note">
<tr>
<td class="noteImg">
<img src="resources/note.gif" alt="note" />
</td>
<td class="noteTxt">WINDOWS has no Doxygen program for building the apiDocs.
Building apiDocs requires a Linux or UNIX platform.  You might
be able to use WINDOWS JavaDocs to get an interactive apiDocs reference.
The JavaDocs program is part of the Java Developer's platform.</td>
</tr>
</table>
<p>Our documentation does not rely on any Java installation.</p>

<a name="aboutstylebook">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>About the StyleBook XML Markup</h3>
<p>The obsolete Apache Java Stylebook program is no longer being used.
The StyleBook XML markup has been slightly modified to accommodate
standard XSLT stylesheet transformations.</p>
<p>A standard <code>
<b>stylebook.xslt</b>
</code> XML transform stylesheet now
allows any standard compliant XSLT processor to prepare the
basic webpage documents.  The resulting documents are in strict
XHTML.  The source pages have been adjusted so that
compliant XML output mode is used and that transitional web
browsers are accommodated.</p>
<p>We also include a DTD library so that the markup source pages
can be processed with a validating XML parser.  The parser used
with the <code>
<b>stylebook.xslt</b>
</code> stylesheet
must accommodate top-level string parameters and the ability to
process DTD definitions.</p>
<p>Our stylebook processing scripts currently expect to use the
Apache Xalan-C/C++ command-line executable program.</p>

<a name="sb_dirlayout">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h4>Source Directory Layout</h4>
<blockquote class="source">
<pre>
  ${XALAN}/xdocs/style/dtd/*  -- the validation DTD definitions
  ${XALAN}/xdocs/sources/stylebook.xslt -- the XML StyleBook transform
  ${XALAN}/xdocs/sources/xalan/* -- the StyleBook XML page content
  ${XALAN}/xdocs/sources/xalan-graphic/* -- page specific graphics
  ${XALAN}/xdocs/sources/xslt-resources/* -- logos and css stylesheets
  ${XALAN}/xdocs/sources/xalan.xml  -- the book navigation 100 48121    0  9540  100 38581  91487   361k --:--:-- --:--:-- --:--:--  362k
panel
  ${XALAN}/xdocs/sources/entities.ent -- book XML general entity definitions
  ${XALAN}/xdocs/sources/xalan/resources.xml -- general resource links
  ${XALAN}/build/docs/xalan-c/* -- the StyleBook html transformed pages
</pre>
</blockquote>
<p>The resulting document from <code>
<b>stylebook.xslt</b>
</code> is strict XHTML with 
markup rules that can also be supported on transitional browsers.
To guard against XML element collapse, we use the Unicode 
zero-width-non-joining character to provide non-empty content.
Element collapse prevention is not handled by the "stylebook.xslt" transform.
The Apache <code>Xalan</code> or <code>xalan.exe</code> programs do not
should guard against unwanted element collapse.</p>

<a name="sb_scripts">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h4>Document Building Scripts</h4>
<blockquote class="source">
<pre>
  ${XALAN}/xdocs/sources/make-xalan.sh {pagename} -- transform a single page
  ${XALAN}/xdocs/sources/make-xalan.bat {pagename} -- transform a single page
</pre>
</blockquote>
<blockquote class="source">
<pre>
  ${XALAN}/xdocs/sources/make-book.sh -- transform an entire book
  ${XALAN}/xdocs/sources/make-book.bat -- transform an entire book
</pre>
</blockquote>


<p align="right" size="2">
<a href="#content">(top)</a>
</p>
</div>
<div id="footer">Copyright © 1999-2012 The Apache Software Foundation<br />Apache, Xalan, and the Feather logo are trademarks of The Apache Software Foundation<div class="small">Web Page created on - </div>
</div>
</body>
</html>

../../extra/xdocs/buildlibs.xml
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0HTTP/1.1 100 Continue

HTTP/1.1 200 OK
Date: Mon, 17 Apr 2017 01:22:22 GMT
Server: Apache/2.4.10 (Debian)
Vary: Accept-Encoding
Transfer-Encoding: chunked
Content-Type: text/plain; charset=utf-8


<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>ASF: Building Xalan-C/C++</title>
<meta http-equiv="content-type" content="text/html; charset=UTF-8" />
<meta http-equiv="Content-Style-Type" content="text/css" />
<link rel="stylesheet" type="text/css" href="resources/apache-xalan.css" />
</head>
<!--
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements. See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership. The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the  "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 -->
<body>
<div id="title">
<table class="HdrTitle">
<tbody>
<tr>
<th rowspan="2">
<a href="http://www.apache.org">
<img alt="Trademark Logo" src="resources/asf_logo.png" width="144" height="75" />
</a>
</th>
<th text-align="center" width="75%">
<a href="index.html" />
</th>
</tr>
<tr>
<td valign="middle">Building Xalan-C/C++</td>
</tr>
</tbody>
</table>
<table class="HdrButtons" align="center" border="1">
<tbody>
<tr>
<td>
<a href="http://www.apache.org">Apache Foundation</a>
</td>
<td>
<a href="http://xalan.apache.org">Xalan Project</a>
</td>
<td>
<a href="http://xerces.apache.org">Xerces Project</a>
</td>
<td>
<a href="http://www.w3.org/TR">Web Consortium</a>
</td>
<td>
<a href="http://www.oasis-open.org/standards">Oasis Open</a>
</td>
</tr>
</tbody>
</table>
</div>
<div id="navLeft">
<ul />
</div>
<div id="content">
<h2>Building Xalan-C/C++</h2>
<ul>
<li>
<a href="#SourceTools">The Distribution Source Tools</a>
</li>
  <ul>
  <li>
<a href="#WinBldScripts">Prepare Windows Build Scripts"</a>
</li>
  <li>
<a href="#PrepUnixBld">Prepare Unix Build Scripts</a>
</li>
  </ul>
<li>
<a href="#winbldenv">Windows Build Environment</a>
</li>
  <ul>
  <li>
<a href="#winbld">Windows Basic Build Instruction</a>
</li>
  <li>
<a href="#winbldcmd">Sample Windows Build Command File</a>
</li>
  <li>
<a href="#winbldinst">Installing the Xalan Library on Windows</a>
</li>
  </ul>
<li>
<a href="#unixbldenv">UNIX Build Environment</a>
</li>
  <ul>
  <li>
<a href="#unixlibpath">Finding Runtime Libraries</a>
</li>
  <li>
<a href="#unixbldxalan">Building the Xalan-C/C++ XSLT Libraries for UNIX</a>
</li>
  </ul>
<li>
<a href="#unixcompileref">Reference on Unix Platforms and C++ Compilers</a>
</li>
<li>
<a href="#xercesmodules">Xerces-C/C++ Transcoders and Plug-in Modules</a>
</li>

</ul>

<br />
<p>The Xalan-C/C++ XSLT library is built upon the Xerces-C/C++ XML Parser library. 
   Before compiling the Xalan-C/C++ XSLT library, you must have a usable Xerces-C/C++ library.
</p>
<p>You can either install a compatible binary distribution of Xerces-C/C++ or 
   build your own from a source distribution of Xerces-C/C++.  You can gain additional 
   capability if you build the Xerces-C/C++ XML Parser library from sources.  
   The Xerces-C/C++ binary distribution is not built for the IBM-ICU libraries.  
   The IBM-ICU libraries provide additional transcoding services.
</p>
<p>Building from the source code packages for Xerces and Xalan libraries ensures that the 
   resulting packages are proper for your system.  There are various binary distributions 
   available, but incompatibilities between C++ compilers (even between compiler versions)
   are known to cause issues with sharing of libraries.
</p>
<p>You can get more information on the Xerces-C/C++ distributions at the 
   <a href="http://xerces.apache.org/xerces-c">http://xerces.apache.org/xerces-c</a> web site.
</p>

<a name="SourceTools">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>The Distribution Source Tools</h3>
<p>We are including in the distribution some script files that can help with
   build environment setup and distribution package creation.  These script
   packages are working examples that developers can use for their own work.</p>

<ul>
<li>
<b>
<code>(src)/scripts/xalan-ms-scripts.zip</code>
</b> For Windows Packages</li>
<li>
<b>
<code>(src)/scripts/xalan-unix-scripts.tar</code>
</b> For Unix/Linux Packages</li>
</ul>

<p>The following discussions in this chapter describe the rules by which these
   scripts were written.</p>
<a name="WinBldScripts">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h4>Prepare Windows Build Scripts</h4>
<p>I use the <code>
<b>C:\Apache\xalan-builds\</b>
</code> directory as the home path
   for building Windows packages.  You may need to edit the scripts for your own
   package build location.</p>
<p>You will need a copy of Microsoft Visual Studio .NET installed on your development computer.</p>
<ol>
<li>Create your package building directory.</li>
<li>Unzip the <code>
<b>xalan-ms-scripts.zip</b>
</code> into your package building directory.</li>
<li>Copy the Xerces-C sources into a builds subdirectory <code>
<b>xerces-src-31</b>
</code>.</li>
<li>Copy the Xalan-C sources into a builds subdirectory <code>
<b>xalan-src-11</b>
</code>.</li>
<li>You need the Xerces-C binaries available before building the Xalan-C sources.</li>
   <ul>
      <li>Build the Xerces-C sources using an appropriate 
          <code>
<b>xerces-build-31-*.bat</b>
</code> script.
          This script launches Microsoft Visual Studio with an appropriate environment set.</li>
      <li>Construct the Xerces-C binary package using the appropriate
          <code>
<b>xerces-inst-31-*.bat</b>
</code> script.  This binary package is later
          used for the XERCESCPKG environment variable.</li>
   </ul>
<li>You can now create the Xalan-C binary package.</li>
   <ul>
      <li>Build the Xalan-C sources using an appropriate
          <code>
<b>xalan-build-11-31-*.bat</b>
</code> script.
          This script launches Microsoft Visual Studio with an appropriate environment set.</li>
      <li>Construct the Xalan-C binary package using the apppropriate
          <code>
<b>xalan-inst-11-31-*.bat</b>
</code> script. This binary package can later
          be used for the XALANCPKG environment variable.</li>
   </ul>
<li>You can now copy the (XERCESCPKG-31)/bin to your Windows installation directory.</li>
<li>You can now copy the (XALANCPKG-11-31)/bin to your Windows installation directory.</li>
<li>You can also merge the (XERCESCPKG-31)/include and (XALANCPKG-11-31)/include to your
    Windows installation directory.</li>
<li>You can also merge the (XERCESCPKG-31)/lib and (XALANCPKG-11-31)/lib to your
    Windows installation directory.</li>
</ol>

<a name="PrepUnixBld">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h4>Prepare Unix Build Scripts</h4>
<p>I use my <code>
<b>$HOME</b>
</code> directory as the path into which 
   <code>
<b>xalan-unix-scripts.tar</b>
</code> is extracted.  
   I create subdirectory <code>
<b>xerces-src</b>
</code> for the Xerces-C sources and
   another subdirectory <code>
<b>xalan-src</b>
</code> for the Xalan-C sources.  
   I then create separate directories into which the actual build process
   takes place.</p>
<p>Directory <code>
<b>Xerces-Build</b>
</code> is where I make the Xerces-C binaries.</p>
<p>Directory <code>
<b>Xalan-Build</b>
</code> is where I make the Xalan-C binaries.</p>
<p>The following scripts are used to make and install the <b>release</b> build 
   of binary products to the <code>
<b>/opt/apache/</b>
</code> target directory path. 
   Connect to the appropriate build directory and execute the appropriate script.
</p>
<ul>
  <li>xerces-build.sh</li>
  <li>xalan-build.sh</li>
</ul>
<p>The following scripts are used to make and install the <b>debug</b> build 
   of binary products to the <code>
<b>/opt/apache/debug/</b>
</code> target directory path.
   Connect to the appropriate build directory and execute the appropriate script.
</p>
<ul>
  <li>xerces-build-debug.sh</li>
  <li>xalan-build-debug.sh</li>
</ul>


<a name="winbldenv">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>Windows Build Environment</h3>

<p>Build support for Microsoft Visual Studio (VC6) is deprecated.
</p>
<p>Building Xalan-C/C++ with Microsoft Visual Studio (VC6) requires the Xerces-C/C++ version 2.8 or older releases.  Microsoft VC6 is removed from the Xerces-C/C++ Version 3.x releases.
</p>
<p>Building Xalan-C/C++ with Microsoft Visual Studio .NET 2008 (VC9) requires Xerces-C/C++ version 3.1 or newer.  Building with Microsoft Visual Studio .NET 2010 (VC10) requires Xerces-C/C++ version 3.1.1 or newer.
</p>
<p>Environment variables XERCESCROOT and XALANCROOT are required.  Environment ICUROOT is used only if building Xalan-C/C++ with IBM-ICU library support.
</p>
<table border="1">
<tr>
   <td class="content" rowspan="1" colspan="1">XERCESCROOT</td>
<td class="content" rowspan="1" colspan="1">The Xerces-C/C++ installation directory</td>
</tr>
<tr>
   <td class="content" rowspan="1" colspan="1">XALANCROOT</td>
<td class="content" rowspan="1" colspan="1">The Xalan-C/C++ source directory</td>
</tr>
<tr>
   <td class="content" rowspan="1" colspan="1">ICUROOT</td>
<td class="content" rowspan="1" colspan="1">The IBM-ICU installation directory (only if building with ICU support)</td>
</tr>
</table>

<p>I like to create command or batch files to setup the build environment variables and start the Visual Studio .NET development system using the custom build environment.  I find this much easier than navigating the graphical interface to add custom build environments. The Microsoft *.vsprops custom property files are not available in the early versions of Visual Studio .NET platforms.
</p>
<a name="winbld">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h4>Windows Basic Build Instruction</h4>
<p>If you want to create binary packages from the sources, you may wish to look
at the <a href="#winbldcmd">Windows Build Command File</a> in the next section.
</p>
<p>A quick experiment in building for Windows is documented in the remainder of this section.
</p>
<p>I have Visual Studio 2005, 2008, 2010 on one computer and VC6 and Visual Studio 2003
installed on another computer.
</p>
<p>Microsoft Visual Studio .NET products will usually install 
a Visual Studio Command Prompt icon in the Visual Studio Tools subfolder 
for each version of Visual Studio installed on your computer. 
The Visual Studio Command Prompt automatically sets a basic development environment 
using a "vsvars32.bat" or "vcvarsall.bat" script
for 32-bit or 64-bit platform builds, and leaves you at the command line for 
customizing your environment.
</p>
<p>You then define the XERCESCROOT, XALANCROOT, and ICUROOT environment variables.
</p>
<p>If the Xerces-C DLL files are not in directory %XERCESCROOT%\bin, you must add
a directory to the PATH environment variable so the Xerces-C DLL files can be
found.
</p>
<p>You then launch the Visual Studio .NET by calling <code>devenv</code> with a
path to the <code>Xalan.sln</code> file as a parameter.
</p>
<p>The following section describes how you can build your own scripts to create
binary packages from Xalan-C compiled sources for the various versions of
Microsoft Visual Studio products.
</p>

<a name="winbldcmd">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h4>Sample Windows Build Command File</h4>

<p>I like to use this template for both Xerces-C and Xalan-C builds from sources.  The sample shown here is for Xalan-C/C++ because the installation of Xerces-C/C++ should already have been done.
</p>
<blockquote class="source">
<pre>
SET XERCESCROOT="path to xerces-c installation"
SET XALANCROOT="sources\xalan\c\"
</pre>
</blockquote>
<p>Set the xalan project path for your version of Microsoft Visual Studio .NET.
</p>
<blockquote class="source">
<pre>
:: VS 2003 (VC7.1)
SET XALANCPROJDIR=%XALANCROOT%\Projects\Win32\VC7.1

:: VS 2005 (VC8)
SET XALANCPROJDIR=%XALANCROOT%\Projects\Win32\VC8

:: VS 2008 (VC9)
SET XALANCPROJDIR=%XALANCROOT%\Projects\Win32\VC9

:: VS 2010 (VC10)
SET XALANCPROJDIR=%XALANCROOT%\Projects\Win32\VC10
</pre>
</blockquote>
<p>Set some environment variables so we can easily copy or install the products after they have been built.
</p>
<blockquote class="source">
<pre>
:: VS 2003 (VC7.1)
SET XALANCBUILDDIR=%XALANCROOT%\Build\Win32\VC7.1

:: VS 2005 (VC8)
SET XALANCBUILDDIR=%XALANCROOT%\Build\Win32\VC8

:: VS 2008 (VC9)
SET XALANCBUILDDIR=%XALANCROOT%\Build\Win32\VC9

:: VS 2010 (VC10)
SET XALANCBUILDDIR=%XALANCROOT%\Build\Win32\VC10
</pre>
</blockquote>
<p>We use this Visual Studio .NET solution file.
</p>
<blockquote class="source">
<pre>
SET XALANCBUILDSLN=%XALANCPROJDIR%\xalan.sln
</pre>
</blockquote>
<p>The <code>$(variable)</code> is expanded inside Visual Studio.<br />
The <code>%variable%</code> is expanded by the cmd utility before launching the Visual Studio.
</p>
<blockquote class="source">
<pre>
SET PATH=%WINDIR%\system32;%WINDIR%;%WINDIR%\system32\Wbem
SET INCLUDE=
SET LIB=
SET LIBPATH=
SET SOURCE=
</pre>
</blockquote>
<p>Set the default environment variables for your version of Microsoft Visual Studio .NET.
</p>
<blockquote class="source">
<pre>
:: VS 2000 (VC7) - obsolete
call "%VS70COMNTOOLS%vsvars32.bat"

:: VS 2003 (VC7.1) 32-bit platform
call "%VS71COMNTOOLS%vsvars32.bat"

:: VS 2005 (VC8) 32-bit platform
call "%VS80COMNTOOLS%vsvars32.bat"

:: VS 2005 (VC8) 64-bit platform
call "%VS80COMNTOOLS%\..\..\VC\vcvarsall.bat" x86_amd64

:: VS 2008 (VC9) 32-bit platform
call "%VS90COMNTOOLS%vsvars32.bat"

:: VS 2008 (VC9) 64-bit platform
call "%VS90COMNTOOLS%\..\..\VC\vcvarsall.bat" x86_amd64

:: VS 2010 (VC10) 32-bit platform
call "%VS100COMNTOOLS%vsvars32.bat"

:: VS 2010 (VC10) 64-bit platform
call "%VS100COMNTOOLS%\..\..\VC\vcvarsall.bat" x86_amd64
</pre>
</blockquote>
<p>The LIBPATH and SOURCE environment variables may not be properly 
set by the vsvars32.bat command file.  You may wish to start your 
Visual Studio .NET application without any custom environment 
and examine the Tools -&gt; C/C++ project defaults for the various libraries. 
Then specifically set the paths in the build command file for your project.
</p>
<p>The Xalan-C and Xerces-C libraries do not use the Microsoft Framework, 
the "mfc" and the "atl" directives. Microsoft is deprecating their "mfc"
Microsoft Foundation Classes.
</p>
<p>Define the necessary environment variables for building the Xalan-C/C++ libraries and sample programs.
</p>
<blockquote class="source">
<pre>
SET PATH=%PATH%;%XERCESCROOT%\bin

SET INCLUDE=%INCLUDE%;%XERCESCROOT%\include;%XERCESCROOT%\src
SET INCLUDE=%INCLUDE%;%XALANCROOT%\src

SET LIB=%LIB%;%XERCESCROOT%\lib
</pre>
</blockquote>
<p>If you are going to build for IBM-ICU support, then add the following environments.
</p>
<blockquote class="source">
<pre>
SET ICUROOT="path to ibm-icu installation"

SET PATH=%PATH%;%ICUROOT%\bin
SET INCLUDE=%INCLUDE%;%ICUROOT%\include
SET LIB=%LIB%;%ICUROOT%\lib;%ICUROOT%\data
</pre>
</blockquote>
<p>Now we should be ready to start the Microsoft Visual Studio .NET using our custom environment using the <code>%XALANCBUILDSLN%</code> solution.
</p>
<blockquote class="source">
<pre>
devenv.exe "%XALANCBUILDSLN%" /useenv
</pre>
</blockquote>

<a name="winbldinst">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h4>Installing the Xalan Library on Windows</h4>

<p>The following command script will install the binary and header files to a target directory that is compatible with the XALANCROOT environment variable for creating applications. Environment variables other than XALANCTARGET are defined in the previous section, the <a href="#winbldcmd">Visual Studio .NET build example</a>.
</p>
<blockquote class="source">
<pre>
SET XALANCTARGET="path-to-target-directory"

MKDIR "%XALANCTARGET%\bin"
MKDIR "%XALANCTARGET%\include"
MKDIR "%XALANCTARGET%\lib"

CD "%XALANCBUILDDIR%\Release\Nls"
COPY *.hpp "%XALANCTARGET%"\include

CD "%XALANCBUILDDIR%\Release"
COPY *.DLL "%XALANCTARGET%\bin"
COPY *.LIB "%XALANCTARGET%\lib"
COPY *.EXP "%XALANCTARGET%\lib"

CD "%XALANCBUILDDIR%\Debug"
COPY *.DLL "%XALANCTARGET%\bin"
COPY *.PDB "%XALANCTARGET%\bin"
COPY *.LIB "%XALANCTARGET%\lib"
COPY *.EXP "%XALANCTARGET%\lib"

CD "%XALANCROOT%\src
XCOPY xalanc\*.hpp "%XALANCTARGET%\include\xalanc" /E /C /I /R /Y
XCOPY xalanc\*.h   "%XALANCTARGET%\include\xalanc" /E /C /I /R /Y
</pre>
</blockquote>

<a name="unixbldenv">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>UNIX Build Environment</h3>

<p>I don't like building sources using root or superuser login.  I like to do builds in a directory separated from the source tree.  A debug build and release build will create shared objects of the same name.  I like to target these builds to separate directory trees.
</p>
<p>Release builds are targeted at the <code>/usr/local</code> file system.
</p>
<p>Debug builds are targeted at the <code>/opt/apache/debug</code> file system.
</p>
<p>Source trees are referenced wherever convenient.  Using the (<code>--srcdir</code>) configuration parameter allows the source tree to be separate from the build tree.  The source tree can even reside on read-only media.
</p>
<p>Product builds are done in a build directory path separate from the source tree.  This is the working directory from where you perform your builds and installs.
</p>
<p>
<b>Source Trees:</b> (<code>--srcdir</code>) configuration parameter
</p>
<p>
  	<code>/opt/xerces/c/&lt;trunk&gt;/</code>&lt;the Xerces-C/C++ XML parser library source distribution&gt;
<br />
  	<code>/opt/xalan/c/&lt;trunk&gt;</code>/&lt;the Xalan-C/C++ XSLT library source distribution&gt;
</p>
<p>If the source distribution is well-constructed, the source directory trees can be read-only.
</p>
<p>
<b>Binary Installation Trees:</b> (<code>--prefix</code>) configuration parameter
</p>
<p>
  	<code>/usr/local/</code>  &lt;the target for the 
release binary installation&gt;
<br />
      	<code>./bin</code>    	The sample programs
<br />
      	<code>./lib</code>    	The shared and static library files
<br />
      	<code>./include</code>  	The library header files
<br />
<br />
  	<code>/opt/apache/debug/</code>  &lt;the target for the 
debug binary installation&gt;
<br />
      	<code>./bin</code>    	The sample programs
<br />
      	<code>./lib</code>    	The shared and static library files
<br />
      	<code>./include</code>  	The library header files
</p>

<p>The default (<code>--prefix</code>) value is <code>/usr/local</code> which I use for release builds.
</p>
<p>I choose (<code>--prefix</code>) value of <code>/opt/apache/debug</code> for debug builds.
</p>

<p>
<b>Build Tree:</b> The build working directory tree
</p>
<p>  	<code>/&lt;user-directory&gt;/Build/</code>
</p>

<p>You can use any empty file system or directory path with write access.  Starting with an empty directory is a quick way to do a clean build.  Make this empty directory to be your current working directory.
</p>
<p>I also like to make some shell scripts so that the build process can be automated. I locate these scripts outside of the Build directory so they don't get lost when I purge directory content.
</p>
<p>
  	<code>../build-xerces-lib.sh</code>
</p>
<p>
  	<code>../build-xalan-lib.sh</code>
</p>
<p>
  	<code>../build-xalan-app.sh</code>
</p>
<p>I generate these shell scripts with a text editor and use them to minimize keyboard typing errors.
</p>
<a name="unixlibpath">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h4>Finding Runtime Libraries</h4>

<p>The various types of UNIX operating systems have differing requirements for finding libraries at runtime.
</p>
<table border="1">
<tr>
<th class="content" rowspan="1" colspan="1">Operating System</th>
<th class="content" rowspan="1" colspan="1">Library Path Environment</th>
</tr>
<tr>
<td class="content" rowspan="1" colspan="1">Solaris and Linux</td>
<td class="content" rowspan="1" colspan="1">LD_LIBRARY_PATH</td>
</tr>
<tr>
<td class="content" rowspan="1" colspan="1">HP-UX</td>
<td class="content" rowspan="1" colspan="1">SHLIB_PATH</td>
</tr>
<tr>
<td class="content" rowspan="1" colspan="1">AIX and BSD</td>
<td class="content" rowspan="1" colspan="1">LIBPATH</td>
</tr>
<tr>
<td class="content" rowspan="1" colspan="1">Mac OS X</td>
<td class="content" rowspan="1" colspan="1">DYLD_LIBRARY_PATH</td>
</tr>
<tr>
<td class="content" rowspan="1" colspan="1">Cygwin and  MinGW</td>
<td class="content" rowspan="1" colspan="1">PATH</td>
</tr>
</table>

<p>The Xalan-C/C++ and Xerces-C/C++ shared library objects must be installed in a reachable library path for your platform.  The <code>make</code> step creates the libraries in the <code>lib</code> subdirectory of your working directory.  The <code>make install</code> step installs these shared objects to the designated <code>{prefix}/lib</code> directory or another directory defined by the <code>--libdir</code> configuration parameter.
</p>
<p>In many cases, the <code>/usr/local/lib</code> is already cached in <code>/etc/ld.so.cache</code> or included by <code>/etc/ld.so.conf</code>.  The library path environment variable is then used for exceptions.  The explicit library path environment variable usually takes precedence over the other methods of finding shared library runtimes.  This is useful if you wish to use a debug environment on the same platform that also includes release libraries of the same name.
</p>


<a name="unixbldxalan">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h4>Building the Xalan-C/C++ XSLT Libraries for UNIX</h4>


<p>I don't like building sources from a root or superuser login.  I also like to do builds in a directory separated from the source tree.
</p>

<p>If your sources tree is read-only and some required files are not executable, then you need to copy the source to writable media and change the execute attributes of specific files.  This command sequence will copy an entire directory tree from <code>{source-dir}</code> to <code>{dest-dir}</code>.
</p>
<blockquote class="source">
<pre>
	cd {source-dir}
	find . | cpio -pdmuv {dest-dir}
</pre>
</blockquote>
<p>Connect to the <code>{xalan-src}</code> directory and make specific files executable.
</p>
<blockquote class="source">
<pre>
	cd {xalan-src}
	chmod 755 runConfigure configure install-sh
</pre>
</blockquote>
<p>Connect to your empty build directory and construct a script for building the Xalan-C/C++ XSLT products.
</p>

<p>The Xalan-C/C++ configuration process uses the <code>runConfigure</code> script as a front-end to the automake <code>configure</code> script. Your shell command script should therefore use the <code>runConfigure</code> script.
</p>

<table border="1">
<tr>
<th class="content" rowspan="1" colspan="2">runConfigure Options</th>
</tr>
<tr>
<th class="content" rowspan="1" colspan="1">Option</th>
<th class="content" rowspan="1" colspan="1">Description</th>
</tr>
<tr>
<td class="content" rowspan="1" colspan="1">-p</td>
<td class="content" rowspan="1" colspan="1">Build platform: aix, linux, freebsd, netbsd, solaris, hp-10, hp-11, hp11-ia64, 
   irix, tru64, macosx, cygwin</td>
</tr>
<tr>
<td class="content" rowspan="1" colspan="1">-c</td>
<td class="content" rowspan="1" colspan="1">C compiler name: gcc, cc, c89, xlc, xlc_r, acc (default = gcc)</td>
</tr>
<tr>
<td class="content" rowspan="1" colspan="1">-x</td>
<td class="content" rowspan="1" colspan="1">C++ compiler name: g++, CC, C89, xlC, xlC_r, aCC (default = g++)</td>
</tr>
<tr>
<td class="content" rowspan="1" colspan="1">-d</td>
<td class="content" rowspan="1" colspan="1">Indicates a debug build, takes no values, default is No Debug</td>
</tr>
<tr>
<td class="content" rowspan="1" colspan="1">-t</td>
<td class="content" rowspan="1" colspan="1">Transcoder to use: 'icu', (Default is null, the Xerces-C/C++ transcoder)</td>
</tr>
<tr>
<td class="content" rowspan="1" colspan="1">-m</td>
<td class="content" rowspan="1" colspan="1">Type of localization support: inmem, icu, nls (default is inmem)</td>
</tr>
<tr>
<td class="content" rowspan="1" colspan="1">-M</td>
<td class="content" rowspan="1" colspan="1">Locale for message localization: "en_US"</td>
</tr>
<tr>
<td class="content" rowspan="1" colspan="1">-r</td>
<td class="content" rowspan="1" colspan="1">Threads option: pthread, dce (default is pthread)</td>
</tr>
<tr>
<td class="content" rowspan="1" colspan="1">-b</td>
<td class="content" rowspan="1" colspan="1">Specify 32 or 64 bit build (Default is 32-bit)<br />
    On Linux, the 32/64 build is determined by the compiler, kernel, and glibc.</td>
</tr>
<tr>
<td class="content" rowspan="1" colspan="1">-P</td>
<td class="content" rowspan="1" colspan="1">Install root directory: value is assigned to the <code>--prefix</code> configure parameter</td>
</tr>
<tr>
<td class="content" rowspan="1" colspan="1">-l</td>
<td class="content" rowspan="1" colspan="1">Extra link options (assigned to <code>LDFLAGS</code>)</td>
</tr>
<tr>
<td class="content" rowspan="1" colspan="1">-z</td>
<td class="content" rowspan="1" colspan="1">Extra compiler options (assigned to <code>CFLAGS</code> and <code>CXXFLAGS</code>)</td>
</tr>
<tr>
<td class="content" rowspan="1" colspan="1">-C</td>
<td class="content" rowspan="1" colspan="1">Extra configuration options (i.e. <code>--srcdir=${SourceDir}</code>)</td>
</tr>
<tr>
<td class="content" rowspan="1" colspan="1">-h</td>
<td class="content" rowspan="1" colspan="1">Print the <code>runConfigure</code> help and exit</td>
</tr>
</table>

<p>Here are the names of some C/C++ compilers associated with commercial UNIX operating systems used to build Xalan-C/C++ and Xerces-C/C++ packages.
</p>

<table border="1">
<tr>
<th class="content" rowspan="1" colspan="1">System</th>
<th class="content" rowspan="1" colspan="1">Platform</th>
<th class="content" rowspan="1" colspan="1">C Compiler</th>
<th class="content" rowspan="1" colspan="1">C++ Compiler</th>
<th class="content" rowspan="1" colspan="1">Comment</th>
</tr>
<tr>
<td class="content" rowspan="1" colspan="1">AIX</td>
<td class="content" rowspan="1" colspan="1">aix</td>
<td class="content" rowspan="1" colspan="1">xlc_r</td>
<td class="content" rowspan="1" colspan="1">xlC_r</td>
<td class="content" rowspan="1" colspan="1">thread support</td>
</tr>
<tr>
<td class="content" rowspan="1" colspan="1">AIX</td>
<td class="content" rowspan="1" colspan="1">aix</td>
<td class="content" rowspan="1" colspan="1">xlc</td>
<td class="content" rowspan="1" colspan="1">xlC</td>
<td class="content" rowspan="1" colspan="1">no thread support</td>
</tr>
<tr>
<td class="content" rowspan="1" colspan="1">Cygwin</td>
<td class="content" rowspan="1" colspan="1">cygwin</td>
<td class="content" rowspan="1" colspan="1">gcc</td>
<td class="content" rowspan="1" colspan="1">g++</td>
<td class="content" rowspan="1" colspan="1" />
</tr>
<tr>
<td class="content" rowspan="1" colspan="1">HP-UX</td>
<td class="content" rowspan="1" colspan="1">hp-11</td>
<td class="content" rowspan="1" colspan="1">cc</td>
<td class="content" rowspan="1" colspan="1">aCC</td>
<td class="content" rowspan="1" colspan="1" />
</tr>
<tr>
<td class="content" rowspan="1" colspan="1">HP-UX</td>
<td class="content" rowspan="1" colspan="1">hp-11-ia64</td>
<td class="content" rowspan="1" colspan="1">cc</td>
<td class="content" rowspan="1" colspan="1">aCC</td>
<td class="content" rowspan="1" colspan="1" />
</tr>
<tr>
<td class="content" rowspan="1" colspan="1">Solaris</td>
<td class="content" rowspan="1" colspan="1">solaris</td>
<td class="content" rowspan="1" colspan="1">cc</td>
<td class="content" rowspan="1" colspan="1">CC</td>
<td class="content" rowspan="1" colspan="1" />
</tr>
</table>

<p>The following example shows you how to construct a usable script with your favorite text editor.
</p>

<blockquote class="source">
<pre>
#!/bin/sh
# Script to build and install Xalan-C/C++ products from sources

# The Source and Target Directories for Debug Build

# SourceDir="--srcdir=/opt/xalan/c/trunk"
# DestDir="--prefix=/opt/apache/debug"

# The Source and Target Directories for Release Build

SourceDir="--srcdir=/opt/xalan/c/trunk"
DestDir="--prefix=/usr/local"

# The Xerces and Xalan package directories

export XALANCROOT=${SourceDir}
export XERCESCROOT=${DestDir}

# If compiling with IBM-ICU support, the ICUROOT environment variable 
# needs to be defined to specify where the ICU libraries are installed.
# Specifically, the following directories are accessed:
#	${ICUROOT}/lib, ${ICUROOT}/include, ${ICUROOT}/data
#	export ICUROOT=/usr/local

export PATH=$PATH:${SourceDir}

# Debug Configure

# runConfigure -p linux -d -c gcc -x g++ -P "${DestDir}" \
#   -C "--srcdir=${SourceDir}"

# Release Configure

runConfigure -p linux -c gcc -x g++ -P "${DestDir}" \
   -C "--srcdir=${SourceDir}"

# Connect to configured src subdirectory to build the library without
# sample programs. If you run make from your build directory, then the
# library and all sample programs will be built.

cd src
make clean
make

# As a user with permissions to write to ${DestDir} install the Xalan-C/C++ products
#   ${DestDir}/bin   the Xalan command-line utility and sample programs
#   ${DestDir)/lib    the Xalan-C/C++ static and dynamic libraries
#   ${DestDir}/include/xalanc/*    The header files.

make install

## End of sample build script.
</pre>
</blockquote>



<a name="unixcompileref">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>Reference on Unix Platforms and C++ Compilers</h3>

<p>Some compilers and platforms may need configuration options and variables that differ from the default Linux build.  Beware that the runConfigure script for Xalan-C/C++ is a front-end that calls the configure script.  The following table is reference information for the build of Xerces-C/C++ version 3.x.  The C++ compiler for Xerces should be the same as used for Xalan builds.
</p>

<table border="1">
<tr>
<th class="content" rowspan="1" colspan="2">Configuration Options For Unix Platforms</th>
</tr>
<tr>
<th class="content" rowspan="1" colspan="1">Solaris x86</th>
<th class="content" rowspan="1" colspan="1">Sun CC</th>
</tr>
<tr>
<td class="content" rowspan="1" colspan="2">./configure CXX=CC CC=cc</td>
</tr>

<tr>
<th class="content" rowspan="1" colspan="1">Solaris x86-64</th>
<th class="content" rowspan="1" colspan="1">Sun CC</th>
</tr>
<tr>
<td class="content" rowspan="1" colspan="2">./configure CXX=cc CC=cc CFLAGS=-xarch=amd64 CXXFLAGS=-xarch=amd64<br />
(newer Sun CC versions use -m64 instead of -arch=amd64)</td>
</tr>

<tr>
<th class="content" rowspan="1" colspan="1">Solaris Sparc</th>
<th class="content" rowspan="1" colspan="1">Sun CC</th>
</tr>
<tr>
<td class="content" rowspan="1" colspan="2">./configure CXX=CC CC=cc</td>
</tr>

<tr>
<th class="content" rowspan="1" colspan="1">Solaris Sparc v9</th>
<th class="content" rowspan="1" colspan="1">Sun CC</th>
</tr>
<tr>
<td class="content" rowspan="1" colspan="2">./configure CXX=cc CC=cc CFLAGS=-xarch=v9 CXXFLAGS=-xarch=v9<br />
(newer Sun CC versions use -m64 instead of -arch=v9)</td>
</tr>

<tr>
<th class="content" rowspan="1" colspan="1">AIX PowerPC</th>
<th class="content" rowspan="1" colspan="1">IBM XLC++</th>
</tr>
<tr>
<td class="content" rowspan="1" colspan="2">./configure CXX=xlc_r CC=xlc_r<br />
gmake libxerces_c_1a LDFLAGS=-qmkshrobj</td>
</tr>

<tr>
<th class="content" rowspan="1" colspan="1">AIX PowerPC-64</th>
<th class="content" rowspan="1" colspan="1">IBM XLC++</th>
</tr>
<tr>
<td class="content" rowspan="1" colspan="2">./configure CXX=xlc_r CC=xlc_r CXXFLAGS=-q64 CFLAGS=-q64<br />
gmake libxerces_c_1a LDFLAGS=-qmkshrobj</td>
</tr>

<tr>
<th class="content" rowspan="1" colspan="1">HP-UX 1a-64-32</th>
<th class="content" rowspan="1" colspan="1">HP aCC</th>
</tr>
<tr>
<td class="content" rowspan="1" colspan="2">./configure CXX=aCC CC=aCC CFLAGS=-mt CXXFLAGS=-mt LDFLAGS=-mt</td>
</tr>

<tr>
<th class="content" rowspan="1" colspan="1">HP-UX 1a-64</th>
<th class="content" row100 94139    0 35028  100 59111   320k   541k --:--:-- --:--:-- --:--:--  544k
span="1" colspan="1">HP aCC</th>
</tr>
<tr>
<td class="content" rowspan="1" colspan="2">./configure CXX=aCC CC=aCC CFLAGS=-mt CXXFLAGS=-"mt +DD64" LDFLAGS="-mt +DD64"</td>
</tr>

<tr>
<th class="content" rowspan="1" colspan="1">Mac OS X x86-64</th>
<th class="content" rowspan="1" colspan="1">GCC</th>
</tr>
<tr>
<td class="content" rowspan="1" colspan="2">./configure CFLAGS="-arch x86_64" CXXFLAGS="-arch x86_64"</td>
</tr>

<tr>
<th class="content" rowspan="1" colspan="1">Mac OS X PowerPC-64</th>
<th class="content" rowspan="1" colspan="1">GCC</th>
</tr>
<tr>
<td class="content" rowspan="1" colspan="2">./configure CFLAGS="-arch ppc64" CXXFLAGS="-arch ppc64"</td>
</tr>

<tr>
<th class="content" rowspan="1" colspan="1">Mac OS X x86/PowerPC</th>
<th class="content" rowspan="1" colspan="1">GCC</th>
</tr>
<tr>
<td class="content" rowspan="1" colspan="2">./configure --disable-dependency-tracking CFLAGS="arch i386 -arch ppc"<br />
CXXFLAGS="-arch i386 -arch ppc"</td>
</tr>

<tr>
<th class="content" rowspan="1" colspan="1">MinGW x86</th>
<th class="content" rowspan="1" colspan="1">GCC</th>
</tr>
<tr>
<td class="content" rowspan="1" colspan="2">./configure LDFLAGS=-no-undefined</td>
</tr>

<tr>
<th class="content" rowspan="1" colspan="1">Cygwin x86</th>
<th class="content" rowspan="1" colspan="1">GCC</th>
</tr>
<tr>
<td class="content" rowspan="1" colspan="2">./configure LDFLAGS=-no-undefined</td>
</tr>
</table>


<a name="xercesmodules">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>Xerces-C/C++ Transcoders and Plug-in Modules</h3>
<p>Xerces-C/C++ XML Parsers have undergone some additional modularity features. In the version 3 series, the transcoders are now being implemented as runtime modules. Use of the transcoding modules is still experimental for Xalan-C/C++ transformation applications. The basic transcoder capability still exists. Xerces-C/C++ version 2 series had transcoder libraries explicitly built and installed.
</p>
<p>A plug-in memory management architecture was introduced in Xerces-C/C++ version 2.7. The plug-in memory management of Xerces-C/C++ is also supported by Xalan-C/C++ applications.
</p>

<p align="right" size="2">
<a href="#content">(top)</a>
</p>
</div>
<div id="footer">Copyright © 1999-2012 The Apache Software Foundation<br />Apache, Xalan, and the Feather logo are trademarks of The Apache Software Foundation<div class="small">Web Page created on - </div>
</div>
</body>
</html>

../../extra/xdocs/charter.xml
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0HTTP/1.1 100 Continue

HTTP/1.1 200 OK
Date: Mon, 17 Apr 2017 01:22:22 GMT
Server: Apache/2.4.10 (Debian)
Vary: Accept-Encoding
Transfer-Encoding: chunked
Content-Type: text/plain; charset=utf-8


<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>ASF: Xalan Project Charter</title>
<meta http-equiv="content-type" content="text/html; charset=UTF-8" />
<meta http-equiv="Content-Style-Type" content="text/css" />
<link rel="stylesheet" type="text/css" href="resources/apache-xalan.css" />
</head>
<!--
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements. See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership. The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the  "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 -->
<body>
<div id="title">
<table class="HdrTitle">
<tbody>
<tr>
<th rowspan="2">
<a href="http://www.apache.org">
<img alt="Trademark Logo" src="resources/asf_logo.png" width="144" height="75" />
</a>
</th>
<th text-align="center" width="75%">
<a href="index.html" />
</th>
</tr>
<tr>
<td valign="middle">Xalan Project Charter</td>
</tr>
</tbody>
</table>
<table class="HdrButtons" align="center" border="1">
<tbody>
<tr>
<td>
<a href="http://www.apache.org">Apache Foundation</a>
</td>
<td>
<a href="http://xalan.apache.org">Xalan Project</a>
</td>
<td>
<a href="http://xerces.apache.org">Xerces Project</a>
</td>
<td>
<a href="http://www.w3.org/TR">Web Consortium</a>
</td>
<td>
<a href="http://www.oasis-open.org/standards">Oasis Open</a>
</td>
</tr>
</tbody>
</table>
</div>
<div id="navLeft">
<ul />
</div>
<div id="content">
<h2>Xalan Project Charter</h2>
  <p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>Xalan Project Charter</h3>
  <p>The following charter applies to all Xalan projects.</p>
  

  <p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>1 INTRODUCTION</h3>
   <p>1.1 Apache Xalan is a collaborative software development project
      dedicated to providing robust, full-featured, commercial-quality, and
      freely available XSLT support on a wide variety of platforms. This
      project is managed in cooperation with various individuals worldwide
      (both independent and company-affiliated experts), who use the
      Internet to communicate, plan, and develop XSLT software and related
      documentation.</p>
   <p>1.2 This charter briefly describes the mission, history, organization
      and processes of the project.</p>
  

  <p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>2 MISSION</h3>
   <p>2.1 Apache Xalan exists to promote the use of XSLT. We view XSLT
      (Extensible Stylesheet Language Transformations) as a compelling 
      paradigm that transforms XML documents, thereby facilitating the
      exchange, transformation, and presentation of knowledge. The ability
      to transform XML documents into usable information has great potential
      to improve the functionality and use of information systems. We intend
      to build freely available XSLT processing components in order to
      engender such improvements.</p>
   <p>2.2 Apache Xalan consists of a set of components that transform XML
      documents.  Where appropriate, these components plug into other XML
      components using standard APIs (formal, de facto, or proposed).  The
      components must be high performance, reliable, and easy to use.  Where
      inter-related, the components must be part of an underlying architectural
      orchestration that will allow them to work together without major
      negotiations or breakage.</p>
   <p>2.3 We believe that the best way to define this XML transformation
      architecture is by having both individuals and corporations
      collaborate on the best possible infrastructure, APIs, code, testing,
      and release cycles. Components must be vendor neutral and usable as
      core components for all.</p>
   <p>2.4 In order to achieve a coherent architecture between Apache Xalan
      components and other components and applications, standards (formal or
      de facto) will be used as much as possible for both protocols and
      APIs. Where appropriate, experiences and lessons learned will be fed
      back to standards bodies in an effort to assist in the development of 
      those standards.  We will also encourage the innovation of new
      protocols, APIs, and components in order to seed new concepts not
      yet defined by standards.</p>
  
  
  <p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>3 HISTORY</h3>
   <p>3.1 This project was established under the direction of the Apache
     Software Foundation in October 2004 to facilitate joint open-source
     development.  Prior to October 2004 this project was a subproject
     of the Apache XML project.</p>
  
  
  <p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>4 TERMS</h3>
   <p>4.1 The ASF Board.  The management board of the Apache Software 
      Foundation.</p>
   <p>4.2 The Project.  The Apache Xalan project; intended to refer to the 
      source code, website, subprojects, and community that are Apache Xalan.</p>
   <p>4.3 Subproject.  The Apache Xalan project may have subprojects; a 
      subproject is responsible for a component or application whose scope
      is well defined.</p>
   <p>4.4 Product.  Some deliverable (usually a binary or source package)
      that a subproject makes available to the public.  Subprojects may have
      multiple products.</p>
   <p>4.5 Release.  A specific version of a product.  Subprojects may have
      multiple releases of a given product.</p>
   <p>4.6 Contributor.  Anyone who makes a contribution to the development
      of the Apache Xalan project.</p>
   <p>4.7 Committer.  The Apache Xalan project has a set of committers.  
      Committers are contributors who have read/write access to the source
      code repository.</p>
   <p>4.8 PMC. The PMC (Project Management Committee) is the group of people
      that form the entity that makes decisions and controls the project.  
      Individual people or committers do not control the project.</p>
       
  
  <p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>5 THE PROJECT MANAGEMENT COMMITTEE</h3>
   <p>5.1 The Apache Xalan project is managed by a core group of committers 
      known as the Project Management Committee [PMC]. Subprojects, if any,
      much each have at least one representative committer on the PMC.</p>
   <p>5.2 The activities of the PMC are coordinated by the Chairperson,
      who is an officer of the corporation and reports to the Apache
      Board.  The Chairperson will, on the request of the Apache Board, 
      provide reports to the Board on issues related to the running of 
      the Apache Xalan project.</p>
   <p>5.3 The PMC has the following responsibilities:</p>
   <p>a) Accepting new subproject proposals, formally submitting these
      proposals for Apache Xalan committer vote, and creating the subproject
      (see SUBPROJECTS below).  This is done in collaboration with the 
      Incubator (see <a href="http://incubator.apache.org">http://incubator.apache.org</a>).</p>
   <p>b) Facilitating code or other donations by individuals or companies,
      in collaboration with the Incubator.</p>
   <p>c) Resolving license issues and other legal issues in conjunction with
      the ASF board.</p>
   <p>d) Ensuring that administrative and infrastructure work is completed.</p>
   <p>e) Facilitating relationships among projects and subprojects.</p>
   <p>f) Facilitating relationships between the Apache Xalan project and the 
      external world.</p>
   <p>g) Overseeing Apache Xalan to ensure that the mission defined in this 
      document is being fulfilled.</p>
   <p>h) Resolving conflicts within the project.</p>
   <p>i) Reporting to the ASF board (through the Chair) on the progress
      of the project.</p>
   <p>j) Propose new releases of projects or subprojects.  Such proposals pass
      if 75% of the PMC members vote in agreement.</p>   
      
   <p>5.4 A contributor can, at any time, nominate a committer to be on the PMC,
      by calling for a vote.  If two thirds, or more, of the active committers 
      vote in agreement then the nomination is given to the PMC.  The person
      becomes a new PMC member if 75% or more of the PMC members vote in
      agreement, with no dissenting votes among the PMC members.  This individual
      should be elected based on merit for the evolution of the project and 
      demonstration of commitment.</p>
   <p>5.5 In cases where the subproject is unable to directly provide a 
      representative on the PMC, another member of the PMC will be required to
      represent that subproject on the PMC.  This will be strongly discouraged.
      It is preferable that all subprojects have direct representation on the
      PMC.</p>
   <p>5.6 At least every twelve months, or more often if directed by the ASF
      board, the PMC members will elect a Chairperson from among themselves;
      the person with the most votes from the other PMC members is recommended
      to the ASF board for the position of Chairperson, and with the ASF board's
      approval, becomes the Chairperson for the new term.</p>
   <p>5.7 Upon agreement by the Apache Board, the recommended Chairperson will,
      if they are not already, be appointed an officer of the corporation.  See
      <a href="http://www.apache.org/foundation/bylaws.html">
      http://www.apache.org/foundation/bylaws.html</a> for more information.</p>
   <p>5.8 The PMC is responsible for maintaining and updating this charter. 
      Development must follow the process outlined below, so any change to the 
      development process necessitates a change to the charter. Proposed changes
      to this charter by the PMC are passed if 75% or more of the PMC members
      approve the proposal, with no dissenting votes. However, an active Apache
      Xalan committer may challenge the change.</p>
   <p>5.9 An active Apache Xalan committer may challenge a change to this charter
      proposed by the PMC within two weeks of its proposal.  When challenged the
      proposed change is passed if within two weeks of the challenge the active
      committers approve the change with a two-thirds majority vote.</p>
   <p>5.10 The PMC ultimately makes the decisions for the project, not the individual
      people.  At any time the PMC can reject patches or other contributions to the
      project if 75% or more of the PMC members vote to reject the contribution.</p>
   <p>5.11 A PMC member may resign their membership at any time.  However, in the
      unlikely event that a member of the PMC becomes disruptive to the process,
      such as ceasing to take part in PMC votes, the PMC member may be removed from
      the PMC by a vote among the other PMC members.  The PMC member is removed if
      75% or more of the other PMC members approve the removal, with no dissenting
      votes among the other PMC members.</p>
   <p>5.12 A person remains a PMC member until he or she resigns, is removed by a
      vote from among the other PMC members, dies or is incapacitated.</p>
   

  <p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>6 SUBPROJECTS</h3>
   <p>6.1 A subproject of the Apache Xalan project is responsible for a component 
      or application whose scope is well defined.  Each subproject has its own set 
      of developers, and is responsible for approving its own committers. Apache 
      Xalan is composed of subprojects which fit into one of two categories:</p>
   <p>(a) An XSLT processor implementation in some particular programming
      language.  There may be multiple processors for a given language if
      the API's the processors support are sufficiently dissimilar.  At the
      time of writing, there is one processor for C++ and two for Java.</p>
   <p>(b) A set of components which are used in related applications and are
      tightly bound, usually through internal API's, to one (or more) of the
      processor subprojects.</p>
   <p>6.2 A new subproject proposal is submitted to the PMC, and then accepted
      by a majority Apache Xalan project active committer vote within two weeks
      after the proposal.</p>
   <p>6.3 Each subproject must have a set of requirements as well as an
      up-to-date release plan and design document on its dedicated web page.</p>
   <p>6.4 It is recommended that each subproject have a smoke-test system
      that works at least as a basic integration test.</p>
   <p>6.5 A subproject may be removed if 75% or more of the PMC members approve
      the proposal, there are no dissenting votes among the PMC members,
      and no challenges by active Apache Xalan project committers
      within two weeks after the proposal.
      A contributor may challenge the proposed removal
      of a subproject within two weeks of the proposal.
      In this case the proposed removal is passed if within two weeks of the
      challenge the active committers approve the removal with a two-thirds
      majority vote. Any subproject removal is subject to the approval of the
      ASF board.</p>
       
  
  <p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>7 CONTRIBUTORS</h3>
   <p>7.1 Like all Apache projects, the Apache Xalan project is a
      meritocracy -- the more work you do, the more you are allowed to do.</p>
   <p>7.2 People who make regular and substantial contributions may become
      committers as described below. Contributions include: participating in
      mailing lists, reporting issues or bugs in issue-records in the Issue Database, 
      providing patches, and proposing changes to a product.</p>
   <p>7.3 In order to ensure that all code contained in the Apache Xalan
      project's code repository is free of licensing, intellectual property and patent
      issues, any person wishing to contribute a new feature to Apache Xalan must either
      sign:</p>
   <p>a) If contributing as an individual, sign the "Individual
      Contributor License Agreement (CLA)"
      (<a href="http://www.apache.org/licenses/icla.txt">http://www.apache.org/licenses/icla.txt</a>)
      and file a copy with the Secretary of the Corporation; or </p>      
   <p>b) If making the contribution as part of their employment
      responsibilities, sign the "Corporate CLA (CCLA)", 
      (<a href="http://www.apache.org/licenses/cla-corporate.txt">http://www.apache.org/licenses/cla-corporate.txt</a>)
      and file a copy with the Secretary of the Corporation.</p>
   <p>7.4 If the contribution in question is a small bugfix, the contributor need
      not sign a CLA, but need only provide the following information, attaching
      it to the communication containing the patch:</p>
   <p>a) Name and employer</p>
   <p>b) Are you the author of the code being contributed?</p>
   <p>c) Do you have the right to grant the copyright and patent
      licenses for the contribution that are set forth in the ASF v.2.0
      license (<a href="http://www.apache.org/licenses/LICENSE-2.0">http://www.apache.org/licenses/LICENSE-2.0</a>)?</p>
   <p>d) Does your employer have any rights to code that you have
      written, for example, through your contract for employment?  If
      so, has your employer given you permission to contribute the code
      on its behalf or waived its rights in the code?</p>
   <p>e) Are you aware of any third-party licenses or other
      restrictions (such as related patents or trademarks) that could
      apply to your contribution?  If so, what are they?</p>
     
  
  <p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>8 COMMITTERS</h3>
   <p>8.1 The Apache Xalan project has a set of committers. If there
      are subprojects, each subproject will also have a set of committers.
      Committers are contributors who have read/write access to the source code 
      repository. New committers are added when a contributor is nominated by a 
      committer and approved by at least 50 percent of the active committers for 
      that subproject with no opposing votes.  In most cases, new committers will 
      already be participating in the development process by submitting suggestions
      and/or fixes via issue-records in the Issue Database or mailing lists.</p>
   <p>8.2 For the purposes of voting, committers will be classed as "active" or
      "inactive". Only active committers will be included in the totals used to
      determine the success or failure of a particular vote.</p>
   <p>8.3 Committers remain active as long as they are contributing code or
      posting to the project or subproject mailing lists.  If a committers has
      neither contributed code nor posted to the mailing lists in 3
      months, a member of the PMC will e-mail the committer,
      the project or subproject development list, and the PMC mailing list
      notifying the committer that they are now in inactive status.</p>
   <p>8.4 An inactive status will not prevent a committer committing new code
      changes or posting to the mailing lists.  Either of these activities will
      automatically re-activate the committer for the purposes of voting.</p>
     
  
  <p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>9 INFRASTRUCTURE</h3>
   <p>9.1 The Apache Xalan project relies on the Apache XML project
      and the Apache Infrastructure project for the following:</p>
   <p>a) Issue Database -- This is a system with issue-records,
      for tracking bugs, issues, features and requests.</p>
   <p>b) Repository -- The xalan.apache.org project has its set
      of parts that make up the software, and these parts are
      managed in a repository. Committers make changes to the source code,
      documentation and other associated parts that are stored in
      the repository. Any subproject will have its set of committers
      for its repository.</p>
   <p>c) Website -- The website <a href="http://xalan.apache.org">xalan.apache.org</a> 
      will contain information about the Apache Xalan project and its subprojects,
      including documentation, downloads of releases, and this charter.</p>
   <p>d) Mailing Lists -- appropriate mailing lists will be created
      at the discretion of the PMC. Such mailing lists could
      for example include: a PMC mailing list, a general mailing list,
      project or subproject public developer mailing lists,
      project or subproject public user mailing lists.</p>
   
  
  <p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>10 LICENSING</h3>
   <p>10.1 All contributions to the Apache Xalan project adhere to the "Apache
      Software Foundation License, Version 2.0"
      (<a href="http://www.apache.org/licenses/LICENSE-2.0">http://www.apache.org/licenses/LICENSE-2.0</a>).
      All further contributions, including patches, must be made under the same terms.</p>
   <p>10.2 When a committer is considering integrating a contribution
      from a contributor who has no CLA on file with the Corporation,
      it is the responsibility of the committer, in consultation with
      the PMC, to conduct due diligence on the pedigree of the
      contribution under consideration; see sections 7.3 and 7.4.  </p>
       
  
  <p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>11 THE DEVELOPMENT PROCESS</h3> 
   <p>11.1 For a committer to commit a change to the MAIN branch of the
      repository an issue-record must be opened in the "Issue Database"
      to track the change. The status of the issue must be kept up to date.</p>
   <p>11.2 No voting is required to commit changes, but one other active 
      committer must review the changes.  Before the changes are comm100 72246    0 21644  100 50602   193k   452k --:--:-- --:--:-- --:--:--  453k
itted, the reviewer
      must add a comment in the corresponding issue-record indicating that
      they have reviewed and approve the changes.</p>
   <p>11.3 Issue-records and reviews are not required for committing changes to
      other experimental branches (not the MAIN branch) in a repository.</p>
   
  
  <p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>12 VOTING</h3>
   <p>12.1 Unless otherwise stated in this mission, votes cast on Apache Xalan
      proposals must be made within two weeks of the proposal. A challenge to
      a proposal must also be made within two weeks of the proposal. Likewise,
      votes cast on challenges must be cast within two weeks of the challenge.</p>
   
  
  <p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>13 RELATIONSHIP TO OTHER APACHE PROJECTS</h3>
   <p>13.1 The Apache Xalan project should work closely with other Apache
      projects, such as Xerces and XML, to avoid redundancy
      and achieve a coherent architecture among Apache Xalan and these
      projects.</p>
         
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
</div>
<div id="footer">Copyright © 1999-2012 The Apache Software Foundation<br />Apache, Xalan, and the Feather logo are trademarks of The Apache Software Foundation<div class="small">Web Page created on - </div>
</div>
</body>
</html>

../../extra/xdocs/commandline.xml
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0HTTP/1.1 100 Continue

HTTP/1.1 200 OK
Date: Mon, 17 Apr 2017 01:22:22 GMT
Server: Apache/2.4.10 (Debian)
Vary: Accept-Encoding
Transfer-Encoding: chunked
Content-Type: text/plain; charset=utf-8


<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>ASF: Xalan-C++ Command-Line Utilities</title>
<meta http-equiv="content-type" content="text/html; charset=UTF-8" />
<meta http-equiv="Content-Style-Type" content="text/css" />
<link rel="stylesheet" type="text/css" href="resources/apache-xalan.css" />
</head>
<!--
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements. See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership. The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the  "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 -->
<body>
<div id="title">
<table class="HdrTitle">
<tbody>
<tr>
<th rowspan="2">
<a href="http://www.apache.org">
<img alt="Trademark Logo" src="resources/asf_logo.png" width="144" height="75" />
</a>
</th>
<th text-align="center" width="75%">
<a href="index.html" />
</th>
</tr>
<tr>
<td valign="middle">Xalan-C++ Command-Line Utilities</td>
</tr>
</tbody>
</table>
<table class="HdrButtons" align="center" border="1">
<tbody>
<tr>
<td>
<a href="http://www.apache.org">Apache Foundation</a>
</td>
<td>
<a href="http://xalan.apache.org">Xalan Project</a>
</td>
<td>
<a href="http://xerces.apache.org">Xerces Project</a>
</td>
<td>
<a href="http://www.w3.org/TR">Web Consortium</a>
</td>
<td>
<a href="http://www.oasis-open.org/standards">Oasis Open</a>
</td>
</tr>
</tbody>
</table>
</div>
<div id="navLeft">
<ul />
</div>
<div id="content">
<h2>Xalan-C++ Command-Line Utilities</h2>
<ul>
<li>
<a href="#use">Using a command-line utility</a>
</li>
<li>
<a href="#xalanexe">Using the Xalan executable</a>
</li>

</ul>
<a name="use">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>Using a command-line utility</h3>
<p>To perform a transformation, you can call Xalan-C++ from the command line (or script), 
   or from within an application (see <a href="usagepatterns.html">Usage Patterns</a>).</p>
<p>To perform a transformation from the command line or a script, do the following:</p>
  <ol>
    <li>
<a href="download.html">Download Xalan-C++</a>.<br />
<br />
</li> 
    <li>
<a href="install.html">Set the path/library path</a> to include the Xalan executable and the Xalan and Xerces 
        libraries.<br />
<br />
</li>
    <li>Call the Xalan executable with the appropriate flags and arguments (described below).</li>
  </ol>  

<a name="xalanexe">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>Using the Xalan executable</h3>
<p>Call the Xalan executable as follows:<br />
<br /> 
   <code>Xalan <b>
<i>[options]</i>
</b> <b>
<i>xmlSource</i>
</b> <b>
<i>xslStylesheet</i>
</b>
</code>
<br />
<br />
   where <b>
<i>xmlSource</i>
</b> is the XML source document, <b>
<i>xslStylesheet</i>
</b> is the stylesheet to apply, and 
   <b>
<i>[options]</i>
</b> are any (or none) of the following:</p>
<table border="1">
  <tr>
<th class="content" rowspan="1" colspan="1">Option</th>
<th class="content" rowspan="1" colspan="1">Description</th>
</tr>
  <tr>
<td class="content" rowspan="1" colspan="1">-a</td>
<td class="content" rowspan="1" colspan="1">Use stylesheet processing instruction, not the stylesheet argument.</td>
</tr>
  <tr>
<td class="content" rowspan="1" colspan="1">-e 100 43308    0  5850  100 37458  53736   336k --:--:-- --:--:-- --:--:--  338k
encoding</td>
<td class="content" rowspan="1" colspan="1">Force the specified encoding for the output.</td>
</tr>
  <tr>
<td class="content" rowspan="1" colspan="1">-i integer</td>
<td class="content" rowspan="1" colspan="1">Indent the specified amount.</td>
</tr>
  <tr>
<td class="content" rowspan="1" colspan="1">-m</td>
<td class="content" rowspan="1" colspan="1">Omit the META tag in HTML output.</td>
</tr>
  <tr>
<td class="content" rowspan="1" colspan="1">-o filename</td>
<td class="content" rowspan="1" colspan="1">Write transformation result to this file (rather than to the console).</td>
</tr>
  <tr>
<td class="content" rowspan="1" colspan="1">-p name expr</td>
<td class="content" rowspan="1" colspan="1">Set a stylesheet parameter with this expression.</td>
</tr> 
  <tr>
<td class="content" rowspan="1" colspan="1">-t name expr</td>
<td class="content" rowspan="1" colspan="1">Display timing information.</td>
</tr> 
  <tr>
<td class="content" rowspan="1" colspan="1">-u name expr</td>
<td class="content" rowspan="1" colspan="1">Disable escaping of URLs in HTML output.</td>
</tr> 
  <tr>
<td class="content" rowspan="1" colspan="1">-v</td>
<td class="content" rowspan="1" colspan="1">Validate the XML source document.</td>
</tr> 
  <tr>
<td class="content" rowspan="1" colspan="1">-</td>
<td class="content" rowspan="1" colspan="1">A dash as the 'source' argument reads from stdin.<br />A dash as the 'stylesheet' argument reads 
                    from stdin.<br />('-' cannot be used for both arguments.)</td>
</tr> 
</table>
<p>To display a list of the options call the Xalan executable as follows:</p>
<p>
<code>Xalan -?</code>
</p>


<p align="right" size="2">
<a href="#content">(top)</a>
</p>
</div>
<div id="footer">Copyright © 1999-2012 The Apache Software Foundation<br />Apache, Xalan, and the Feather logo are trademarks of The Apache Software Foundation<div class="small">Web Page created on - </div>
</div>
</body>
</html>

../../extra/xdocs/download.xml
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0HTTP/1.1 100 Continue

HTTP/1.1 200 OK
Date: Mon, 17 Apr 2017 01:22:22 GMT
Server: Apache/2.4.10 (Debian)
Vary: Accept-Encoding
Transfer-Encoding: chunked
Content-Type: text/plain; charset=utf-8


<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>ASF: Downloading Xalan-C++</title>
<meta http-equiv="content-type" content="text/html; charset=UTF-8" />
<meta http-equiv="Content-Style-Type" content="text/css" />
<link rel="stylesheet" type="text/css" href="resources/apache-xalan.css" />
</head>
<!--
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements. See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership. The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the  "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 -->
<body>
<div id="title">
<table class="HdrTitle">
<tbody>
<tr>
<th rowspan="2">
<a href="http://www.apache.org">
<img alt="Trademark Logo" src="resources/asf_logo.png" width="144" height="75" />
</a>
</th>
<th text-align="center" width="75%">
<a href="index.html" />
</th>
</tr>
<tr>
<td valign="middle">Downloading Xalan-C++</td>
</tr>
</tbody>
</table>
<table class="HdrButtons" align="center" border="1">
<tbody>
<tr>
<td>
<a href="http://www.apache.org">Apache Foundation</a>
</td>
<td>
<a href="http://xalan.apache.org">Xalan Project</a>
</td>
<td>
<a href="http://xerces.apache.org">Xerces Project</a>
</td>
<td>
<a href="http://www.w3.org/TR">Web Consortium</a>
</td>
<td>
<a href="http://www.oasis-open.org/standards">Oasis Open</a>
</td>
</tr>
</tbody>
</table>
</div>
<div id="navLeft">
<ul />
</div>
<div id="content">
<h2>Downloading Xalan-C++</h2>
<ul>
  <li>
<a href="#DownloadWhat">Downloading What You Need</a>
</li>
  <li>
<a href="#DownloadNotes">Downloading Notes</a>
</li>

  <li>
<a href="#SourcePkgs">Source Packages</a>
</li>
  <li>
<a href="#DocPkgs">Documentation Packages</a>
</li>
  <li>
<a href="#BinaryPkgs">Binary Packages</a>
</li>
  <li>
<a href="#VerifyPkgs">Verify Downloaded Packages</a>
</li>
  <li>
<a href="#PlatformComp">Platform Compatibility</a>
</li>
</ul>

<a name="DownloadWhat">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>Downloading What You Need</h3>

<p>We are distributing the source package for the Xalan-C/C++
library, sample programs, and documentation.  We are also
distributing assembled documentation packages for your 
browser.  Some selected platforms also have binary packages.
</p>

<p>
<b>Download Xalan-C/C++ Distributions from Apache Mirrors</b>
</p>
<table border="1">
 <tr>
<td class="content" rowspan="1" colspan="1">
<a href="http://www.apache.org/dyn/mirrors/mirrors.cgi/xalan/xalan-c">
   The Xalan-C/C++ Distribution Tree</a>
</td>
</tr>
 <tr>
<td class="content" rowspan="1" colspan="1">
<a href="http://www.apache.org/dyn/mirrors/mirrors.cgi/xalan/xalan-c/sources">
   The Xalan-C/C++ Source Packages</a>
</td>
</tr>
 <tr>
<td class="content" rowspan="1" colspan="1">
<a href="http://www.apache.org/dyn/mirrors/mirrors.cgi/xalan/xalan-c/docs">
   The Xalan-C/C++ Documentation Packages</a>
</td>
</tr>
 <tr>
<td class="content" rowspan="1" colspan="1">
<a href="http://www.apache.org/dyn/mirrors/mirrors.cgi/xalan/xalan-c/binaries">
   The Xalan-C/C++ Binary Packages</a>
</td>
</tr>
</table>

<p>
<b>Download Xerces-C/C++ XML Parser Library</b>
</p>
<p>The Xalan-C/C++ 1.11 library requires the
<a href="http://www.apache.org/dyn/mirrors/mirrors.cgi/xerces/c">Xerces-C/C++ XML</a> 
Parser 3.0 or newer, version 3.1.1 is preferred.
</p>

<p>
<b>Our Xalan Packages</b>
</p>
<p>The source package contains all the scripts needed to build the
library, sample programs, and documentation for a wide variety
of Windows and UNIX platforms.  The documentation package provides
usable html documentation that is already assembled for your web browsers.
</p>

<p>Building the API Reference documents requires a current version of the 
<a href="http://www.doxygen.org">Doxygen</a> and 
<a href="http://www.graphviz.org">GraphViz</a> programs for UNIX or Linux. 
We have not tried building the API Reference on a Windows platform.
A usable API Reference is included with the documentation package.
</p>


<a name="DownloadNotes">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>Downloading Notes</h3>
 	
<p>Apache package releases are distributed via various mirror sites around the world, 
and the links below will direct you to a mirror near you. 
Alternative mirror locations are also provided.</p>

<table class="note">
<tr>
<td class="noteImg">
<img src="resources/note.gif" alt="note" />
</td>
<td class="noteTxt">You must <a href="#VerifyPkgs">verify the integrity</a> of the downloaded files 
using signatures downloaded from the Apache master distribution directory.</td>
</tr>
</table>

<p>Access to the latest (and possibly unstable) source can be accessed via 
<a href="http://svn.apache.org/repos/asf/xalan/c/trunk">SVN</a>
</p>
 
<p>Archives of old Xalan-C/C++ releases can be found at the 
<a href="http:archive.apache.org/dist/xalan/xalan-c">Apache Xalan Archives</a>
and the
<a href="http:archive.apache.org/dist/xml/xalan-c">Old Apache XML Archives</a>.</p>

<p>Archives of old Xerces-C/C++ parser distributions can be found at the
<a href="http:archive.apache.org/dist/xerces/c">Apache Xerces Archives</a>
and the
<a href="http:archive.apache.org/dist/xml/xalan-c">Old Apache XML Archives</a>.</p>


 


<a name="SourcePkgs">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h4>Source Packages</h4>
<p>
<b>Xalan-C/C++ <a href="http://www.apache.org/dist/xalan/xalan-c/KEYS">KEYS</a>
</b>
</p>
<ul>
 <li>xalan-c-1.11-src.tar.gz</li>
 <li>xalan-c-1.11-src.zip</li>
</ul>
<p>You can download the Xalan-C/C++ source packages from the 
   <a href="http:///www.apache.org/dyn/mirrors/mirrors.cgi/xalan/xalan-c/sources">
   Apache Mirrors</a>.</p>
<p>You should <a href="#VerifyPkgs">verify</a> your packages against
   the trusted signatures posted on the Apache master distribution site</p>


<a name="DocPkgs">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h4>Documentation Packages</h4>
<p>These documentation packages can be built from the Xalan-C/C++ 
<a href="#SourcePkgs">source distributions</a> on Linux or UNIX systems.
Windows systems can only build the basic webpages without the apiDocs 
interactive API (Application Program Interface) pages.
</p>
<p>The <b>html-full</b> is a very large package (355+ MB).  It contains the
   interactive graphics images that map the include file relationships and
   class relationships.  The <b>html-nograf</b> (42 MB) just contains tabular
   relationships without the large volume of generated graphics.
</p>
<p>
<b>Xalan-C/C++ <a href="http://www.apache.org/dist/xalan/xalan-c/KEYS">KEYS</a>
</b>
</p>
<ul>
 <li>xalan-c-1.11-docs-html-full.tar.gz</li>
 <li>xalan-c-1.11-docs-html-full.zip</li>
 <li>xalan-c-1.11-docs-html-nograf.tar.gz</li>
 <li>xalan-c-1.11-docs-html-nograf.zip</li>
</ul>
<p>You can download the Xalan-C/C++ documentation packages from the 
   <a href="http:///www.apache.org/dyn/mirrors/mirrors.cgi/xalan/xalan-c/docs">
   Apache Mirrors</a>.</p>
<p>You should <a href="#VerifyPkgs">verify</a> your packages against
   the trusted signatures posted on the Apache master distribution site</p>


<a name="BinaryPkgs">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h4>Binary Packages</h4>
<p>We are distributing compiled binary packages for several
platforms.  The Xalan-C/C++ <a href="#DocPkgs">documentation</a> 
is provided as a separate package.  We would like to distribute binary packages 
for platforms on which Xerces-C/C++ has binary packages distributed.
</p>
<p>Both the Xalan (XSLT) and Xerces (XML Parser) libraries should
both be compiled with the same version of C++ compiler.  A mismatch
of compiler versions is known to create runtime library reference
errors.  If you cannot find a compatible Xerces library, you should
obtain the Xerces sources and compile both libraries.
</p>
<p>Binary packages labeled <b>xalan_combined</b> have compiled
libraries for both Xalan-C/C++ and Xerces-C/C++.  All binary
packages include the <b>Xalan</b> or <b>xalan.exe</b>
command line styleshet transformation processor.
</p>

<table class="note">
<tr>
<td class="noteImg">
<img src="resources/note.gif" alt="note" />
</td>
<td class="noteTxt">The development cycles for Xerces-C/C++ and Xalan-C/C++ are
separately managed.  There is no synchronization of product distribution.</td>
</tr>
</table>

<p>
<b>Windows Packages - 32 BIT</b>
</p>
<ul>
 <li>xalan_c-1.11-x86-windows-vc71.zip for MS VS 2003</li>
 <li>xalan_c-1.11-x86-windows-vc8.zip for MS VS 2005 </li>
 <li>xalan_c-1.11-x86-windows-vc9.zip for MS VS 2008</li>
 <li>xalan_c-1.11-x86-windows-vc10.zip for MS VS 2010</li>
</ul>
<p>Combined with Xerces Parser</p>
<ul>
 <li>xalan_comb-1.11-x86-windows-vc71.zip for MS VS 2003</li>
 <li>xalan_comb-1.11-x86-windows-vc8.zip for MS VS 2005 </li>
 <li>xalan_comb-1.11-x86-windows-vc9.zip for MS VS 2008</li>
 <li>xalan_comb-1.11-x86-windows-vc10.zip for MS VS 2010</li>
</ul> 
<p>
<b>Windows Packages - 64 BIT</b>
</p>
<ul>
 <li>xalan_c-1.11-amd64-windows-vc8.zip for MS VS 2005</li>
 <li>xalan_c-1.11-amd64-windows-vc9.zip for MS VS 2008</li>
 <li>xalan_c-1.11-amd64-windows-vc10.zip for MS VS 2010</li>
</ul>
<p>Combined with Xerces Parser</p>
<ul>
 <li>xalan_comb-1.11-amd64-windows-vc8.zip for MS VS 2005</li>
 <li>xalan_comb-1.11-amd64-windows-vc9.zip for MS VS 2008</li>
 <li>xalan_comb-1.11-amd64-windows-vc10.zip for MS VS 2010</li>
</ul>
<p>
<b>BSD Packages - 64 BIT</b>
</p>
<ul>
 <li>xalan-c-1.11-x86_64-freebsd_9-gcc_4_2.tar.gz</li>
 <li>xalan_combined-c-1.11-x86_64-freebsd_9-gcc_4_2.tar.gz</li>
</ul>
<p>
<b>Linux Packages</b>
</p>
<ul>
 <li>xalan-c-1.11-x86_64-linux_2_6_32-gcc_4_4.tar.gz</li>
 <li>xalan_combined-c-1.11-x86_64-linux_2_6_32-gcc_4_4.tar.gz</li>
</ul>
<p>You can download the Xalan-C/C++ compiled binary packages from the 
   <a href="http:///www.apache.org/dyn/mirrors/mirrors.cgi/xalan/xalan-c/binaries">
   Apache Mirrors</a>.</p>
<p>You should <a href="#VerifyPkgs">verify</a> your packages against
   the trusted signatures posted on the Apache master distribution site</p>


<a name="VerifyPkgs">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>Verify The Integrity of the Files</h3>

<p>It is essential that you verify the integrity of the downloaded 
   files using the PGP or MD5 signatures. You should only download the
   <a href="http://www.apache.org/dist/xalan/xalan-c/KEYS">KEYS</a>
   and the (asc/md5) signature files from the Apache Master Distribution.
   The Apache Mirrors of previous sections should be used to download
   the products.</p>
<ul>
  <li>
<a href="http://www.apache.org/dyn/mirrors/mirrors.cgi/xalan/xalan-c/sources">
      Apache Mirror Xalan-C Sources</a>
</li>
  <li>
<a href="http://www.apache.org/dist/xalan/xalan-c/sources">
      Apache Master Xalan-C Sources - for Signature Files</a>
</li>
  <li>
<a href="http://www.apache.org/dyn/mirrors/mirrors.cgi/xalan/xalan-c/docs">
      Apache Mirror Xalan-C Documentation</a>
</li>
  <li>
<a href="http://www.apache.org/dist/xalan/xalan-c/docs">
      Apache Master Xalan-C Documentation - for Signature Files</a>
</li>
  <li>
<a href="http://www.apache.org/dyn/mirrors/mirrors.cgi/xalan/xalan-c/binaries">
      Apache Mirror Xalan-C Binary Packages</a>
</li>
  <li>
<a href="http://www.apache.org/dist/xalan/xalan-c/binaries">
      Apache Master Xalan-C Binary Packages - for Signature Files</a>
</li>
</ul>

<p>Make sure you get the signature file for the particular distribution from the master directory, 
   rather than from a mirror. 
   Then verify the signatures using:</p>
<blockquote class="source">
<pre>
   % pgpk -a KEYS
   % pgpv &lt;archive-name&gt;.tar.gz.asc
</pre>
</blockquote>
<b>or</b>
<blockquote class="source">
<pre>
   % pgp -ka KEYS
   % pgp &lt;archive-name&gt;.tar.gz.asc
</pre>
</blockquote>
<b>or</b>
<blockquote class="source">
<pre>
   % gpg --import KEYS
   % gpg --verify &lt;archive-name&gt;.tar.gz.asc
</pre>
</blockquote>
<p>Alternatively, you can verify the MD5 signature on the files. 
A unix program called md5 or md5sum is included in many unix distributions. 
It is also available as part of 
<a href="http://www.gnu.org/directory/text/wordproc/textutils.html">GNU Textutils</a>.
 Windows users can get binary md5 programs from 
<a href="http://www.fourmilab.ch/md5/">here</a>,
<a href="http://www.pc-tools.net/win32/freeware/console/">here</a>, or 
<a href="http://www.slavasoft.com/fsum/">here</a>.</p>

<a name="PlatformComp">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>Platform Compatibility</h3>

<p>We currently have no one committed to release UNIX and Linux
binary packages.  If you have scripts to build these packages,
your help would be appreciated. 
You can contribute by posting your comments to the 
<a href="mailto:dev@xalan.apache.org">xalan-dev</a> mailing list.</p>

<p>The compiler version used for each platform is listed in the table below.
The build platforms shown here have Xerces-C/C++ binary package support.
    <table border="1">
       <tr>
         <th class="content" rowspan="1" colspan="1">Platform - Operating System</th>
         <th class="content" rowspan="1" colspan="1">Compilers</th>
       </tr>
       <tr>
         <td class="content" rowspan="1" colspan="1">Windows X86</td>
         <td class="content" rowspan="1" colspan="1">VC7.1, VC8, VC9, VC10</td>
       </tr>
       <tr>
         <td class="content" rowspan="1" colspan="1">Windows X86_64</td>
         <td class="content" rowspan="1" colspan="1">VC8, VC9, VC10</td>
       </tr>
       <tr>
         <td class="content" rowspan="1" colspan="1">HPUX ia64</td>
         <td class="content" rowspan="1" colspan="1">ACC 6</td>
       </tr>
       <tr>
         <td class="content" rowspan="1" colspan="1">HPUX ia64_64</td>
         <td class="content" rowspan="1" colspan="1">ACC 6</td>
       </tr>
       <tr>
         <td class="content" rowspan="1" colspan="1">AIX powerpc</td>
         <td class="content" rowspan="1" colspan="1">xlc 7.0</td>
       </tr>
       <tr>
         <td class="content" rowspan="1" colspan="1">AIX powerpc_64</td>
         <td class="content" rowspan="1" colspan="1">xlc 7.0</td>
       </tr>
       <tr>
         <td class="content" rowspan="1" colspan="1">SOLARIS sparc</td>
         <td class="content" rowspan="1" colspan="1">cc 5.10</td>
       </tr>
       <tr>
         <td class="content" rowspan="1" colspan="1">SOLARIS sparc_64</td>
         <td class="content" rowspan="1" colspan="1">cc 5.10</td>
       </tr>
       <tr>
         <td class="content" rowspan="1" colspan="1">SOLARIS X86</td>
         <td class="content" rowspan="1" colspan="1">cc 5.10</td>
       </tr>
       <tr>
         <td class="content" rowspan="1" colspan="1">SOLARIS X86_64</td>
         <td class="content" rowspan="1" colspan="1">cc 5.10</td>
       </tr>
       <tr>
         <td class="content" rowspan="1" colspan="1">LINUX X86</td>
         <td class="content" rowspan="1" colspan="1">gcc 3.4</td>
       </tr>
       <tr>
         <td class="content" rowspan="1" colspan="1">Linux X86_64</td>
         <td class="content" rowspan="1" colspan="1">gcc 3.4</td>
       </tr>
       <tr>
         <td class="content" rowspan="1" colspan="1">MAC OSX X86</td>
         <td class="content" rowspan="1" colspan="1">gcc 4.0</td>
       </tr>
    </table>
</p>
<p>Building for platforms other than those listed will require
a build of the Xerces-C/C++ XML Parser library from the sources.
Use of Xalan and Xerces libraries compiled with100 63024    0 17503  100 45521   159k   414k --:--:-- --:--:-- --:--:--  411k100 63024    0 17503  100 45521   157k   410k --:--:-- --:--:-- --:--:--  407k
 different versions
of compilers may cause problems</p>

<table class="note">
<tr>
<td class="noteImg">
<img src="resources/note.gif" alt="note" />
</td>
<td class="noteTxt">Use GNU tar to untar the Solaris distribution file; see 
  <a href="faq.html#faq-11">A tar checksum error on Solaris</a>.
</td>
</tr>
</table>

<p>If you want to take advantage of the support for number formatting, sorting, 
   and encoding the ICU provides, you should also download 
   and install the <a href="" />; see 
   <a href="usagepatterns.html#icu">Using the ICU</a>.
</p>

<p>The IBM ICU is supported with Xerces-C version 2.8.  Xerces-C version 3 has 
   introduced transcoding support modules, currently being evaluated 
   for Xalan XSLT transcoders.
</p>

<table class="note">
<tr>
<td class="noteImg">
<img src="resources/note.gif" alt="note" />
</td>
<td class="noteTxt">To access previous releases of Xalan-C++, visit the 
  <a href="http://archive.apache.org/dist/xml/xalan-c/">Xalan-C archive directory</a>
</td>
</tr>
</table>

<p align="right" size="2">
<a href="#content">(top)</a>
</p>
</div>
<div id="footer">Copyright © 1999-2012 The Apache Software Foundation<br />Apache, Xalan, and the Feather logo are trademarks of The Apache Software Foundation<div class="small">Web Page created on - </div>
</div>
</body>
</html>

../../extra/xdocs/extensions.xml
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0HTTP/1.1 100 Continue

HTTP/1.1 200 OK
Date: Mon, 17 Apr 2017 01:22:22 GMT
Server: Apache/2.4.10 (Debian)
Vary: Accept-Encoding
Transfer-Encoding: chunked
Content-Type: text/plain; charset=utf-8


<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>ASF: Xalan-C++ Extension Functions</title>
<meta http-equiv="content-type" content="text/html; charset=UTF-8" />
<meta http-equiv="Content-Style-Type" content="text/css" />
<link rel="stylesheet" type="text/css" href="resources/apache-xalan.css" />
</head>
<!--
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements. See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership. The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the  "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 -->
<body>
<div id="title">
<table class="HdrTitle">
<tbody>
<tr>
<th rowspan="2">
<a href="http://www.apache.org">
<img alt="Trademark Logo" src="resources/asf_logo.png" width="144" height="75" />
</a>
</th>
<th text-align="center" width="75%">
<a href="index.html" />
</th>
</tr>
<tr>
<td valign="middle">Xalan-C++ Extension Functions</td>
</tr>
</tbody>
</table>
<table class="HdrButtons" align="center" border="1">
<tbody>
<tr>
<td>
<a href="http://www.apache.org">Apache Foundation</a>
</td>
<td>
<a href="http://xalan.apache.org">Xalan Project</a>
</td>
<td>
<a href="http://xerces.apache.org">Xerces Project</a>
</td>
<td>
<a href="http://www.w3.org/TR">Web Consortium</a>
</td>
<td>
<a href="http://www.oasis-open.org/standards">Oasis Open</a>
</td>
</tr>
</tbody>
</table>
</div>
<div id="navLeft">
<ul />
</div>
<div id="content">
<h2>Xalan-C++ Extension Functions</h2>
<ul>
  <li>
<a href="#intro">Introduction</a>
</li>
  <li>
<a href="#implement">Implementing an extension function</a>
</li>
  <li>
<a href="#install">Installing an extension function</a>
</li>
  <li>
<a href="#use">Using an extension function</a>
</li>
</ul>
<a name="intro">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>Introduction</h3>
<p>At times, you may want to call your own custom C functions from a stylesheet. For these situations, Xalan-C++ supports the 
   creation and use of extension functions. Xalan-C++ also provides a <a href="extensionslib.html">library of extension functions
   </a> for your use.</p>
<p>You can think of extension functions as extending the core library of functions that XPath provides. Like the
   XPath functions, an extension function returns an XObject, which may contain a value of any of the five XSLT
   data types: node-set, result-tree-fragment, string, boolean, or number.</p> 
<p>You can send arguments to an extension function in the form of XPath expressions, literals (for string, boolean, and number), 
   the values returned by other functions, and XSL variables or parameters set to any of the preceding.</p>
<p>For an example that implements, installs, and uses three extension functions, see the 
<a href="samples.html#externalfunctions">External Functions</a> sample.</p>
<table class="note">
<tr>
<td class="noteImg">
<img src="resources/note.gif" alt="note" />
</td>
<td class="noteTxt">Xalan-C++ does not support extension elements.</td>
</tr>
</table>


<a name="implement">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>Implementing an extension function</h3>
<p>Like the standard XPath functions, the functions you create derive from the Function base class. Set up your 
   extension function class as follows:</p>
<ol>
  <li>The body of a function is the execute() method. Use the appropriate XObjectFactory method -- createNumber()
      in the example below -- to create an XObject corresponding to the XSLT data type the function returns.<br />
<br />
</li>
  <li>Implement a clone() method to enable Xalan to create and maintain a copy of the extension
      function.<br />
<br />
</li> 
  <li>(Optional) As Xalan does for the XPath functions, you may want to prevent the compiler from generating 
      an assignment or equality operator for this function.</li>
</ol>
<p>These features all appear in the following example.</p>
<blockquote class="source">
<pre>
// Base header file.  Must be first.
#include &lt;xalanc/Include/PlatformDefinitions.hpp&gt;

#include &lt;cmath&gt;
#include &lt;ctime&gt;

#include &lt;xercesc/util/PlatformUtils.hpp&gt;
#include &lt;xalanc/XalanTransformer/XalanTransformer.hpp&gt;
#include &lt;xalanc/XPath/XObjectFactory.hpp&gt;

XALAN_CPP_NAMESPACE_USE

// This class defines a function that will return the square root
// of its argument.
class FunctionSquareRoot : public Function
{
public:

  /**
   * Execute an XPath function object.  The function must return a valid
   * XObject.
   *
   * @param executionContext executing context
   * @param context          current context node
   * @param opPos            current op position
   * @param args             vector of pointers to XObject arguments
   * @return                 pointer to the result XObject
   */
  virtual XObjectPtr
  execute(
      XPathExecutionContext&amp; executionContext,
      XalanNode* /* context */,
      const XObjectPtr arg,
     	const Locator*	/* locator */) const
  {
    if (args.size() != 1)
    {
      executionContext.error("The square-root() function takes one argument!", 
                              context);
    }
    assert(args[0] != 0);
    // Use the XObjectFactory createNumber() method to create an XObject 
    // corresponding to the XSLT number data type.
    return executionContext.getXObjectFactory().createNumber(
                                                        sqrt(args[0]-&gt;num()));
  }

  /**
   * Implement clone() so Xalan can copy the square-root function into
   * its own function table.
   *
   * @return pointer to the new object
   */
// For compilers that do not support covariant return types,
// clone() must be declared to return the base type.
#if defined(XALAN_NO_COVARIANT_RETURN_TYPE)
  virtual Function*
#else
  virtual FunctionSquareRoot*
#endif
  clone() const
  {
    return new FunctionSquareRoot(*this);
  }

private:
  // The assignment and equality operators are not implemented...
  FunctionSquareRoot&amp;
  operator=(const FunctionSquareRoot&amp;);
  bool
  operator==(const FunctionSquareRoot&amp;) const;
}
</pre>
</blockquote>   

<a name="install">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>Installing an extension function</h3>
<p>
<a href="apiDocs/classXalanTransformer.html">XalanTransformer</a> provides methods for installing and uninstalling external functions:</p>
<ul>
  <li>installExternalFunction() makes the function available in the current instance of XalanTransformer. Use uninstallExternalFunction() to remove the function.<br />
<br />
</li>
  <li>installExternalFunctionGlobal() makes the function available globally. Use uninstallExternalFunctionGlobal() to remove the function. The global install and uninstall operations are not thread-safe.  However, all global functions should be thread-safe, because multiple threads could call a particular function instance at the same time.</li>
</ul>
<p>These methods include arguments for the namespace, the function name, and the function implementation.</p>
<p>When you install an extension function, the function inhabits the namespace you designate. For information about XML namespaces, see <a href="http://www.w3.org/TR/REC-xml-names/">Namespaces in XML</a>.</p>
<p>The following code fragment installs locally the square root function defined above, and binds it to the extension-function name "square-root" in the namespace "http://MyExternalFunction.mycompany.org" so it can be accessed from stylesheets. Keep in mind that the function name does not need to be the same as the name of the function class, and that a function name may be used more than once provided that each function with that name is installed in a different namespace.</p>
<blockquote class="source">
<pre>#include &lt;xalanc/Include/PlatformDefinitions.hpp&gt;
#include &lt;xercesc/util/PlatformUtils.hpp&gt;
#include &lt;xalanc/XalanTransformer/XalanTransformer.hpp&gt;
// You have created a header file for FunctionSquareRoot.
#include &lt;MyFunctions/FunctionSquareRoot.hpp&gt;
// The namespace...
const XalanDOMString	
    theNamespace("http://MyExternalFunction.mycompany.org");
    
theXalanTransformer.installExternalFunction(theNamespace,
                                            XalanDOMString("square-root"),
                                            FunctionSquareRoot());</pre>
</blockquote>
<p>For an example that installs three functions, see the <a href="samples.html#externalfunctions">External Functions</a> sample.</p>

<a name="use">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>Using an extension function</h3>
<p>To use the extension function in a stylesheet, you must do the following:</p>
<ol>
  <li>Declare the extension function namespace.<br />
<br />
      <code>xmlns:<b>
<i>prefix</i>
</b>=<b>
<i>URI</i>
</b>
</code>
<br />
<br />
      The <b>
<i>prefix</i>
</b> identifies the namespace, and <b>
<i>URI</i>
</b> matches the namespace specified when the function
      is installed.<br />
<br />
      By default, namespace declarations are included in the transformation output. To exclude namespaces from the output, 
      use<br />
<br />
      <code>exclude-result-prefixes="<b>
<i>prefix-1 prefix-2 ...</i>
</b>"</code>
<br />
<br />
      in the stylesheet element or<br />
<br />
      <code>xsl:exclude-result-prefixes="<b>
<i>prefix-1 prefix-2 ...</i>
</b>"</code>
<br />
<br />
      in a literal result element or extension element.<br />
<br />
</li>
  <li>Call the extension function in the same manner you would call an XPath function. The function name you use in the stylesheet is a Qualified Name (QName) made up of the prefix you declared in step 1 and the function name you specified when you installed the function.<br />
<br />
      You can use XPath expressions, literals (for string, boolean, and number), and values returned by other functions to
      specify function arguments.</li>
</ol>
<p>Suppose, for example, you are working with XML documents containing area elements like
   <code>&lt;area value="397"/&gt;</code>, where the value attribute identifies the area of a square.</p>
<p>The following stylesheet declares the square-root function namespace (the prefix is up to you), instructs 
   the processor not to copy the namespace declaration to the result tree, and uses the square-root function to return
   the square root of //area/@value:</p>
<blockquote class="source">
<pre>
&lt;?xml version="1.0"?&gt; 
&lt;xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" 
  version="1.0"
	xmlns:external="http://ExternalFunction.xalan-c.xml.apache.org"
  exclude-result-prefixes="external"&gt;
  
    &lt;xsl:template match="//area"&gt;
    &lt;out&gt;
      The area of the square is
      &lt;xsl:value-of select="@value"/&gt; square units.
      The length of each side is 
      &lt;xsl:value-of select="external:square-root(@value)"/&gt; units
    &lt;/out&gt;
</pre>
</blockquote>
<p>This stylesheet converts  <code>&lt;area value="397"/&gt;</code> into the following output:</p>
<blockquote class="source">
<pre>&lt;out&gt;
  The area of the square is 
  397 square units.
  The length of each side is 
  19.9249 units.
&lt;/out&gt;
</pre>
</blockquote>
<p>For a slightly more complex variation on this example,  
see the <a href="samples.html#externalfunctions">External Functions</a> sample.</p>
<p align="right" size="2">
<a href="#content">(to100 57800    0 14408  100 43392   129k   389k --:--:-- --:--:-- --:--:--  392k
p)</a>
</p>
<h4>Passing Nodes to a function</h4>
<p>Please keep in mind that <b>all</b> LocationPath expressions return a node-set, even if the expression only 
   returns a single attribute or a text node (node-sets with one member). You can use the XSLT string() function 
   to convert a node-set value to string, and the number() function to convert a node-set value to number (a double).</p>
<p>If you pass a node-set to an extension function, be sure to set up the function to process a node-set.</p>
<p>Suppose, for example, you have a ProcessNodes function class that uses<br />
<br /> 
   <code>const NodeRefListBase&amp; theNodeList = args[0]-&gt;nodeset();</code>
<br />
<br />
   in the execute() method to get a reference to the node-set.</p>
<p>Assuming you install the function as "ProcessNodes" and use the "node-ext" prefix in a stylesheet to refer to the ProcessNodes function namespace, any of the following function calls are syntactically possible:</p>
<p>
<code>&lt;!--Process the current node--&gt;</code>
<br />
<code>&lt;xsl:variable name="success" select="node-ext:ProcessNodes(.)"/&gt;</code>
</p>
<p>
<code>&lt;!--Process all nodes in current context--&gt;</code>
<br />
<code>&lt;xsl:variable name="success" select="node-ext:ProcessNodes(*)"/&gt;</code>
</p>
<p>
<code>&lt;!-- Process all nodes --&gt;</code>
<br />
<code>&lt;xsl:variable name="success" select="node-ext:ProcessNodes(/*)"/&gt;</code>
</p>
<p>
<code>&lt;!--Process the foo/baz nodes in current context --&gt;</code>
<br />
<code>&lt;xsl:variable name="success" select="node-ext:ProcessNodes(foo/baz)"/&gt;</code>
</p>
<p>
<code>&lt;!--Process the/foo/baz and /bar/saz nodes --&gt;</code>
<br />
<code>&lt;xsl:variable name="success" select="node-ext:ProcessNodes(/foo/baz | /bar/saz)"/&gt;</code>
</p>
<p>The NodeRefListBase is in fact a list of references into the XML document, so keep in mind that getNextSibling(), 
for example, gets you the next sibling in the document, which may not be the next Node in the node-set.</p>


<p align="right" size="2">
<a href="#content">(top)</a>
</p>
</div>
<div id="footer">Copyright © 1999-2012 The Apache Software Foundation<br />Apache, Xalan, and the Feather logo are trademarks of The Apache Software Foundation<div class="small">Web Page created on - </div>
</div>
</body>
</html>

../../extra/xdocs/extensionslib.xml
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0HTTP/1.1 100 Continue

HTTP/1.1 200 OK
Date: Mon, 17 Apr 2017 01:22:23 GMT
Server: Apache/2.4.10 (Debian)
Vary: Accept-Encoding
Transfer-Encoding: chunked
Content-Type: text/plain; charset=utf-8


<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>ASF: Extensions library</title>
<meta http-equiv="content-type" content="text/html; charset=UTF-8" />
<meta http-equiv="Content-Style-Type" content="text/css" />
<link rel="stylesheet" type="text/css" href="resources/apache-xalan.css" />
</head>
<!--
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements. See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership. The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the  "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 -->
<body>
<div id="title">
<table class="HdrTitle">
<tbody>
<tr>
<th rowspan="2">
<a href="http://www.apache.org">
<img alt="Trademark Logo" src="resources/asf_logo.png" width="144" height="75" />
</a>
</th>
<th text-align="center" width="75%">
<a href="index.html" />
</th>
</tr>
<tr>
<td valign="middle">Extensions library</td>
</tr>
</tbody>
</table>
<table class="HdrButtons" align="center" border="1">
<tbody>
<tr>
<td>
<a href="http://www.apache.org">Apache Foundation</a>
</td>
<td>
<a href="http://xalan.apache.org">Xalan Project</a>
</td>
<td>
<a href="http://xerces.apache.org">Xerces Project</a>
</td>
<td>
<a href="http://www.w3.org/TR">Web Consortium</a>
</td>
<td>
<a href="http://www.oasis-open.org/standards">Oasis Open</a>
</td>
</tr>
</tbody>
</table>
</div>
<div id="navLeft">
<ul />
</div>
<div id="content">
<h2>Extensions library</h2>
<ul>
  <li>
<a href="#intro">Introduction</a>
</li>
  <li>
<a href="#exslt">Beta support for EXSLT extensions</a>
</li>
  <li>
<a href="#xalanns">Xalan namespace</a>
</li>
  <li>
<a href="#nodeset">nodeset</a>
</li>
  <li>
<a href="#intersection">intersection</a>
</li>
  <li>
<a href="#difference">difference</a>
</li>
  <li>
<a href="#distinct">distinct</a>
</li>
  <li>
<a href="#evaluate">evaluate</a>
</li>
  <li>
<a href="#hassamenodes">hasSameNodes</a>
</li>
</ul>

<a name="intro">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>Introduction</h3>
<p>Extension functions provide a powerful mechanism
   for extending and simplifying what you can do with an XLST processor like
   Xalan. With input and contributions from the XML open-source developer community, we are working on placing the most useful
   extensions in an extensions library distributed with Xalan-C++. If you have ideas and/or contributions you would like to make, 
   please email us at the <a href="mailto:" />.</p>


<a name="exslt">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>EXSLT extensions</h3>
<p>Xalan-C++ supports the <a href="http://exslt.org/">EXSLT</a> initiative to provide a set of
   standard extension functions to XSLT users. Xalan-C++ includes beta implementations for 
   functions in four of the EXSLT namespaces (some are calls to extension already in the Xalan namespace).</p> 
<p>The source files for the implementations are in the XalanEXSLT subdirectory of the source tree.  See</p> 
<ul>
  <li>
<a href="apiDocs/XalanEXSLTCommonImpl_8hpp.html">XalanEXSLTCommonImpl</a>
</li>
  <li>
<a href="apiDocs/XalanEXSLTMathImpl_8hpp.html">XalanEXSLTMathImpl</a>
</li>
  <li>
<a href="apiDocs/XalanEXSLTSetImpl_8hpp.html">XalanEXSLTSetImpl</a>
</li>
  <li>
<a href="apiDocs/XalanEXSLTStringImpl_8hpp.html">XalanEXSLTStringImpl</a>
</li>
  <li>
<a href="apiDocs/XalanEXSLTDynamicImpl_8hpp.html">XalanEXSLTDynamicImpl</a>
</li>
  <li>
<a href="apiDocs/XalanEXSLTDateTimeImpl_8hpp.html">XalanEXSLTDateTimeImpl</a>
</li>
</ul>
<p>For the function specifications, see:</p>
<ul>
  <li>
<a href="http://www.exslt.org/exsl/exsl.html">EXSLT common functions</a>
</li>
  <li>
<a href="http://www.exslt.org/math/math.html">EXSLT math functions</a>
</li>
  <li>
<a href="http://www.exslt.org/set/set.html">EXSLT set functions</a>
</li>
  <li>
<a href="http://www.exslt.org/str/str.html">EXSLT string functions</a>
</li>
  <li>
<a href="http://www.exslt.org/dyn/dyn.html">EXSLT dynamic functions</a>
</li>
  <li>
<a href="http://www.exslt.org/date/date.html">EXSLT date-time functions</a>
</li>
</ul>
<p>Anyone who would like to participate in the Xalan-C++ initiative to support EXSLT by testing these implementations or implementing 
   other EXSLT functions is more than welcome. Please email us at the <a href="mailto:" />.</p>


<a name="xalanns">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>Xalan namespace</h3>
<p>We are placing the Xalan extension functions in the XalanExtensions module and we have defined a namespace for this module:</p>
<p>     <code>http://xml.apache.org/xalan</code>
</p>
<p>If you are calling Xalan-C++-supplied extensions, we recommend that you define this namespace in your stylesheet element, and 
   call the extension using the namespace prefix that you have associated with that namespace. That way, if we later reorganize 
   how the Xalan-C++-supplied extensions are stored, you won't have to modify your stylesheet.</p>
<p>For an example that uses this namespace, see <a href="#ex-nodeset">Example with the nodeset extension function</a>.</p>


<a name="nodeset">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>nodeset</h3>
<p>Implemented in <a href="apiDocs/classFunctionNodeSet.html">FunctionNodeSet</a>, <code>nodeset (result-tree-fragment)</code> 
   casts a result tree fragment into a node-set.</p>
<table class="note">
<tr>
<td class="noteImg">
<img src="resources/note.gif" alt="note" />
</td>
<td class="noteTxt">When you bind a variable to a template, rather than to the value generated by a select expression, the data type of the variable 
      is result tree fragment. For more information, see <a href="http://www.w3.org/TR/xslt#section-Result-Tree-Fragments">Result 
      Tree Fragments</a>.</td>
</tr>
</table>

<a name="ex-nodeset">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h4>Example with the nodeset extension function</h4>
<p>The following stylesheet uses the nodeset extension function to cast a result tree fragment into a node-set that can then be 
   navigated in standard XPath manner. It uses the http://xml.apache.org/xalan namespace to provide access to the nodeset() method 
   in xml.apache.xalan.lib.Extensions.</p>
<blockquote class="source">
<pre>
&lt;?xml version="1.0"?&gt;
&lt;xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" 
                   version="1.0"
                   xmlns:xalan="http://xml.apache.org/xalan"
                   exclude-result-prefixes="xalan"&gt;
&lt;xsl:template match="/"&gt;
  &lt;out&gt;
	  &lt;xsl:variable name="rtf"&gt;
      &lt;docelem&gt;
        &lt;elem1&gt;
          &lt;elem1a&gt;ELEMENT1A&lt;/elem1a&gt;
          &lt;elem1b&gt;,ELEMENT1B&lt;/elem1b&gt;
        &lt;/elem1&gt;
        &lt;elem2&gt;
          &lt;elem2a&gt;ELEMENT2A&lt;/elem2a&gt;
        &lt;/elem2&gt;
      &lt;/docelem&gt;
    &lt;/xsl:variable&gt;     
      &lt;xsl:for-each select="xalan:nodeset($rtf)/docelem//*"&gt;
        &lt;xsl:value-of select="name(.)"/&gt;&lt;xsl:text&gt;,&lt;/xsl:text&gt;
      &lt;/xsl:for-each&gt;
  &lt;/out&gt;
&lt;/xsl:template&gt; 
&lt;/xsl:stylesheet&gt;
</pre>
</blockquote>
<p>The output of running this stylesheet (with any XML input source) is a comma-delimited list of the element names in the node-set<br />
     <code>100 50257    0 10637  100 39620   105k   393k --:--:-- --:--:-- --:--:--  394k
&lt;out&gt;elem1,elem1a,elem1b,elem2,elem2a&lt;/out&gt;</code>
</p>
<table class="note">
<tr>
<td class="noteImg">
<img src="resources/note.gif" alt="note" />
</td>
<td class="noteTxt">For illustration purposes, the preceding stylesheet pays no attention to the structure and content of the XML input document. 
      Instead, it processes the template (in the stylesheet) bound to the variable named rtf.</td>
</tr>
</table>


<a name="intersection">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>intersection</h3>
<p>Implemented in <a href="apiDocs/classFunctionIntersection.html">FunctionIntersection</a>, <code>intersection (node-set1, 
   node-set2)</code> returns a node-set with all nodes that are in ns1 and in ns2.</p>

<a name="difference">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>difference</h3>
<p>Implemented in <a href="apiDocs/classFunctionDifference.html">FunctionDifference</a>, <code>difference(node-set1, 
   node-set2)</code> returns a node-set with the nodes in node-set1 and not in node-set2.</p>

<a name="distinct">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>distinct</h3>
<p>Implemented in <a href="apiDocs/classFunctionDistinct.html">FunctionDistinct</a>, distinct (node-set) returns a node-set 
   containing nodes with distinct string values. If more than one node in the node-set contains the same text node value, distinct 
   only returns the first of these nodes that it finds.</p>

<a name="evaluate">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>evaluate</h3>
<p>Implemented in <a href="apiDocs/classFunctionEvaluate.html">FunctionEvaluate</a>, <code>evaluate (xpath-expression)</code> 
   returns the result of evaluating the xpath-expression in the current XPath expression context (automatically passed in by the 
   extension mechanism).</p>
<p>Use the evaluation extension function when the value of the expression is not known until run time.</p>

<a name="hassamenodes">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>hasSameNodes</h3>
<p>Implemented in <a href="apiDocs/classFunctionHasSameNodes.html">FunctionHasSameNodes</a>, <code>hasSameNodes(node-set1, 
   node-set2)</code> returns true if both node-set1 and node-set2 contain exactly the same set of nodes.</p>

<p align="right" size="2">
<a href="#content">(top)</a>
</p>
</div>
<div id="footer">Copyright © 1999-2012 The Apache Software Foundation<br />Apache, Xalan, and the Feather logo are trademarks of The Apache Software Foundation<div class="small">Web Page created on - </div>
</div>
</body>
</html>

../../extra/xdocs/faq.xml
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0HTTP/1.1 100 Continue

HTTP/1.1 200 OK
Date: Mon, 17 Apr 2017 01:22:23 GMT
Server: Apache/2.4.10 (Debian)
Vary: Accept-Encoding
Transfer-Encoding: chunked
Content-Type: text/plain; charset=utf-8


<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>ASF: Frequently asked questions</title>
<meta http-equiv="content-type" content="text/html; charset=UTF-8" />
<meta http-equiv="Content-Style-Type" content="text/css" />
<link rel="stylesheet" type="text/css" href="resources/apache-xalan.css" />
</head>
<!--
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements. See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership. The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the  "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 -->
<body>
<div id="title">
<table class="HdrTitle">
<tbody>
<tr>
<th rowspan="2">
<a href="http://www.apache.org">
<img alt="Trademark Logo" src="resources/asf_logo.png" width="144" height="75" />
</a>
</th>
<th text-align="center" width="75%">
<a href="index.html" />
</th>
</tr>
<tr>
<td valign="middle">Frequently asked questions</td>
</tr>
</tbody>
</table>
<table class="HdrButtons" align="center" border="1">
<tbody>
<tr>
<td>
<a href="http://www.apache.org">Apache Foundation</a>
</td>
<td>
<a href="http://xalan.apache.org">Xalan Project</a>
</td>
<td>
<a href="http://xerces.apache.org">Xerces Project</a>
</td>
<td>
<a href="http://www.w3.org/TR">Web Consortium</a>
</td>
<td>
<a href="http://www.oasis-open.org/standards">Oasis Open</a>
</td>
</tr>
</tbody>
</table>
</div>
<div id="navLeft">
<ul />
</div>
<div id="content">
<h2 class="faqSubHead">Questions</h2>
<ol start="1">
<li>
<a href="#faq-1">Where do I go to learn about XSLT</a>
</li>
<li>
<a href="#faq-2">Asking questions about Xalan-C++</a>
</li>
<li>
<a href="#faq-3">What is Xerces-C++?</a>
</li>
<li>
<a href="#faq-4">Which version of Xerces should I be using?</a>
</li>
<li>
<a href="#faq-5">Should I be using the Xerces DOM or Xalan DOM?</a>
</li>
<li>
<a href="#faq-6">Problems with samples in Windows</a>
</li>
<li>
<a href="#faq-7">Building on Windows</a>
</li>
<li>
<a href="#faq-8">Building on UNIX</a>
</li>
<li>
<a href="#faq-9">Make errors on UNIX platforms</a>
</li>
<li>
<a href="#faq-10">What is ICU</a>
</li>
<li>
<a href="#faq-11">A tar checksum error on Solaris</a>
</li>
<li>
<a href="#faq-12">Xalan-C++ in Apache</a>
</li>
<li>
<a href="#faq-13">Is Xalan-C++ thread-safe?</a>
</li>
<li>
<a href="#faq-14">What can I do to speed up transformations?</a>
</li>
<li>
<a href="#faq-15">Stylesheet validation</a>
</li>
<li>
<a href="#faq-16">What does the XalanDOMException HIERARCHY_REQUEST_ERR mean?</a>
</li>
<li>
<a href="#faq-17">Submitting Patches</a>
</li>
<li>
<a href="#faq-18">Transformation Output Methods</a>
</li>
<li>
<a href="#faq-19">Problems Using Sun's Forte/Workshop Compiler with code containing std::istrstream</a>
</li>
<li>
<a href="#faq-20">Modifying an instance of XalanDocument</a>
</li>
<li>
<a href="#faq-21">Changing Where Error Output is Sent</a>
</li>
<li>
<a href="#faq-22">Programmatic Error Information</a>
</li>
<li>
<a href="#faq-23">String Transcoding</a>
</li>
<li>
<a href="#faq-24">Error Code/Exception Summary</a>
</li>
<li>
<a href="#faq-25">Extension Functions</a>
</li>
<li>
<a href="#faq-26">Outputting results to a file on Windows 95/98</a>
</li>
<li>
<a href="#faq-27">Using format-number and ICU</a>
</li>
<li>
<a href="#faq-28">Perl wrapper for Xalan-C++?</a>
</li>
<li>
<a href="#faq-29">Missing LocalMsgIndex.hpp file</a>
</li>
</ol>
<h2 class="faqSubHead">Answers</h2>
<h3 id="faq-1" class="faqTitle">1. Where do I go to learn about XSLT</h3>
<div class="faqQuestion">Where do I go to learn about XSLT?</div>
<br />
<hr />
<div class="faqAnswer">
<p>The definitive sources are the W3C XSLT and XPath recommendations: <a href="" /> and 
      <a href="" />.</p>
   <p>For a brief listing of tutorials, discussion forums, and other materials, see <a href="overview.html#uptospeed">Getting up to speed with XSLT</a>.</p>
</div>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3 id="faq-2" class="faqTitle">2. Asking questions about Xalan-C++</h3>
<div class="faqQuestion">Where can I ask a question?</div>
<br />
<hr />
<div class="faqAnswer">
<p>For specific questions on Xalan-C++, see list archives: 
   <a href="http://marc.info/?l=xalan-c-users">xalan-c-users</a>
   and <a href="http://marc.info/?l=xalan-dev">xalan-dev</a>.
   You must subscribe to these Apache mailing lists before posting your questions.</p>
<p>The Apache Software Foundation has information on how you can subscribe to
   the <a href="http://www.apache.org/foundation/mailinglists.html">mailing lists</a>.</p>
<p>You can post messages to the lists by sending mail to:<br />
   <a href="mailto:c-users@xalan.apache.org">Post message to xalan-c-users</a>. (User's list)<br />
   <a href="mailto:dev@xalan.apache.org">Post message to xalan-dev list</a>. (Developer's list)</p>
<p>Again, please review the archives before posting a new question.</p>
</div>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3 id="faq-3" class="faqTitle">3. What is Xerces-C++?</h3>
<div class="faqQuestion">What is Xerces-C++ and why do I need it?</div>
<br />
<hr />
<div class="faqAnswer">
<p>Xerces-C++ is a validating XML parser written in a portable subset of C++. Xerces-C++ makes it easy to give your application the ability 
      to read and write XML data. Like Xalan-C++, Xerces-C++ is available from the Apache XML site:  
      <a href="http://xerces.apache.org/index.html">http://xerces.apache.org</a>
</p>
</div>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3 id="faq-4" class="faqTitle">4. Which version of Xerces should I be using?</h3>
<div class="faqQuestion">Which version of Xerces should I be using?</div>
<br />
<hr />
<div class="faqAnswer">
<p>The Xalan-C++ release notes includes information about the Xerces-C++ release with which the Xalan-C++ release has been coordinated 
      and tested. See <a href="whatsnew.html#status">Status</a>
</p>
</div>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3 id="faq-5" class="faqTitle">5. Should I be using the Xerces DOM or Xalan DOM?</h3>
<div class="faqQuestion">Should I be using the Xerces DOM or Xalan DOM?</div>
<br />
<hr />
<div class="faqAnswer">
<p>The Xalan DOM implementation is highly optimised for transformations.  However, whilst you can build documents in the Xalan DOM, 
      subsequent modification will not work.  The Xalan DOM is designed to be either an input or an output from a transformation, not 
      as a general DOM implementation.</p>
   <p>So in cases where you want to simply transform documents using Xalan, using the internal DOM implementation is the best approach.</p>
   <p>In cases where you want to modify the DOM document on the fly, you should use the Xerces DOM as the base document.  You can wrap 
      the Xerces DOM in a wrapper (see  <a href="usagepatterns.html#xercesdomwrapperparsedsource"> passing in a Xerces DOM</a>) 
      to then use as an input to a Xalan transformation.  Alternatively you can output the result of a transformation to a Xerces DOM 
      document (see <a href="usagepatterns.html#dom">working with DOM input and output</a>).  In either case, the Xerces document 
      can be freely modified.  However, after you modify the document, you need to re-build the wrapper so that any changes are replicated 
      in the Xalan wrappers.</p>
</div>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3 id="faq-6" class="faqTitle">6. Problems with samples in Windows</h3>
<div class="faqQuestion">I have encountered problem executing the Xalan-C++ sample applications after rebuilding them under Win32 Environment (Windows NT 4.0, SP3).
   When I tried to execute the sample, I receive the error message 
   "Debug Assertion Failed! ...  Expression: _BLOCK_TYPE_IS_VALID(pHead-&gt;nBlockUse)".</div>
<br />
<hr />
<div class="faqAnswer">
<p>You may be mixing debug and release versions of executables and libraries. In other words, if you are compiling the sample for debug, 
      then you should link with the debug version of the Xalan-C++ and Xerces-C++ libraries and run with the debug version of the dynamic link 
      libraries.</p>
   <p>You must also make sure your application is linking with the Debug multithreaded DLL run-time library or the Multithreaded DLL 
      run-time library.  To check this setting do the following in Visual C++:</p>
   <ol>
     <li>Select Settings from the Project menu.<br />
<br />
</li>
     <li>Click the C/C++ tab.<br />
<br />
</li>
     <li>In the Category drop-down list, select Code Generation.<br />
<br />
</li>
     <li>In the Use run-time library drop-down list, select Multithreaded DLL for the Win32 Release configuration, or select Debug 
         Multithreaded DLL for the Win32 Debug configuration.</li>
   </ol>
   <p>Once you have changed this setting, you must rebuild your project.</p>
</div>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3 id="faq-7" class="faqTitle">7. Building on Windows</h3>
<div class="faqQuestion">What do I need to rebuild Xalan-C++ on Windows?</div>
<br />
<hr />
<div class="faqAnswer">
<p>In order to build Xalan-C++ on Windows, you will need the following:</p>
<ul>
<li>The Xalan-C/C++ source distribution package.</li>
<li>The Xerces-C/C++ source distribution package or a compatible binary distribution package.</li>
<li>A compatible Microsoft Visual Studio .NET (2003, 2005, 2008, 2010) software development platform.</li>
</ul>
<p>The Xalan-C/C++ Version 1.11 (pre-release) is available from the Apache Subversion
   repository at <b>http://svn.apache.org/repos/asf/xalan/c/trunk/.</b>
</p>
<p>After Xalan-C/C++ Version 1.11 is released, it can be downloaded from:
   <a href="http://www.apache.org/dyn/closer.cgi/xalan/xalan-c">Xalan Distributions</a>.</p>
<p>The Xerces-C/C++ Version 3.1.1 is can be downloaded from:
   <a href="http://www.apache.org/dyn/closer.cgi/xerces/c/3">Xerces Distributions</a>.</p>
<p>If you are building with the 
   <a href="http://www.ibm.com/software/globalization/icu/">IBM-ICU</a>
   International Components for Unicode library, you will
   need to rebuild both the Xerces and Xalan libraries.</p>
<p>For more details, see <a href="buildlibs.html#winbldenv">Steps for doing a Windows build</a>.</p>
</div>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3 id="faq-8" class="faqTitle">8. Building on UNIX</h3>
<div class="faqQuestion">What do I need to rebuild Xalan-C++ on UNIX?</div>
<br />
<hr />
<div class="faqAnswer">
<p>To build Xalan-C++ on supported UNIX platforms, you need Xerces-C++, the GNU make utility, and a supported C++ compiler.  For more 
      details see: <a href="buildlibs.html#unixbldenv">Steps for doing a UNIX build</a>.</p>
</div>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3 id="faq-9" class="faqTitle">9. Make errors on UNIX platforms</h3>
<div class="faqQuestion">I get errors in the Makefile when running the make utility.  What's wrong?</div>
<br />
<hr />
<div class="faqAnswer">
<p>You must use the GNU make utility.  Other make utilities may not work with the Xalan Makefile</p>
</div>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3 id="faq-10" class="faqTitle">10. What is ICU</h3>
<div class="faqQuestion">What is ICU and why do I need it?</div>
<br />
<hr />
<div class="faqAnswer">
<p>The <a href="http://www.ibm.com/software/globalization/icu/">IBM-ICU</a>
      International Components for Unicode(ICU) is a C and C++ library that provides robust and 
      full-featured Unicode support on a wide variety of platforms. 
      Xalan-C++ uses the ICU to extend support for encoding, number formatting, and sorting.</p> 
   <p>The ICU is available for download from <a href="http://oss.software.ibm.com/icu/index.html">
      http://oss.software.ibm.com/icu/index.html</a>.</p>
   <p>Xalan release 1.10 was tested with International Components for Unicode(ICU) version 3.2. The curent Xalan
      release 1.11 is not fully tested with IBM-ICU.</p>
   <p>For more details see: <a href="usagepatterns.html#icu">Using the International Components for Unicode (ICU)</a>.</p>
   
</div>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3 id="faq-11" class="faqTitle">11. A tar checksum error on Solaris</h3>
<div class="faqQuestion">I am getting a tar checksum error on Solaris. What's the problem?</div>
<br />
<hr />
<div class="faqAnswer">
<p>The Solaris tar utility you are using does not properly handle files with long pathnames.  You must use GNU tar (gtar), which 
      handles arbitrarily long pathnames and is freely available on every platform on which Xalan-C++ is supported.  If you don't already 
      have GNU tar installed on your system, you can obtain it from the Free Software Foundation
      <a href="http://www.gnu.org/software/tar/tar.html">http://www.gnu.org/software/tar/tar.html</a>.  For additional background 
      information on this problem, see the online manual<a href="http://www.gnu.org/manual/tar/html_chapter/tar_8.html#SEC112">
      GNU tar and POSIX tar </a> for the utility.</p>
</div>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3 id="faq-12" class="faqTitle">12. Xalan-C++ in Apache</h3>
<div class="faqQuestion">Is it possible to run Xalan-C++ from an Apache server?</div>
<br />
<hr />
<div class="faqAnswer">
<p>A simple Apache module called <a href="samples.html#apachemodulexslt">ApacheModuleXSLT</a> is provided as a sample. 
      It demonstrates how to integrate Xalan-C++ with Apache.</p>
</div>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3 id="faq-13" class="faqTitle">13. Is Xalan-C++ thread-safe?</h3>
<div class="faqQuestion">Is Xalan-C++ thread-safe?</div>
<br />
<hr />
<div class="faqAnswer">
<p>Instances of XalanTransformer are not thread-safe; each thread should use its own instance.</p>
   <p>In order to support very efficient use in multi-threaded applications, Xalan-C++ is designed to avoid synchronization as much as
      possible. Each thread of execution is required to have its own set of "support" objects that contain the state of the
      transformation.  Accordingly, no synchronization is required when multiple threads are executing.</p>     
   <p>Parsed ("compiled") stylesheets (see <a href="usagepatterns.html#compiled">Compiling stylesheets</a>) and parsed
      source documents may be freely shared by multiple threads of execution without worrying about providing synchronized access to 
      them. The <b>only</b> exception to this rule: You use XercesParserLiaison to parse a document after calling 
      XercesParserLiaison::setBuildBridgeNodes(false) or XercesParserLiaison::setThreadSafe(false). In this case, the document 
      <b>cannot</b> be shared by multiple threads of execution. For reasons of performance, we do not recommend the use of
      XercesParserLiaison, so this should not be an issue for most applications.</p>
   <p>All other objects in Xalan-C++ are <b>not</b> thread-safe. Each thread must have its own instance of each object.</p>
   <p>See the <a href="samples.html#threadsafe">ThreadSafe</a> sample program for more information.</p>
</div>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3 id="faq-14" class="faqTitle">14. What can I do to speed up transformations?</h3>
<div class="faqQuestion">What can I do to speed up transformations?</div>
<br />
<hr />
<div class="faqAnswer">
<p>To maximize performance, here are some suggestions for you to keep in mind as you set up your applications:</p>
   <ul>
     <li>Use a compiled stylesheet when you expect to use the stylesheet more than once.<br />
<br />
</li>     
     <li>Set up your stylesheets to function efficiently.<br />
<br />
</li>
       <ul>
         <li>Don't use "//" (descendant axes) patterns near the root of a large document.<br />
<br />
</li>
         <li>Use xsl:key elements and the key() function as an efficient way to retrieve node sets.<br />
<br />
</li>
         <li>Where possible, use pattern matching rather than xsl:if or xsl:when statements.<br />
<br />
</li>
         <li>xsl:for-each is fast because it does not require pattern matching.<br />
<br />
</li>
         <li>Keep in mind that xsl:sort prevents incremental processing.<br />
<br />
</li>
         <li>When you create variables, &lt;xsl:variable name="fooElem" select="foo"/&gt; is usually faster than
         &lt;xsl:variable name="fooElem"&gt;&lt;xsl:value-of-select="foo"/&gt;&lt;/xsl:variable&gt;.<br />
<br />
</li>
         <li>Be careful using the last() function.<br />
<br />
</li>
         <li>The use of index predicates within match patterns can be expensive.<br />
<br />
</li>
       </ul>
   </ul>
</div>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3 id="faq-15" class="faqTitle">15. Stylesheet validation</h3>
<div class="faqQuestion">Can I validate an XSL stylesheet?</div>
<br />
<hr />
<div class="faqAnswer">
<p>An XSL stylesheet is an XML document, so it can have a DOCTYPE and be subject to validation, but you probably will have
      to write a custom DTD for the purpose.</p>
   <p>The XSLT Recommendation includes a <a href="http://www.w3.org/TR/xslt#dtd">DTD Fragment 
      for XSL Stylesheets</a> with some indications of what you need to do to create a complete DTD for a given
      stylesheet. Keep in mind that stylesheets can include literal result elements and produce output that is not valid
      XML.</p>
   <p>You can use the xsl:stylesheet doctype defined in xsl-html40s.dtd for stylesheets that generate HTML.</p>
</div>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3 id="faq-16" class="faqTitle">16. What does the XalanDOMException HIERARCHY_REQUEST_ERR mean?</h3>
<div class="faqQuestion">What does the XalanDOMException HIERARCHY_REQUEST_ERR mean?</div>
<br />
<hr />
<div class="faqAnswer">
<p>It means that an attempt was made to add a node to a DOM that would create an invalid structure.  For example, text nodes 
      are not allowed as children of the document node.</p>
   <p>This is a common error when attempting to transform to DOM.  Source documents and stylesheets that might produce valid serialized XML
      might not produce value DOM.  The usual suspect is text nodes being generated before the document element is generated.</p>
   <p>If you think you have seen this error because of a bug in Xalan-C++'s source tree implementation, please post a bug report on Bugzilla, and attach a minimal source document 
      and stylesheet that produce the problem to the bug report.</p>
</div>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3 id="faq-17" class="faqTitle">17. Submitting Patches</h3>
<div class="faqQuestion">Who do I submit patches to?</div>
<br />
<hr />
<div class="faqAnswer">
<p>Your contributions are much appreciated! You can e-mail your patches to 
      <a href="mailto:" /> or raise an issue on the 
      <a href="https://issues.apache.org/jira/browse/XALANC">Jira issue tracking system</a>.</p>
   <p>The Xalan projects use Jira as the issue tracking system.  Any significant bug or feature request is
      posted to this system.  You must subscribe to the system in order to submit patches and raise
      issues.</p>
<ul>
<li>Subscribe to Jira at: 
    <a href="https://issues.apache.org/jira">https://issues.apache.org/jira</a>
</li>
<li>Browse the issues at: 
    <a href="https://issues.apache.org/jira/browse/XALANC">https://issues.apache.org/jira/browse/XALANC</a>
</li>
</ul>
    <p>Issues posted to the project on Jira at XALANC are automatically posted to the
       <a href="mailto:" />
</p>
    <p>Our mailing lists are moderated.  You should subscribe to the mailing list in order to
      post a message, otherwise message delivery requires manual intervention or may be dropped.</p>
</div>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3 id="faq-18" class="faqTitle">18. Transformation Output Methods</h3>
<div class="faqQuestion">How do I output a transformation to a DOM, a file, an in-memory buffer, or as input to another transformation?  Since the C++ 
   language can automatically construct an XSLTResultTarget from any of its constructor's argument types, you usually don't need 
   to create one explicitly.</div>
<br />
<hr />
<div class="faqAnswer">
<p>The output parameter of XalanTransformer::transform() is an XSLTResultTarget which has many constructors.</p>
   <p>Output to a file:</p>
   <ul>
     <li>The easiest way is to use a null-terminated string containing the file name to create an XSLTResultTarget.  Or, use an 
         instance of std::ofstream.  The command line executables, and many of the sample applications use file names, so take a 
         look through the source code for more information.</li>
   </ul>
   <p>Output to an in-memory buffer:</p>
   <ul>
     <li>Use an instance of std::ostrstream or std::ostringstream to create an XSLTResultTarget.  See the StreamTransform sample 
         for more information.</li>
   </ul>
   <p>Input to another transformation:</p>
   <ul>
     <li>Any of the previous output targets could be used as the input to another transformation, but the FormatterToSourceTree 
         is probably the best for efficiency reasons.  See the source code for the TestXSLT command line program for more 
         information.</li>
   </ul>
</div>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3 id="faq-19" class="faqTitle">19. Problems Using Sun's Forte/Workshop Compiler with code containing std::istrstream</h3>
<div class="faqQuestion">Why won't XSLTInputSource work with std::istrstream on Sun Solaris using Forte/Sun Workshop compiler?</div>
<br />
<hr />
<div class="faqAnswer">
<p>There is a bug in Sun's C++ standard library implementation 
      for the Forte/Workshop compiler.
      The short answer is that you need to get a patch.
      The bugzilla subsystem for Xalan issue tracking is no longer available.  The ticket recorded
      here included a patch.</p>
</div>
<br />
<hr />
<div class="faqAnswer">
<p>The issue is resolved if you use the SunStudio platform for your code development.
      The Solaris SunStudio is now available from Oracle.</p>
</div>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3 id="faq-20" class="faqTitle">20. Modifying an instance of XalanDocument</h3>
<div class="faqQuestion">My transformation outputs to a XalanDocument (actually XalanSourceTreeDocument underneath) but W3C DOM functions like 
   DOMElement::setAttribute don't work! Am I going crazy or what?</div>
<br />
<hr />
<div class="faqAnswer">
<p>No, you aren't going crazy. Xalan's default source tree is read-only for efficiency. If you need a DOM that supports 
      modifications, use the Xerces DOM instead.  See the TransformToXercesDOM sample for more information.</p>
</div>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3 id="faq-21" class="faqTitle">21. Changing Where Error Output is Sent</h3>
<div class="faqQuestion">XalanTransformer outputs errors to the console. How do I, for example, output error to a file?</div>
<br />
<hr />
<div class="faqAnswer">
<p>By default, XalanTransformer creates a XalanTransformerProblemListener (a subclass of ProblemListener) that writes 
      output to std::cerr. To change this you can:</p>
   <ul>
     <li>Redirect std::cerr from the command line.</li>
     <li>Call XalanTranformer::setWarningStream with a different std::ostream before calling XalanTransformer::transform.</li>
     <li>Instantiate your own XalanTransformerProblemListener with a different output stream and call 
         XalanTransformer::setProblemListener() before calling XalanTransformer::transform().</li>
     <li>Subclass some ProblemListener type and do custom handling of errors (you still then need to tell XalanTransformer 
         instances to use your ProblemListener.)</li>
   </ul>
   <p>In most case you probably want to do one of the first two.</p>
</div>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3 id="faq-22" class="faqTitle">22. Programmatic Error Information</h3>
<div class="faqQuestion">How do I programmatically get the file name, line number, and column number for an error in an XML file?</div>
<br />
<hr />
<div class="faqAnswer">
<p>Create a custom ErrorHandler (a Xerces-C++ class) and call XalanTransformer::setErrorHandler before parsing any sources.</p>
</div>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3 id="faq-23" class="faqTitle">23. String Transcoding</h3>
<div class="faqQuestion">How do I make a char* out of XalanDOMString (or vice-versa)?</div>
<br />
<hr />
<div class="faqAnswer">
<p>See the static method XalanDOMString::transcode, or the functions TranscodeToLocalCodePage in the API documentation.  
   However, you should be very careful when transcoding Unicode characters to the local code page, because not all Unicode 
   characters can be represented.</p>
</div>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3 id="faq-24" class="faqTitle">24. Error Code/Exception Summary</h3>
<div class="faqQuestion">Is there a table of error codes somewhere? How about a summary of what methods throw which exceptions?</div>
<br />
<hr />
<div class="faqAnswer">
<p>There isn't, but we're working on it.</p>
</div>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3 id="faq-25" class="faqTitle">25. Extension Functions</h3>
<div class="faqQuestion">The Xalan extension functions (xalan:node-set, etc.) don't work for me. Help!</div>
<br />
<hr />
<div class="faqAnswer">
<p>Did you declare the namespace on the xsl:stylesheet or xsl:transform element? It should look like this: </p>
   <p>&lt;xsl:stylesheet version="1.0" xmlns:xalan="http://xml.apache.org/xalan"&gt; ...rest of stylesheet</p>
   <p>If you did and you still have problems, you might want to ask the mailing list.</p>
</div>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3 id="faq-26" class="faqTitle">26. Outputting results to a file on Windows 95/98</h3>
<div class="faqQuestion">Why can't I ouput my results to a file on Windows 95/98?</div>
<br />
<hr />
<div class="faqAnswer">
<p>Well, you can, but it doesn't always work. Neither Windows 95 or 98 are supported or tested. There have been reports of 
      problems on it, especially regarding Unicode support. See 
      <a href="http://marc.info/?l=xalan-dev&amp;m=99840914524755&amp;w=2">this post</a>.</p>
</div>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3 id="faq-27" class="faqTitle">27. Using format-number and ICU</h3>
<div class="faqQuestion">Why does Xalan emit a warning when using the XSLT function format-number()?</div>
<br />
<hr />
<div class="faqAnswer">
<p>Did you build with ICU support? See <a href="usagepatterns.html#icu">Using the International Components for 
      Unicode (ICU)</a>.</p>
</div>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3 id="faq-28" class="faqTitle">28. Perl wrapper for Xalan-C++?</h3>
<div class="faqQuestion">Is there a Perl wrapper for Xalan-C++?</div>
<br />
<hr />
<div class="faqAnswer">
<p>There is no Apache Perl wrapper, however Edwin Pratomo has written a wrapper for Xalan-C++ version 1.4 that can be found 
      on CPAN</p>
</div>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3 id="faq-29" class="faqTitle">29. Missing LocalMsgIndex.hpp file</h3>
<div class="faqQuestion">Why can't I find the LocalMsgIndex.hpp file?</div>
<br />
<hr />
<div class="faqAnswer">
<p>The LocalMsgIndex.hpp file is not shipped with the distributions because this file is generated during compile time.  This 
      file is created at the start of the build process and customized for the locale and message set you are using.</p>
   <p>On Windows, the LocalMsgI100 82422    0 29292  100 53130   292k   531k --:--:-- --:--:-- --:--:--  534k
ndex.hpp header is generated by the Localization project.  By building any project that has a 
      dependency on the Localization project, will trigger the Message Localization component to built and the LocalMsgIndex.hpp 
      to be generated.</p>
   <p>On Windows binary distributions, the LocalMsgIndex.hpp file is a member of the "<code>Include</code>" directory.</p>
   <p>On Unix binary distributions, the LocalMsgIndex.hpp file is a member of the "<code>include/xalanc/PlatformSupport</code>" directory.</p>
</div>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
</div>
<div id="footer">Copyright © 1999-2012 The Apache Software Foundation<br />Apache, Xalan, and the Feather logo are trademarks of The Apache Software Foundation<div class="small">Web Page created on - </div>
</div>
</body>
</html>

../../extra/xdocs/getstarted.xml
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0HTTP/1.1 100 Continue

HTTP/1.1 200 OK
Date: Mon, 17 Apr 2017 01:22:23 GMT
Server: Apache/2.4.10 (Debian)
Vary: Accept-Encoding
Transfer-Encoding: chunked
Content-Type: text/plain; charset=utf-8


<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>ASF: Getting Started with Xalan-C++</title>
<meta http-equiv="content-type" content="text/html; charset=UTF-8" />
<meta http-equiv="Content-Style-Type" content="text/css" />
<link rel="stylesheet" type="text/css" href="resources/apache-xalan.css" />
</head>
<!--
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements. See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership. The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the  "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 -->
<body>
<div id="title">
<table class="HdrTitle">
<tbody>
<tr>
<th rowspan="2">
<a href="http://www.apache.org">
<img alt="Trademark Logo" src="resources/asf_logo.png" width="144" height="75" />
</a>
</th>
<th text-align="center" width="75%">
<a href="index.html" />
</th>
</tr>
<tr>
<td valign="middle">Getting Started with Xalan-C++</td>
</tr>
</tbody>
</table>
<table class="HdrButtons" align="center" border="1">
<tbody>
<tr>
<td>
<a href="http://www.apache.org">Apache Foundation</a>
</td>
<td>
<a href="http://xalan.apache.org">Xalan Project</a>
</td>
<td>
<a href="http://xerces.apache.org">Xerces Project</a>
</td>
<td>
<a href="http://www.w3.org/TR">Web Consortium</a>
</td>
<td>
<a href="http://www.oasis-open.org/standards">Oasis Open</a>
</td>
</tr>
</tbody>
</table>
</div>
<div id="navLeft">
<ul />
</div>
<div id="content">
<h2>Getting Started with Xalan-C++</h2>
<ul>
<li>
<a href="#download">Downloading what you need</a>
</li>
<li>
<a href="#path">Setting up the path/library path</a>
</li>
<li>
<a href="#samples">Trying out the samples</a>
</li>
<li>
<a href="#commandline">Performing your own transformations from the command line</a>
</li>
<li>
<a href="#apps">Setting up your own XSLT applications</a>
</li>
</ul>
<p>This section is being rewritten. 
<a href="index.html#getstarted">See: new getting started</a>
</p>
<a name="download">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>Downloading what you need</h3>
<p>For Xalan-C++ Version 1.11, we are distributing the following: 
<ul>
<li>AIX 5.1 32-bit and 64-bit xlC_r builds</li> 
<li>HP-UX 11 32-bit and 64-bit aCC builds</li>
<li>Red Hat Linux 7.2 32-bit and 64-bit Intel C++ builds</li>
<li>Solaris 2.7 32-bit and 64-bit Forte C++ builds</li>
<li>SuSE Linux 8.1 for IA-32 gcc 3.2.2 build  </li>
<li>Windows 32-bit and 64-bit Visual C++ builds</li>
</ul>
</p>

<p>As with previous releases, the documentation build containing this User's Guide and API documentation
   will be provided in a separate distribution.</p> 
<p>Please contact us at <a href="mailto:" /> if you would like to help provide builds for other platforms.</p>
<p>If you do not already have it, you must also download the Xerces-C++ version 3.1.1 build as indicated below.</p> 
<table class="note">
<tr>
<td class="noteImg">
<img src="resources/note.gif" alt="note" />
</td>
<td class="noteTxt">The Xalan distribution files are in <a href="" />. The Xerces distribution files are in 
      <a href="" />.  Xalan documentation is provided in a separate package from the binary 
      distribution files.  For Windows, documentation is packaged with the file name Xalan-C_1_11_0-docs.zip.  For UNIX, 
      documentation is packaged with the file name of Xalan-C_1_11_0-docs.tar.gz.</td>
</tr>
</table>
<br />
<table border="1">
  <tr>
  <th class="content" rowspan="1" colspan="1">Xalan distribution files</th>
  <th class="content" rowspan="1" colspan="1">Xerces distribution files</th>
  <th class="content" rowspan="1" colspan="1">Platform</th>
  </tr>
  <tr>
  <td class="content" rowspan="1" colspan="1">Xalan-C_1_11_0-aix_510-xlc_60_050623.tar.gz</td>
  <td class="content" rowspan="1" colspan="1">xerces-c-3.1.1-aix_510-xlc_60_050623.tar.gz</td>
  <td class="content" rowspan="1" colspan="1">AIX 5.1 (32-bit)</td>
   </tr>
  <tr>
  <td class="content" rowspan="1" colspan="1">Xalan-C_1_11_0-aix_510_64-xlc_60_050623.tar.gz</td>
  <td class="content" rowspan="1" colspan="1">xerces-c-3.1.1-aix_510_64-xlc_60_050623.tar.gz</td>
  <td class="content" rowspan="1" colspan="1">AIX 5.1 (64 bit)</td>
  </tr>
  <tr>
  <td class="content" rowspan="1" colspan="1" />
  <td class="content" rowspan="1" colspan="1" />
  <td class="content" rowspan="1" colspan="1">HP-UX 11.0 (32 bit)</td>
  </tr>
  <tr>
  <td class="content" rowspan="1" colspan="1" />
  <td class="content" rowspan="1" colspan="1" />
  <td class="content" rowspan="1" colspan="1">HP-UX 11.0 (64 bit)</td>
  </tr>    
  <tr>
  <td class="content" rowspan="1" colspan="1">Xalan-C_1_11_0-redhat_72-icc_71.tar.gz</td>
  <td class="content" rowspan="1" colspan="1">xerces-c-3.1.1-redhat_72-icc_71.tar.gz</td>
  <td class="content" rowspan="1" colspan="1">Redhat Linux 7.2 (32-bit)</td>
  </tr>
  <tr>
  <td class="content" rowspan="1" colspan="1">Xalan-C_1_11_0-redhat_72_64-ecc_71.tar.gz</td>
  <td class="content" rowspan="1" colspan="1">xerces-c-3.1.1-redhat_72_64-ecc_71.tar.gz</td>
  <td class="content" rowspan="1" colspan="1">Redhat Linux 7.2 (64-bit)</td>
  </tr>
  <tr>
  <td class="content" rowspan="1" colspan="1" />
  <td class="content" rowspan="1" colspan="1" />
  <td class="content" rowspan="1" colspan="1">Solaris 2.7 (32-bit)</td>
  </tr>
  <tr>
  <td class="content" rowspan="1" colspan="1"> </td>
  <td class="content" rowspan="1" colspan="1" />
  <td class="content" rowspan="1" colspan="1">Solaris 2.7 (64-bit)</td>
  </tr>
  <tr>
  <td class="content" rowspan="1" colspan="1">Xalan-C_1_11_0-suse_81-gcc_32.tar.gz</td>
  <td class="content" rowspan="1" colspan="1">xerces-c-3.1.1-suse_81-gcc_32.tar.gz</td>
  <td class="content" rowspan="1" colspan="1">SuSE Linux 8.1 (32-bit)</td>
  </tr>
  <tr>
  <td class="content" rowspan="1" colspan="1">Xalan-C_1_11_0-windows_2000-msvc_60.zip<br />
</td>
  <td class="content" rowspan="1" colspan="1">xerces-c-3.1.1-windows_nt-msvc_60.zip<br />
</td>
  <td class="content" rowspan="1" colspan="1">Windows 2000<br />
</td>
  </tr>
  <tr>
  <td class="content" rowspan="1" colspan="1">Xalan-C_1_11_0-windows_2003_64-ecl_71.zip<br />
</td>
  <td class="content" rowspan="1" colspan="1">xerces-c-3.1.1-windows_2003_64-ecc_71.zip<br />
</td>
  <td class="content" rowspan="1" colspan="1">Windows 2003 Server (64-bit)<br />
</td>
  </tr>
</table>
<p>The compiler version used for each platform is listed in the table below.
    <table border="1">
       <tr>
         <th class="content" rowspan="1" colspan="1">Platform - Operating System</th>
         <th class="content" rowspan="1" colspan="1">Compilers</th>
       </tr>
       <tr>
         <td class="content" rowspan="1" colspan="1">AIX 5.1</td>
         <td class="content" rowspan="1" colspan="1">IBM C and C++ for AIX 6.00</td>
       </tr>
       <tr>
         <td class="content" rowspan="1" colspan="1">HP/UX 11.0</td>
         <td class="content" rowspan="1" colspan="1">aCC A.03.52</td>
       </tr>
       <tr>
         <td class="content" rowspan="1" colspan="1">Red Hat Linux 7.2</td>
         <td class="content" rowspan="1" colspan="1">Intel C++ Compiler, version 7.1</td>
       </tr>
       <tr>
         <td class="content" rowspan="1" colspan="1">Solaris 2.7</td>
         <td class="content" rowspan="1" colspan="1">Sun Workshop 6 update 2</td>
       </tr>
       <tr>
         <td class="content" rowspan="1" colspan="1">SuSE Linux 8.1</td>
         <td class="content" rowspan="1" colspan="1">gcc Compiler, version 3.2.2</td>
       </tr>
       <tr>
         <td class="content" rowspan="1" colspan="1">Windows NT, 2000, and XP</td>
         <td class="content" rowspan="1" colspan="1">Microsoft Visual C++ with SP5 (for 32-bit)<br />
         Intel C++ Compiler, version 7.1 (for 64-bit)</td>
       </tr>
    </table>
</p>
<table class="note">
<tr>
<td class="noteImg">
<img src="resources/note.gif" alt="note" />
</td>
<td class="noteTxt">Use GNU tar to untar the Solaris distribution file; see <a href="faq.html#gnutar">A tar checksum error on Solaris</a>.</td>
</tr>
</table>
<a name="xalandists">‌</a>

<p>If you want to take advantage of the support for number formatting, sorting, and encoding the ICU provides, you should also 
   download and install the <a href="" />; see <a href="usagepatterns.html#icu">Using the ICU</a>,</p>
<table class="note">
<tr>
<td class="noteImg">
<img src="resources/note.gif" alt="note" />
</td>
<td class="noteTxt">To access previous releases of Xalan-C++, visit the <a href="http://archive.apache.org/dist/xml/xalan-c/">Xalan-C archive 
      directory</a>.</td>
</tr>
</table>


<a name="path">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>Setting up the path/library path</h3>
<ul>
  <li>
<a href="#windowspath">For Windows</a>
</li>
  <li>
<a href="#unixpath">For UNIX</a>
</li>  
</ul>

<a name="windowspath">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h4>For Windows</h4>
<p>To use the Windows binary distribution, you must place the Xalan executables and the Xalan and Xerces libraries on the path:</p>
<ul>
  <li>Put Xalan-C_1_11_0-&lt;my_Windows_distribution&gt;\bin and xerces-c-3.1.1-&lt;my_Windows_distribution&gt;\bin on the path.</li>
</ul>
<p>The Visual C++ Xalan project included with the Windows release knows the relative paths to the Xalan headers and libraries, 
   but it does not know where you have unzipped the Xerces distribution. If you plan to use Visual C++ to build Xalan applications 
   or <a href="readme.html#jar">rebuild Xalan</a>, you must also provide Visual C++ with access to the Xerces headers 
   and libraries.</p> 
<p>Use the Visual C++ Tools menu to open the Options dialog box, go to the Directories tab, and do the following:</p>
<ul>
  <li>Add the path to xerces-c-3.1.1-&lt;my_Windows_distribution&gt;\include to the list of directories of Include files.</li>
  <li>Add the path to xerces-c-3.1.1-&lt;my_Windows_distribution&gt;\lib to the list of directories of Library files.</li>
</ul>


<a name="unixpath">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h4>For UNIX</h4>
<p>To use one of the UNIX binary distributions, you must place the Xalan-C++ executable on the path, and the Xalan-C++ and Xerces-C++ 
   libraries on the library path.</p>
<p>For the Xalan-C++ AIX distributions:</p>
<ul>
  <li>Put Xalan-C_1_11_0-&lt;my_AIX_distribution&gt;/bin on the path (PATH).</li>
  <li>Put Xalan-C_1_11_0-&lt;my_AIX_distribution&gt;/lib and xerces-c-3.1.1-&lt;my_AIX_distribution&gt;/lib 
      on the library path (LIBPATH), or copy the shared libraries to /usr/lib.</li>
</ul>
<p>For the Xalan-C++ HP-UX 11 distributions:</p>
<ul>
  <li>Put Xalan-C_1_11_0-&lt;my_HPUX_distribution&gt;/bin on the path (PATH).<br />
<br />
</li>
  <li>Put Xalan-C_1_11_0-&lt;my_HPUX_distribution&gt;/lib and xerces-c-3.1.1-&lt;my_HPUX_distribution&gt;/lib on the library path 
      SHLIB_PATH), or copy the shared libraries to /usr/lib.</li>
</ul>
<p>For the Xalan-C++ Solaris distributions:</p>
<ul>
  <li>Put Xalan-C_1_11_0-&lt;my_Solaris_distribution&gt;/bin on the path (PATH).<br />
<br />
</li>
  <li>Put Xalan-C_1_11_0-&lt;my_Solaris_distribution&gt;/lib and xerces-c-3.1.1-&lt;my_Solaris_distribution&gt;/lib on the library path 
     (LD_LIBRARY_PATH), or copy the shared libraries to /usr/lib.</li>
</ul>
<p>For the Xalan-C++ RedHat and SuSE Linux distributions:</p>
<ul>
  <li>Put Xalan-C_1_11_0-&lt;my_100 58188    0 15606  100 42582   146k   398k --:--:-- --:--:-- --:--:--  399k
Linux_distribution&gt;/bin on the path (PATH).</li>
<li>Put Xalan-C_1_11_0-&lt;my_Linux_distribution&gt;/lib and xerces-c-3.1.1-&lt;my_Linux_distribution&gt;/lib on the library path (LD_LIBRARY_PATH), 
or copy the shared libraries to /usr/lib.</li>
</ul>

<a name="samples">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>Trying out the samples</h3>
<p>The Xalan-C++ distribution includes a number of basic sample applications. We have precompiled these samples for you so they are ready to run, and you can review the source files to see just how they work. </p>
<p>To run the samples, do the following:</p>
<ol>
<li>Set up your path (see above). In the Windows32 distribution, the sample executables are in
Xalan-C_1_11_0-&lt;my_Windows_distribution&gt;\bin. In the UNIX distributions, the executables are in Xalan-C_1_11_0-&lt;my_UNIX_distribution&gt;/bin.</li>
<li>Go to the samples subdirectory containing the sample.</li>
<li>Run the sample from the command line (in Windows, use the DOS shell).</li>
<li>Examine the application source files.</li>
</ol>
<p>For example, go to the SimpleTransform subdirectory and issue the following command:</p>
<p>
<code>SimpleTransform</code>
</p>
<p>SimpleTransform uses the foo.xsl stylesheet to transform foo.xml, and writes the transformation result to foo.out. To see how the example works, examine the source files: foo.xml, foo.xsl, foo.out, and SimpleTransform.cpp.</p>
<p>For more information about the samples, see <a href="samples.html">Xalan-C++ Samples</a>.</p>
<a name="commandline">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>Performing your own transformations from the command line</h3>
<p>The Xalan executable lets you perform transformations from the command line. The command line for 
most standard transformations is as follows:</p>
<p>
<code>Xalan -o <b>
<i>outputfile</i>
</b> <b>
<i>xmlSource</i>
</b> <b>
<i>stylesheet</i>
</b>
</code>
</p>
<p>where <b>
<i>xmlSource</i>
</b> is the XML source file name, <b>
<i>stylesheet</i>
</b> is the XSL stylesheet file name, and <b>
<i>outputfile</i>
</b> is the output file name.</p>
<p>If you want the output to be displayed on the screen, simply omit the -o flag and <b>
<i>outputfile</i>
</b>.</p>
<p>You can use this utility to try out XSL stylesheets you have written, to make sure they do what you expect with the XML source files they are designed to transform. The utility provides useful messages if the source file or stylesheet is not well formed. If you include a DOCTYPE statement or Schema hint in your XML source files and include the -v flag on the command line, the utility will also let you know whether the XML document is valid (conforms to that DOCTYPE or Schema). For more information, see <a href="commandline.html">Command-Line Utility</a>.</p>
<a name="apps">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>Setting up your own XSLT applications</h3>
<p>You can start by using your own XML source files and XSL stylesheets with the sample applications, which illustrate a number of usage patterns. For more information on setting up applications, see <a href="usagepatterns.html">Basic Usage Patterns</a>.</p>

<p align="right" size="2">
<a href="#content">(top)</a>
</p>
</div>
<div id="footer">Copyright © 1999-2012 The Apache Software Foundation<br />Apache, Xalan, and the Feather logo are trademarks of The Apache Software Foundation<div class="small">Web Page created on - </div>
</div>
</body>
</html>

../../extra/xdocs/history.xml
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100 47816    0   192  100 47624   2386   578k --:--:-- --:--:-- --:--:--  581k
HTTP/1.1 100 Continue

HTTP/1.1 200 OK
Date: Mon, 17 Apr 2017 01:22:23 GMT
Server: Apache/2.4.10 (Debian)
Vary: Accept-Encoding
Transfer-Encoding: chunked
Content-Type: text/plain; charset=utf-8


<?xml version="1.0" encoding="UTF-8"?><error>Something went wrong!: [1283855406939478076,/tmp/xzes/1283855406939478076.xml,] [1283855406939478076] [/tmp/xzes/1283855406939478076.xml]</error>
../../extra/xdocs/index.xml
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0HTTP/1.1 100 Continue

HTTP/1.1 200 OK
Date: Mon, 17 Apr 2017 01:22:23 GMT
Server: Apache/2.4.10 (Debian)
Vary: Accept-Encoding
Transfer-Encoding: chunked
Content-Type: text/plain; charset=utf-8


<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>ASF: Xalan-C++ Version 1.11</title>
<meta http-equiv="content-type" content="text/html; charset=UTF-8" />
<meta http-equiv="Content-Style-Type" content="text/css" />
<link rel="stylesheet" type="text/css" href="resources/apache-xalan.css" />
</head>
<!--
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements. See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership. The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the  "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 -->
<body>
<div id="title">
<table class="HdrTitle">
<tbody>
<tr>
<th rowspan="2">
<a href="http://www.apache.org">
<img alt="Trademark Logo" src="resources/asf_logo.png" width="144" height="75" />
</a>
</th>
<th text-align="center" width="75%">
<a href="index.html" />
</th>
</tr>
<tr>
<td valign="middle">Xalan-C++ Version 1.11</td>
</tr>
</tbody>
</table>
<table class="HdrButtons" align="center" border="1">
<tbody>
<tr>
<td>
<a href="http://www.apache.org">Apache Foundation</a>
</td>
<td>
<a href="http://xalan.apache.org">Xalan Project</a>
</td>
<td>
<a href="http://xerces.apache.org">Xerces Project</a>
</td>
<td>
<a href="http://www.w3.org/TR">Web Consortium</a>
</td>
<td>
<a href="http://www.oasis-open.org/standards">Oasis Open</a>
</td>
</tr>
</tbody>
</table>
</div>
<div id="navLeft">
<ul />
</div>
<div id="content">
<h2>Xalan-C++ Version 1.11</h2>

<ul>
<li>
<a href="#licenses">Licenses</a>
</li>
<li>
<a href="#getinvolved">Getting Involved</a>
</li>
<li>
<a href="#xsltStandards">XSLT Standards Implemented</a>
</li>
<li>
<a href="#xmlParserLib">XML Parser Library</a>
</li>
<li>
<a href="#securityIssues">Security Issues</a>
</li>
<li>
<a href="#getstarted">Getting Started</a>
</li>
<li>
<a href="#getWhatNeeded">Getting What You Need</a>
</li>
</ul>
<p>The old Xalan-C/C++ 1.10 release can be found at 
<a href="../old/xalan-c/index.html">xml.apache.org/xalan-c</a>.</p>

<a name="whatisxalan">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>What Is Xalan?</h3>

<p>Xalan is an XSLT processor for transforming XML documents 
into HTML, text, or other XML document types. 
It uses for input an XML document and an XSLT stylesheet. 
The engine also supports the entry of top-level stylesheet parameters. 
Documentation exists on how to extend the library with 
your own custom XPath functions.
</p>
<p>Xalan-C++ version 1.11 is a robust implementation of the 
W3C Recommendations for 
<a href="http://www.w3.org/TR/xslt">XSL Transformations (XSLT)</a> 
and the 
<a href="http://www.w3.org/TR/xpath">XML Path Language (XPath)</a>. 
It works with the 
<a href="http://xerces.apache.org/xerces-c">Xerces-C++ version 3.1.1</a> 
release of XML parsers. 
The focus for this Xalan release is on bug fixes and 
compatibility with newer development platforms.
</p>
<p>The Xalan-C/C++ project creates and distributes a 
standard XSLT library and a simple Xalan command-line 
utility for transforming XML documents.
</p>
<p>This project is written in a reduced set of the C++ programming language. 
This makes the library directly usable on numerous platforms. 
A set of 'C' language APIs is also available so that 
XSLT and XPath functionality is easily deployed to 'C' language applications.
</p>
<p>
<a href="samples.html">Sample programs</a> are available 
for you to test and experiment with as you learn the Xalan library.
</p>
<p>Some of the <a href="http://www.exslt.org">EXSLT extension functions</a> 
for XPath are available. 
We need to write and validate more of the EXSLT functions. 
Apache also provides some of their own 
<a href="extensionslib.html">XPath extensions</a> for use. 
Documentation and examples are available for you to write 
your own custom <a href="extensions.html">XPath extensions</a>.
</p>
<p>There is a library of <a href="extensionslib.html">XPath extensions</a> 
that are provided by the Apache Xalan community.
</p>


<a name="licenses">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>Licenses</h3>

<p>The Xalan-C/C++ software conforms to The Apache Software Foundation 
<a href="license.html">License, Version 2.0</a>.
</p>


<a name="getinvolved">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>Getting Involved</h3>

<p>You are invited to participate in 
<a href="http://www.apache.org/foundation/getinvolved.html">The Apache Software Foundation</a>. 
You will need to subscribe if you wish to receive mail from the lists. 
Some lists require a subscription in order to post messages.
</p>
<p>The <a href="mailto:dev@xalan.apache.org">xalan-dev</a> mailing list 
is used to communicate product development issues with the software development team. 
The xalan-dev messages are 
<a href="http://mail-archives.apache.org/mod_mbox/xalan-dev">archived here</a> 
and on <a href="http://marc.info/?l=xalan-dev">Marc.info</a>.
</p>
<p>The <a href="mailto:c-users@xalan.apache.org">xalan-c-users</a> mailing list 
is used to discuss issues regarding the use of the Xalan-C/C++ software and libraries. 
The xalan-c-users messages are 
<a href="http://mail-archives.apache.org/mod_mbox/xalan-c-users">archived here</a> 
and on <a href="http://marc.info/?l=xalan-c-users">Marc.info</a>.
</p>
<p>The subversion repository changes are logged on the xalan-commits mailing list and are 
<a href="http://mail-archives.apache.org/mod_mbox/xalan-commits">archived here</a>
and on <a href="http://marc.info/?l=xalan-cvs">Marc.info</a>.
</p>
<p>You can review the project sources and change history in the subversion repository at 
<a href="http://svn.apache.org/viewvc/xalan/c">http://svn.apache.org/viewvc/xalan/c</a>. 
</p>
<p>You can get a private copy of the subversion snapshot of the development sources at 
<a href="http://svn.apache.org/repos/asf/xalan/c/trunk">http://svn.apache.org/repos/asf/xalan/c/trunk</a> 
using your favorite SVN program.
</p>
<p>The JIRA system is used for issue tracking. 
You must create an account before you can post messages and files to the JIRA tracking system. 
You can view the issues at 
<a href="https://issues.apache.org/jira/browse/XALANC">https://issues.apache.org/jira/browse/XALANC</a>.
</p>


<a name="xsltStandards">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>XSLT Standards Implemented</h3>

<p>Xalan-C/C++ implements the following specifications from the World Wide Web Consortium (W3C).
</p>
<ul>
<li>
<a href="http://www.w3.org/TR/xslt">XSL Transformations (XSLT) Version 1.0</a>
</li>
<li>
<a href="http://www.w3.org/TR/xpath">XML Path Language (XPath) Version 1.0</a>
</li>
<li>
<a href="http://www.w3.org/TR/xml-stylesheet">Associating Style Sheets with XML documents 1.0 (Second Edition)</a>
</li>
</ul>

<p>The next major release of Xalan-C/C++ will hopefully be compatible with following standards.  This added support will require a major version change from 1 to 2.
</p>
<ul>
<li>
<a href="http://www.w3.org/TR/xslt20">XSL Transformations (XSLT) Version 2.0</a>
</li>
<li>
<a href="http://www.w3.org/TR/xslt-xquery-serialization">XSLT 2.0 and XQuery 1.0 Serialization</a>
</li>
<li>
<a href="http://www.w3.org/TR/xpath20">XML Path Language (XPath) Version 2.0 (Second Edition)</a>
</li>
<li>
<a href="http://www.w3.org/TR/xquery-semantics">XQuery 1.0 and XPath 2.0 Formal Semantics (Second Edition)</a>
</li>
<li>
<a href="http://www.w3.org/TR/xpath-datamodel">XQuery 1.0 and XPath 2.0 Data Model (XDM) (Second Edition)</a>
</li>
<li>
<a href="http://www.w3.org/TR/xpath-functions">XQuery 1.0 and XPath 2.0 Functions and Operators (Second Edition)</a>
</li>
</ul>



<a name="xmlParserLib">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>XML Parser Library</h3>

<p>Xalan-C/C++ uses the The Apache Software Foundation Xerces-C project that implements parsers for XML 1.0 and XML 1.1. 
The following standards as specified by the 
<a href="http://www.w3.org/TR">World Wide Web Consortium (W3C)</a> are implemented by the 
<a href="http://xerces.apache.org/xerces-c">Xerces-C</a> XML parser library.
</p>
<ul>
<li>
<a href="http://www.w3.org/TR/xml">Extensible Markup Language (XML) 1.0 (Third Edition) - currently (Fifth Edition)</a>
</li>
<li>
<a href="http://www.w3.org/TR/xml11">Extensible Markup Language (XML) 1.1 (First Edition) - currently (Second Edition)</a>
</li>
<li>
<a href="http://www.w3.org/TR/xml-id">xml:id Version 1.0</a>
</li>
<li>
<a href="http://www.w3.org/TR/xmlbase">XML Base (Second Edition)</a>
</li>
<li>
<a href="http://www.w3.org/TR/xml-infoset">XML Information Set (Second Edition)</a>
</li>
<li>
<a href="http://www.w3.org/TR/xml-names">Namespaces in XML 1.0 (Third Edition)</a>
</li>
<li>
<a href="http://www.w3.org/TR/xml-names11">Namespaces in XML 1.1 (Second Edition)</a>
</li>
<li>
<a href="http://www.w3.org/TR/xmlschema-1">XML Schema Part 1: Structures Second Edition</a>
</li>
<li>
<a href="http://www.w3.org/TR/xmlschema-2">XML Schema Part 2: Datatypes Second Edition</a>
</li>
<li>
<a href="http://www.w3.org/TR/REC-DOM-Level-1">Document Object Model (DOM) Level 1</a>
</li>
<li>
<a href="http://www.w3.org/TR/ElementTraversal">Element Traversal Specification</a>
</li>
<li>
<a href="http://www.w3.org/TR/DOM-Level-2-Core">Document Object Model (DOM) Level 2 Core Specification</a>
</li>
<li>
<a href="http://www.w3.org/TR/DOM-Level-2-Traversal-Range">Document Object Model (DOM) Level 2 Traversal and Range Specification</a>
</li>
<li>
<a href="http://www.w3.org/TR/DOM-Level-3-Core">Document Object Model (DOM) Level 3 Core Specification</a>
</li>
<li>
<a href="http://www.w3.org/TR/DOM-Level-3-Val">Document Object Model (DOM) Level 3 Validation Specification</a>
</li>
<li>
<a href="http://www.w3.org/TR/DOM-Level-3-LS">Document Object Model (DOM) Level 3 Load and Save Specification</a>
</li>
<li>
<a href="http://www.w3.org/TR/xinclude">XML Inclusions (XInclude) 1.0 (Second Edition)</a>
</li>
</ul>
<p>The Xerces-C/C++ also supports the <a href="http://sax.sourceforge.net/">SAX 1.0 and SAX 2.0</a> projects. 
SAX is primarily Java based. The Xerces-C/C++ project has implemented a SAX C++ API that looks much like the SAX Java API.
</p>
<p>Web Services and Web Security recommendations have been developed by the 
<a href="http://www.w3.org">World Wide Web Consortium (W3C)</a> and 
<a href="http://www.oasis-open.org">OASIS-OPEN</a> Advancing open standards for the information society. 
The Xerces-C/C++ has support for custom entity resolvers which are inherited and
supported by the Xalan-C/C++ library.
</p>


<a name="securityIssues">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>Security Issues</h3>

<p>The Xalan-C/C++ library has hooks so that custom entity resolvers can be deployed. 
The entity resolvers are actually interfaces into the Xerces-C/C++ XML Parser Library. 
Use of trusted entity resolvers greatly increases the security of XML based applications.
</p>
<p>The Web Services Architecture uses specifications and recommendations 
that are documented by the following organizations.
</p>
<ul>
<li>World Wide Web Consortium (W3C)<br />
  [<a href="http://www.w3.org">http://www.w3.org]</a>]</li>
<li>Advancing open standards for the information society (OASIS-OPEN)<br />
  [<a href="http://www.oasis-open.org">http://www.oasis-open.org</a>]</li>
<li>The Sourceforge SAX Project (SAX1, SAX2)<br />
  [<a href="http://sax.sourceforge.net">http://sax.sourceforge.net</a>]</li>
<li>Internet Engineering Task Force (IETF)<br />
  [<a href="http://www.ietf.org">http://www.ietf.org</a>]</li>
</ul>
<p>There are some <a href="secureweb.html">architecture security</a> issues 
that should be addressed by any XML parser or XSLT transformation application. 
Other than validating and cleaning the content of XML elements, 
the access to untrusted external entities is a big problem for security management.
</p>
<p>The "Xalan" comman-line transformation program does not deploy 
an OASIS catalog or perform other security measures. 
URLs are resolved using the system directory of the local machine 
and DNS to resolve host locations. 
The "Xalan" program should be used only with 
trusted XSLT stylesheets and XML documents on a trusted computer.
</p>
<p>A future release of the "Xalan" command-line transformation program 
may include support for an OASIS entity resolver catalog.
</p>
<p>Information on creating Secure Web Service Applications is useful for review. 
This <a href="secureweb.html">security overview document</a> goes beyond the scope of 
XSLT transformations and asks many pertinent security based questions.
</p>


<a name="getstarted">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>Getting Started</h3>

<p>The source code and documentation are delivered in separate packages. 
Binary packages comprise the compiled libraries, the Xalan command line utility, and the C/C++ header files. 
The documentation package contains the pre-built documentation. 
The source package contains the sources to build everything.
</p>
<p>The current Xalan-C/C++ Version 1.11 is compatible with the stable releases of 
<a href="http://xerces.apache.org/xerces-c">Xerces-C/C++</a> Version 3.0 and newer. The current stable release for Xerces-C/C++ is 3.1.1.
</p>
<p>The previous Xalan-C/C++ Version 1.10 works with Xerces-C/C++ Versions 2.7.0 and 2.8.0.
</p>
<p>If you are having problems using the product, 
send your comments to the <a href="mailto:c-users@xalan.apache.org">xalan-c-users</a> mail list.
</p>
<p>If you think a change needs to be made or have suggestions for future releases, 
send your comments to the <a href="mailto:dev@xalan.apache.org">xalan-dev</a> mail list.
</p>
<p>Binary releases are not yet available. 
We would like to distribute Xalan-C/C++ Version 1.11 binary releases 
using the same platforms specified for the compatible Xerces-C binary packages.
</p>


<a name="getWhatNeeded">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>Getting What You Need</h3>

<p>What you need depends whether you plan to 
build from the sources or download prebuilt packages.
</p>
<p>The development platform used to build the Xalan-C/C++ (XSLT) library 
should be the same as the platform used to build the Xerces-C/C++ (XML) parser library.
</p>
<p>Xalan-C/C++ (XSLT) library requires a working Xerces-C/C++ (XML) parser library. 
The supported versions of Xerces-C/C++ version 3.0 or newer. Version 3.1.1
is recommended.
</p>
<p>If you are ambitious and willing to experiment, 
you can download the bleeding edge development from the 
Apache Software Foundation subversion repositories. 
Use your favorite subversion 'svn' utility for download.
</p>
<table border="1">
<tr>
<td class="content" rowspan="1" colspan="1">Xalan-C Repository</td>
<td class="content" rowspan="1" colspan="1">http://svn.apache.org/repos/asf/xalan/c/trunk</td>
</tr>
<tr>
<td class="content" rowspan="1" colspan="1">Xerces-C Repository</td>
<td class="content" rowspan="1" colspan="1">http://svn.apache.org/repos/asf/xerces/c/trunk</td>
</tr>
</table>

<p>The current stable 
<a href="http://xerces.apache.org/xerces-c/download.cgi">Xerces-C/C++ (XML) packages</a> 
are available for download.
</p>
<table class="note">
<tr>
<td class="noteImg">
<img src="resources/note.gif" alt="note" />
</td>
<td class="noteTxt">The sources from the Xalan-C repository are current for Version 1.11 
until released packages are available. 
You can help us prepare for a Version 1.11 release 
by100 63314    0 17138  100 46176   164k   444k --:--:-- --:--:-- --:--:--  446k
 providing packages for your platforms 
and let us know of your building issues.
</td>
</tr>
</table>
<br />

<p>The previous version packages can still be downloaded until officially replaced.
</p>
<table border="1">
<tr>
<td class="content" rowspan="1" colspan="1">Xalan-C Version 1.10</td>
<td class="content" rowspan="1" colspan="1">
<a href="http://archive.apache.org/dist/xml/xalan-c/">Xalan Package Downloads</a>
</td>
</tr>
<tr>
<td class="content" rowspan="1" colspan="1">Xerces-C Version 2.7</td>
<td class="content" rowspan="1" colspan="1">
<a href="http://archive.apache.org/dist/xml/xerces-c/">Xerces Package Downloads</a>
</td>
</tr>
</table>


<p align="right" size="2">
<a href="#content">(top)</a>
</p>
</div>
<div id="footer">Copyright © 1999-2012 The Apache Software Foundation<br />Apache, Xalan, and the Feather logo are trademarks of The Apache Software Foundation<div class="small">Web Page created on - </div>
</div>
</body>
</html>

../../extra/xdocs/install-save.xml
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0HTTP/1.1 100 Continue

HTTP/1.1 200 OK
Date: Mon, 17 Apr 2017 01:22:23 GMT
Server: Apache/2.4.10 (Debian)
Vary: Accept-Encoding
Transfer-Encoding: chunked
Content-Type: text/plain; charset=utf-8


<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>ASF: Installing Xalan-C++</title>
<meta http-equiv="content-type" content="text/html; charset=UTF-8" />
<meta http-equiv="Content-Style-Type" content="text/css" />
<link rel="stylesheet" type="text/css" href="resources/apache-xalan.css" />
</head>
<!--
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements. See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership. The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the  "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 -->
<body>
<div id="title">
<table class="HdrTitle">
<tbody>
<tr>
<th rowspan="2">
<a href="http://www.apache.org">
<img alt="Trademark Logo" src="resources/asf_logo.png" width="144" height="75" />
</a>
</th>
<th text-align="center" width="75%">
<a href="index.html" />
</th>
</tr>
<tr>
<td valign="middle">Installing Xalan-C++</td>
</tr>
</tbody>
</table>
<table class="HdrButtons" align="center" border="1">
<tbody>
<tr>
<td>
<a href="http://www.apache.org">Apache Foundation</a>
</td>
<td>
<a href="http://xalan.apache.org">Xalan Project</a>
</td>
<td>
<a href="http://xerces.apache.org">Xerces Project</a>
</td>
<td>
<a href="http://www.w3.org/TR">Web Consortium</a>
</td>
<td>
<a href="http://www.oasis-open.org/standards">Oasis Open</a>
</td>
</tr>
</tbody>
</table>
</div>
<div id="navLeft">
<ul />
</div>
<div id="content">
<h2>Installing Xalan-C++</h2>

<ul>
  <li>
<a href="#SourcePkgs">Install Source Packages</a>
</li>
  <li>
<a href="#BinaryPkgs">Install Binary Packages</a>
</li>
  <ul>
    <li>
<a href="#InsWin">Install Windows Packages</a>
</li>
    <li>
<a href="#InsUnx">InstallUNIX Packages</a>
</li>
    <li>
<a href="#InsPkgs">Other Packages</a>
</li>
  </ul>
  <li>
<a href="#XalanDocPkg">Install Documentation Packages</a>
</li>
</ul>

<p>A pre-requisite for using the Xalan-C/C++ XSLT library is to
  have a working Xerces-C/C++ XML Parser library.  Xerces-C/C++
  must be of version 3.0 or newer.  Xerces-C/C++ Version 3.1.1 is preferred.
</p>
<p>The Xalan-C/C++ project is providing several types of packages.
</p>
<p>Source packages contain all of the source code to build the
  Xalan-C/C++ library, the sample programs, and the documentation.
  There are UNIX scripts and Windows project files by which the
  library and sample programs can be built. 
  There are also scripts for building the User Guide web pages and
  a Doxygen configuration for building the interactive API Reference.
</p>
<p>Binary packages contain compiled libraries and the Xalan
  command line program.  The binary packages also contain C/C++
  header files for basic software development.
</p>
<p>Documentation packages contain pre-built directories of web
  page html files for the Xalan-C/C++ User Guide and the interactive
  API Reference for programmers.
</p> 

<a name="SourcePkgs">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>Install Source Packages</h3>
<p>We have no package managers for source packages.  You just extract
  the contents of the distribution <b>
<i>zip</i>
</b> file or <b>
<i>tar</i>
</b> file 
  into a source directory of your choosing.
</p>
<p>You also need to have the necessary C/C++ compiler tools installed
  and a working copy of the Xerces-C/C++ XML parser library.
</p>
<p>Building the 
  <a href="builddocs.html#buildweb">User Guide</a> 
  from sources requires a working Xalan command line program.
</p>
<p>Building the interactive 
  <a href="builddocs.html#buildapi">API Reference</a>
  requires a UNIX or Linux system with a current copy of 
  Doxygen and GraphViz installed.
</p>

<p>The building of a library from sources results in a directory from which
  a binary package can be made.  
  <a href="buildlibs.html#unixbldenv">UNIX and Linux builds</a>
  are automatically targeted to an install destination.  
  <a href="buildlibs.html#winbldinst">Installing a Windows build</a>
  requires that the specific compiled products be copied to a usable
  destination directory.
</p>


<a name="BinaryPkgs">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>Install Binary Packages</h3>
<p>The binary packages distributed by <b>
<i>zip</i>
</b> files
  and <b>
<i>tar</i>
</b> files are usually extracted to the install 
  <code>{target}</code> directory.
  After extracting the contents, you then need to manually perform
  some minor system configuration.
</p>
<p>Packages that are handled by a package manager are usually
  installed and configured according to package maintainer.</p>

<a name="InsWin">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h4>Install Windows Packages</h4>
<p>The Xalan-C and Xerces-C packages can be installed to the same
  <code>{target}</code>
  directory tree.  The debug and release builds have different names
  for the shared <code>*.DLL</code> files.
</p>
<p>Windows operating systems require that the <code>{target}\bin</code>
  directory be added to the PATH environment. You can make the path
  a permanent part of the SYSTEM or user login DESKTOP environment. 
  The PATH environment variable should contain an entry
  where the <code>{target}\bin\*.DLL</code> files are found.
</p>
<ol>
  <li>Right-Click on the computer icon.</li>
  <li>Select Properties.</li>
  <li>Select Advanced System Settings.</li>
  <li>Select Environment Variables.</li>
  <li>Add the <code>{target}\bin</code> directory to the
      system PATH environment variable.</li>
</ol>
<p>The XP, NT, 2000 and 2003 systems allow environment variables to be 
   set explicitly to individual user accounts. 
   The Vista, Win-7, and 2008 systems have security administration that
   gets in the way of updating individual user environments.
</p>
<p>In a command window or a command environment, you can add the following
   shell command to set a temporary path to the XALAN <code>{target}\bin</code>
   directory.
</p>
<blockquote class="source">
<pre>set PATH=%PATH%;{target}\bin</pre>
</blockquote>


<a name="InsUnx">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h4>Install UNIX Packages</h4>
  <p>The path to the <code>Xalan</code> command line executable program should be added
  to the PATH environment variable.</p>
  <p>The path to the shared objects should be added to the system
  configuration or overridden by specific entry in an environment
  by which shared objects can be found.</p>
<p>Here is some more detailed information on 
  <a href="buildlibs.html#unixlibpath">UNIX Runtime</a> configuration.
</p>

<a name="InsPkgs">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h4>Install Other Packages</h4>
<p>These packages are usually installed and configured by a package manager.
  You should refer to the documentation provided by the package maintainer.
</p>



<a name="XalanDocPkg">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>Install Documentation Packages</h3>
<p>The documentation packages are distributed as <b>
<i>tar</i>
</b> files
  and <b>
<i>zip</i>
</b> files.  You just extract the files into a directory
  that is reachable by your favorite web browser.  The head of the
  documentation tree starts at the <a href="index.html">
  <code>{docs}/xalan-c</code>
</a> directory.
</p>
<p>The documentation package contain100 46945    0  8823  100 38122  83966   354k --:--:-- --:--:-- --:--:--  354k
s the html pages for the Operator Guide
and the apiDocs interactive application program interface.  There are
two documentation packages available for download.  One contains the
apiDocs with over 300 MB of interactive graphics.  The other includes
the apiDocs without the volume of interactive graphics.  You need only
install the package that serves your needs.</p>
<p>The documentation is a snapshot equivalent of the public website for the 
<a href="http://xalan.apache.org/xalan-c/index.html">Apache Xalan-C/C++ project</a>.
</p>

<p align="right" size="2">
<a href="#content">(top)</a>
</p>
</div>
<div id="footer">Copyright © 1999-2012 The Apache Software Foundation<br />Apache, Xalan, and the Feather logo are trademarks of The Apache Software Foundation<div class="small">Web Page created on - </div>
</div>
</body>
</html>

../../extra/xdocs/install.xml
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0HTTP/1.1 100 Continue

HTTP/1.1 200 OK
Date: Mon, 17 Apr 2017 01:22:23 GMT
Server: Apache/2.4.10 (Debian)
Vary: Accept-Encoding
Transfer-Encoding: chunked
Content-Type: text/plain; charset=utf-8


<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>ASF: Installing Xalan-C++</title>
<meta http-equiv="content-type" content="text/html; charset=UTF-8" />
<meta http-equiv="Content-Style-Type" content="text/css" />
<link rel="stylesheet" type="text/css" href="resources/apache-xalan.css" />
</head>
<!--
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements. See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership. The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the  "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 -->
<body>
<div id="title">
<table class="HdrTitle">
<tbody>
<tr>
<th rowspan="2">
<a href="http://www.apache.org">
<img alt="Trademark Logo" src="resources/asf_logo.png" width="144" height="75" />
</a>
</th>
<th text-align="center" width="75%">
<a href="index.html" />
</th>
</tr>
<tr>
<td valign="middle">Installing Xalan-C++</td>
</tr>
</tbody>
</table>
<table class="HdrButtons" align="center" border="1">
<tbody>
<tr>
<td>
<a href="http://www.apache.org">Apache Foundation</a>
</td>
<td>
<a href="http://xalan.apache.org">Xalan Project</a>
</td>
<td>
<a href="http://xerces.apache.org">Xerces Project</a>
</td>
<td>
<a href="http://www.w3.org/TR">Web Consortium</a>
</td>
<td>
<a href="http://www.oasis-open.org/standards">Oasis Open</a>
</td>
</tr>
</tbody>
</table>
</div>
<div id="navLeft">
<ul />
</div>
<div id="content">
<h2>Installing Xalan-C++</h2>


<ul>
<li>
<a href="#InstSrcPkgs">Install Source Packages</a>
</li>
<li>
<a href="#InstBinPkgs">Install Binary Packages</a>
</li>
  <ul>
  <li>
<a href="#InstUnixBinPkgs">Install UNIX Binary Packages</a>
</li>
    <ul>
    <li>
<a href="#ConfigUnixSys">Configure UNIX and Linux Systems</a>
</li>
    </ul>
  <li>
<a href="#InstWinBinPkgs">Install Windows Binary Packages</a>
</li>
    <ul>
    <li>
<a href="#ConfWinPath">Configure Windows PATH</a>
</li>
    </ul>
  </ul>
<li>
<a href="#InstDocPkgs">Install Documentation Package</a>
</li>
</ul>

<a name="InstSrcPkgs">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>Install Source Packages</h3>

<p>We have no package managers for source packages.  
You just extract the contents of the distribution <b>zip</b> or <b>tar</b> file 
into a source directory of your choosing.</p>

<p>The supplemental package building scripts for Linux and UNIX look for the 
Xalan-C sources to be found in a directory named <code>
<b>xalan-src</b>
</code>. 
The Xerces-C sources are expected to be found in a directory named <code>
<b>xerces-src</b>
</code>.</p>

<p>The supplemental package building scripts for Windows look for the Xalan-C 
sources to be found in a directory named <code>
<b>xalan-src-11</b>
</code> 
and the Xerces-C sources to be found in a directory named <code>
<b>xerces-src-31</b>
</code>.</p>

<p>When building the Xalan-C library and sample programs, 
you also need the necessary C/C++ compiler tools installed. 
A working copy of the Xerces-C XML parser library must be available 
before you can build the Xalan-C library. 
You may build the Xerces-C XML parser library from a source distribution 
or use a compatible Xerces-C binary distribution.</p>

<p>Building the User Guide web pages from sources requires a 
working Xalan command line program.  The Xalan command-line program must support 
top-level parameters as strings.</p>

<p>Building the interactive API Reference pages requires a UNIX or Linux 
system with a current copy of Doxygen and GraphViz software installed.</p>


<a name="InstBinPkgs">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>Install Binary Packages</h3>

<p>The binary packages distributed by <b>zip</b> and <b>tar</b> files are 
usually extracted to an install directory of your choosing. 
After extracting the contents, and possibly relocating some items, 
you may then need to manually perform some minor system configuration.</p>

<a name="InstUnixBinPkgs">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h4>Install UNIX Binary Packages</h4>

<p>Binary packages for Linux and UNIX systems only distribute a <b>release</b> build of binaries. 
A debug build of binaries requires you to compile from the sources. 
Binary packages for Linux and UNIX systems have the following directory structure.</p>

<table border="1">
<tr>
<td class="content" rowspan="1" colspan="1">./bin/</td>
<td class="content" rowspan="1" colspan="1">Contains the Xalan.exe command line and DLLs</td>
</tr>
<tr>
<td class="content" rowspan="1" colspan="1">./lib/</td>
<td class="content" rowspan="1" colspan="1">Contains the linker libraries</td>
</tr>
<tr>
<td class="content" rowspan="1" colspan="1">./include/xalanc/</td>
<td class="content" rowspan="1" colspan="1">Contains the Xalan-C header files</td>
</tr>
<tr>
<td class="content" rowspan="1" colspan="1">./doc/xalanc-1.11/</td>
<td class="content" rowspan="1" colspan="1">Contains license and other information</td>
</tr>
</table>

<p>Supplemental scripts for Linux and UNIX builds are available in the 
source distribution by which binary packages can be made. 
The release builds are targeted to <code>${prefix} = /opt/apache/</code>. 
The debug buids are targeted to <code>${prefix} = /opt/apache/debug/</code>.</p>

<p>Packages that are released by a UNIX or Linux package manager are 
usually installed and configured by the package manager.</p>

<a name="ConfigUnixSys">‌</a>
<h5>Configure UNIX and Linux Systems</h5>

<p>The Xalan command line executable should be in a directory 
accessible by the PATH environment.</p>

<p>The lib directories containing the <code>
<b>libxalan-c.so</b>
</code> and 
<code>
<b>libxerces-c.so</b>
</code> objects must be known to the shared object loader. 
The system loader environment variable usually takes precedence 
over the shared object cache. 
I use the shared object cache for installed applications and reserve 
the overriding environment for prototype builds and debugging purposes.</p>

<table border="1">
<tr>
<th class="content" rowspan="1" colspan="1">Operating System</th>
<th class="content" rowspan="1" colspan="1">Library Path Environment</th>
</tr>
<tr>
<td class="content" rowspan="1" colspan="1">Solaris and Linux</td>
<td class="content" rowspan="1" colspan="1">LD_LIBRARY_PATH</td>
</tr>
<tr>
<td class="content" rowspan="1" colspan="1">BSD/GNU</td>
<td class="content" rowspan="1" colspan="1">LD_LIBRARY_PATH</td>
</tr>
<tr>
<td class="content" rowspan="1" colspan="1">HP-UX</td>
<td class="content" rowspan="1" colspan="1">SHLIB_PATH</td>
</tr>
<tr>
<td class="content" rowspan="1" colspan="1">AIX and BSD</td>
<td class="content" rowspan="1" colspan="1">LIBPATH</td>
</tr>
<tr>
<td class="content" rowspan="1" colspan="1">MacOSX</td>
<td class="content" rowspan="1" colspan="1">DYLD_LIBRARY_PATH</td>
</tr>
<tr>
<td class="content" rowspan="1" colspan="1">Cygwin and MinGW</td>
<td class="content" rowspan="1" colspan="1">PATH</td>
</tr>
</table>

<p>The library search path order is significant. 
In many cases, the <code>
<b>/usr/lib</b>
</code>, <code>
<b>/lib</b>
</code>, 
and <code>
<b>/usr/local/lib</b>
</code> paths are already cached 
in <code>
<b>/etc/ld.so.cache</b>
</code> or included by <code>
<b>/etc/ld.so.conf</b>
</code>.</p>



<a name="InstWinBinPkgs">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h4>Install Windows Binary Packages</h4>

<p>Binary packages for Windows systems include a directory name 
related to the Windows Studio platform used to build the product.  
The <code>{<b>bin</b>, <b>lib</b>, <b>include</b>, <b>doc</b>}</code> directories 
are subdirectories of the platform directory. 
Libraries for several Visual Studio development systems 
can be installed on the same Windows computer.</p>
<table border="1">
<tr>
<td class="content" rowspan="1" colspan="1">XALANCPKG-11-31-VC71</td>
<td class="content" rowspan="1" colspan="1">for Visual Studio 2003 (Win32)</td>
</tr>
<tr>
<td class="content" rowspan="1" colspan="1">XALANCPKG-11-31-VC80</td>
<td class="content" rowspan="1" colspan="1">for Visual Studio 2005 (Win32)</td>
</tr>
<tr>
<td class="content" rowspan="1" colspan="1">XALANCPKG-11-31-VC90</td>
<td class="content" rowspan="1" colspan="1">for Visual Studio 2008 (Win32)</td>
</tr>
<tr>
<td class="content" rowspan="1" colspan="1">XALANCPKG-11-31-VC100</td>
<td class="content" rowspan="1" colspan="1">for Visual Studio 2010 (Win32)</td>
</tr>
<tr>
<td class="content" rowspan="1" colspan="1">XALANCPKG-11-31-X64-VC80</td>
<td class="content" rowspan="1" colspan="1">for Visual Studio 2005 (amd64)</td>
</tr>
<tr>
<td class="content" rowspan="1" colspan="1">XALANCPKG-11-31-X64-VC90</td>
<td class="content" rowspan="1" colspan="1">for Visual Studio 2008 (amd64)</td>
</tr>
<tr>
<td class="content" rowspan="1" colspan="1">XALANCPKG-11-31-X64-VC100</td>
<td class="content" rowspan="1" colspan="1">for Visual Studio 2010 (amd64)</td>
</tr>
</table>

<p>Supplemental scripts for Windows builds are available in the source distribution 
by which these above binary packages can be made.  
Also included are scripts for building the Xerces-C sources 
to the following binary package directories. 
These directories are mostly compatible with the required 
XALANCROOT and XERCESCROOT environment variables when building your own applications.</p>

<table border="1">
<tr>
<td class="content" rowspan="1" colspan="1">XERCESCPKG-31-VC71</td>
<td class="content" rowspan="1" colspan="1">for Visual Studio 2003 (Win32)</td>
</tr>
<tr>
<td class="content" rowspan="1" colspan="1">XERCESCPKG-31-VC80</td>
<td class="content" rowspan="1" colspan="1">for Visual Studio 2005 (Win32)</td>
</tr>
<tr>
<td class="content" rowspan="1" colspan="1">XERCESCPKG-31-VC90</td>
<td class="content" rowspan="1" colspan="1">for Visual Studio 2008 (Win32)</td>
</tr>
<tr>
<td class="content" rowspan="1" colspan="1">XERCESCPKG-31-VC100</td>
<td class="content" rowspan="1" colspan="1">for Visual Studio 2010 (Win32)</td>
</tr>
<tr>
<td class="content" rowspan="1" colspan="1">XERCESCPKG-31-X64-VC80</td>
<td class="content" rowspan="1" colspan="1">for Visual Studio 2005 (amd64)</td>
</tr>
<tr>
<td class="content" rowspan="1" colspan="1">XERCESCPKG-31-X64-VC90</td>
<td class="content" rowspan="1" colspan="1">for Visual Studio 2008 (amd64)</td>
</tr>
<tr>
<td class="content" rowspan="1" colspan="1">XERCESCPKG-31-X64-VC100</td>
<td class="content" rowspan="1" colspan="1">for Visual Studio 2010 (amd64)</td>
</tr>
</table>

<p>Supplemental scripts for Windows builds will also handle the packaging of older 
Xalan-C and Xerces-C releases.  A similar naming of package directories and 
source directories is supported for these older releases.</p>

<table class="note">
<tr>
<td class="noteImg">
<img src="resources/note.gif" alt="note" />
</td>
<td class="noteTxt">You MUST NOT merge the <b>bin</b> and <b>lib</b> directories from packages 
compiled with different compilers or different target (Win32 or amd64) platforms.</td>
</tr>
</table>

<p>It is safe to merge the <b>bin</b> directories of compatible Xalan-C and Xerces-C 
distributions into a common directory known by the system PATH environment. 
You can safely merge the <b>lib</b> directories of Xalan-C and Xerces-C into a common directory.
 You can safely merge the <b>include</b> directories of both Xalan-C and Xerces-C 
as long as the subdirectories of <b>xalanc</b> and <b>xercesc</b> remain in100 56949    0 14882  100 42067   135k   382k --:--:-- --:--:-- --:--:--  383k
tact.</p>

<a name="ConfWinPath">‌</a>
<h5>Configure Windows PATH</h5>

<p>Windows systems require that the bin directories be added to the 
PATH environment so the library DLL files can be found. 
The <b>Xalan.exe</b> program is dynamically linked to these libraries.</p>

<p>You can make the PATH environment a permanent part of the SYSTEM or user login DESKTOP environment.
Any PATH you add to the user login DESKTOP environment gets automatically prepended to the
SYSTEM PATH environment and is effective upon successful user DESKTOP login.  If your
computer also starts Windows Services that run on behalf of a user, the user environment
is assumed.</p>

<ol>
<li>Right-Click on the computer icon.</li>
<li>Select Properties</li>
<li>Select Advanced System Settings.</li>
<li>SelectEnvironment Variables.</li>
<li>Add the bin directory to the system PATH environment.</li>
</ol>

<p>The XP, NT, 2000, and 3000 systems allow environment variables to be 
set explicitly to individual user accounts.  
The Vista, Win-7, and 2008 systems have security administration 
that gets in the way of updating individual user environments.</p>

<p>Or you can add the <b>bin</b> directories temporarily to your environment by program control 
or invoking a shell command script, or using a command window. 
The following command line will append your <code>{target}/<b>bin</b>
</code> directory
to the PATH environment.</p>
<blockquote class="source">
<pre>
set PATH=%PATH%;{target}/bin
</pre>
</blockquote>



<a name="InstDocPkgs">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>Install Documentation Packages</h3>

<p>There are actually two distributed documentation packages.  
One contains the website pages and full interactive apiDoc images (355+ megabytes).  
The other contains the website pages and the apiDoc descriptions (47 megabytes) 
without the apiDoc images.  
Except for the absence of interactive apiDoc images, 
the documentation packages are identical.</p>

<p>The documentation packages are distributed as <b>tar</b> and <b>zip</b> files. 
You just extract the contents into a directory that is reachable by your favorite web browser. 
The documentation tree starts with the <b>./xalan-c/</b> directory. 
The top documentation page is the <b>./xalan-c/index.html</b> file.</p>

<p>The documentation is initially a snapshot of the 
<a href="http://xalan.apache.org/xalan-c/index.html">Apache Xalan-C/C++ website</a> 
at the time the product was released.</p>

<p align="right" size="2">
<a href="#content">(top)</a>
</p>
</div>
<div id="footer">Copyright © 1999-2012 The Apache Software Foundation<br />Apache, Xalan, and the Feather logo are trademarks of The Apache Software Foundation<div class="small">Web Page created on - </div>
</div>
</body>
</html>

../../extra/xdocs/license.xml
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100 32749    0   192  100 32557   1995   330k --:--:-- --:--:-- --:--:--  331k
HTTP/1.1 100 Continue

HTTP/1.1 200 OK
Date: Mon, 17 Apr 2017 01:22:23 GMT
Server: Apache/2.4.10 (Debian)
Vary: Accept-Encoding
Transfer-Encoding: chunked
Content-Type: text/plain; charset=utf-8


<?xml version="1.0" encoding="UTF-8"?><error>Something went wrong!: [9167467611483493581,/tmp/xzes/9167467611483493581.xml,] [9167467611483493581] [/tmp/xzes/9167467611483493581.xml]</error>
../../extra/xdocs/overview.xml
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0HTTP/1.1 100 Continue

HTTP/1.1 200 OK
Date: Mon, 17 Apr 2017 01:22:23 GMT
Server: Apache/2.4.10 (Debian)
Vary: Accept-Encoding
Transfer-Encoding: chunked
Content-Type: text/plain; charset=utf-8


<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>ASF: Xalan-C++ Overview</title>
<meta http-equiv="content-type" content="text/html; charset=UTF-8" />
<meta http-equiv="Content-Style-Type" content="text/css" />
<link rel="stylesheet" type="text/css" href="resources/apache-xalan.css" />
</head>
<!--
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements. See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership. The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the  "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 -->
<body>
<div id="title">
<table class="HdrTitle">
<tbody>
<tr>
<th rowspan="2">
<a href="http://www.apache.org">
<img alt="Trademark Logo" src="resources/asf_logo.png" width="144" height="75" />
</a>
</th>
<th text-align="center" width="75%">
<a href="index.html" />
</th>
</tr>
<tr>
<td valign="middle">Xalan-C++ Overview</td>
</tr>
</tbody>
</table>
<table class="HdrButtons" align="center" border="1">
<tbody>
<tr>
<td>
<a href="http://www.apache.org">Apache Foundation</a>
</td>
<td>
<a href="http://xalan.apache.org">Xalan Project</a>
</td>
<td>
<a href="http://xerces.apache.org">Xerces Project</a>
</td>
<td>
<a href="http://www.w3.org/TR">Web Consortium</a>
</td>
<td>
<a href="http://www.oasis-open.org/standards">Oasis Open</a>
</td>
</tr>
</tbody>
</table>
</div>
<div id="navLeft">
<ul />
</div>
<div id="content">
<h2>Xalan-C++ Overview</h2>
<ul>
  <li>
<a href="#intro">Introduction</a>
</li>
  <li>
<a href="#features">Xalan-C++ Features</a>
</li>
  <li>
<a href="#towork">Getting to work with Xalan-C++</a>
</li>
  <li>
<a href="#uptospeed">Getting up to speed with XSLT</a>
</li>
  <li>
<a href="#glossary">Glossary</a>
</li>
</ul>

<a name="intro">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>Introduction</h3>
<p>Xalan-C++ (named after a rare musical instrument) implements the <a href="" /> and the 
   <a href="" />. XSLT is the first part of the XSL stylesheet language for XML. It includes the XSL
   Transformation vocabulary and XPath, a language for addressing parts of XML documents. For links to background materials, 
   discussion groups, frequently asked questions, and tutorials on XSLT, see <a href="#uptospeed">Getting up to speed with 
   XSLT</a>.</p> 
<table class="note">
<tr>
<td class="noteImg">
<img src="resources/note.gif" alt="note" />
</td>
<td class="noteTxt">XSL also includes a vocabulary for formatting documents, which is not part of Xalan-C++.  For more information, see 
      <a href="" /> and the <a href="http://xmlgraphics.apache.org/fop">Apache XML FOP (Formatting Objects Project)
      </a>.
</td>
</tr>
</table>
<p>You use the XSLT language to compose XSL stylesheets. An XSL stylesheet contains instructions for transforming XML documents 
   from one document type to another document type (XML, HTML, or other). In structural terms, an XSL stylesheet specifies the 
   transformation of one tree of nodes (the XML input) into another tree of nodes (the output or transformation result).</p>
<table class="note">
<tr>
<td class="noteImg">
<img src="resources/note.gif" alt="note" />
</td>
<td class="noteTxt">The XSL stylesheet may generate and refer to cascading style sheets (<a href="http://www.w3.org/Style/CSS/">CSS</a>) 
      as part of its output.
</td>
</tr>
</table>  
<p>In the following example, the foo.xsl stylesheet is used to transform foo.xml into foo.out:</p>
<p>foo.xml:</p>
<blockquote class="source">
<pre>
&lt;?xml version="1.0"?&gt;
&lt;doc&gt;Hello&lt;/doc&gt;
</pre>
</blockquote>
<p>foo.xsl:</p>
<blockquote class="source">
<pre>
&lt;?xml version="1.0"?&gt; 
&lt;xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0"&gt;
&lt;xsl:template match="doc"&gt;
&lt;out&gt;&lt;xsl:value-of select="."/&gt;&lt;/out&gt;
&lt;/xsl:template&gt;
&lt;/xsl:stylesheet&gt;
</pre>
</blockquote>
<p>foo.out:</p>
<blockquote class="source">
<pre>&lt;out&gt;Hello&lt;/out&gt;</pre>
</blockquote>

<a name="features">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>Xalan-C++ Features</h3>
<ul> 
  <li>Xalan-C++ fully implements the <a href="" />.</li>
  <li>Xalan-C++ incorporates the <a href="" />.<br />
<br />
</li>
  <li>Xalan-C++ uses <a href="http://xerces.apache.org/xerces-c/index.html">Xerces-C++</a> to parse XML documents and XSL
      stylesheets.<br />
<br />
      The input may appear in the form of a file or URL, a stream, or a <a href="" />. 
      Xalan-C++ performs the transformations specified in the XSL stylesheet and produces a file, a stream, or a DOM as you
      specify when you set up the transformation.<br />
<br />
</li>
  <li>Along with a complete API for performing transformations in your C++ applications, Xalan-C++ provides a <a href="commandline.html">command line</a> utility for convenient file-to-file transformations.<br />
<br />
</li>
  <li>Xalan-C++ supports C++ <a href="extensions.html">extension functions</a>
</li>
</ul> 


<a name="towork">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>Getting to work with Xalan-C++</h3>
<p>For instructions and some suggestions about how to get started using Xalan-C++, see <a href="download.html">Downloading Xalan-C++</a>,
   <a href="buildlibs.html">Building Xalan-C++</a>, and <a href="install.html">Installing Xalan-C++</a>.</p>


<a name="uptospeed">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>Getting up to speed with XSLT</h3>
<p>If you are still working through the details of the XSLT spec (the W3C 1.0 Recommendation), you may want 
   to consult one or more of the following:</p>
   <ul>
     <li>Crane Softwright's <a href="http://www.CraneSoftwrights.com/training/">Free preview of Practical
         Transformation Using XSLT and XPath</a>
<br />
<br />
</li>
     <li>Doug Tidwell's <a href="http://www.oreilly.com/catalog/xslt/">XSLT</a>, O'Reilly, 2001<br />
<br />     </li>
     <li>Bob DuCharme's <a href="http://www.manning.com/ducharme/index.html">XSLT Quickly</a>, Manning Publications,
         2001<br />
<br />
</li>                 
     <li>John Robert Gardner and Zarella Rendon's 
         <a href="http://vig.prenhall.com/catalog/academic/product/1,4096,0130404462,00.html">XSLT and XPath: A Guide to
         Transformations</a>, Prentice-Hall, 2001<br />
<br />
</li>                 


     <li>Elliotte Rusty Harold's <a href="http://www.ibiblio.org/xml/books/bible2/chapters/ch17.html">Chapter 17 of 
         the XML Bible: XSL Transformations</a>
<br />
<br />
</li>
     <li>The Mulberry <a href="http://www.mulberrytech.com/xsl/xsl-list/">XSL-List -- Open Forum on XSL</a> 
         (of interest to XSL users at all levels)<br />
<br />
</li>
     <li>Objects by Design's <a href="http://www.objectsbydesign.com/projects/xmi_to_html.html">Transforming XMI to
         HTML</a> (oriented towards XMI, "an XML-based, stream representation of a UML model," but also covers "generic"
         XML transformations) and their related <a href="http://objectsbydesign.com/projects/xslt/xslt_by_example.html">XSLT
         by Example</a>
<br />
<br />
</li>
         
     <li>OASIS (the Organization for the Advancement of Structured Information Standards): 
         <a href="http://www.oasis-open.org/cover/xsl.html">Extensible 100 51531    0 11375  100 40156   113k   399k --:--:-- --:--:-- --:--:--  400k
Stylesheet Language (XSL)</a> by Robin
         Cover<br />
<br />
</li>
     <li>Aaron Skonnard and Martin Gudgin's 
<a href="http://www.theserverside.net/tt/books/addisonwesley/EssentialXML/index.tss">Essential 
XML Quick Reference:</a> A Programmer's Reference to 
XML, XPath, XSLT, XML Schema, SOAP and More. This reference is published by Addison Wesley, 2003, ISBN/0201740958.<br />
<br />
</li>
        
   </ul>
<p>When you come across other useful introductory or background materials, please email <a href="mailto:" />, so we can add them to this list.</p>
   


<a name="glossary">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>Glossary</h3>
<div class="glossary">
       <p class="label">
<em>XSLT Namespace</em>
</p>
       <blockquote class="item">The <a href="http://www.w3.org/TR/REC-xml-names/">XML namespace</a> for XSLT. An XML namespace is a 
             collection of element and attribute names, identified by a Unique Resource Identifier (URI), which often takes 
             the form of a URL, but is really just a unique string, not a pointer to a web page. The XSLT namespace URI is
             http://www.w3.org/1999/XSL/Transform. In each XSLT stylesheet, you must declare this namespace in the stylesheet 
             element tag and bind it to a local prefix. Like the XSLT specification, we always use xsl as the XSLT namespace 
             prefix in our descriptions and examples, although you are free to bind any prefix to this namespace.<br />
<br />
</blockquote>
        
       <p class="label">
<em>XSL Instruction</em>
</p>
       <blockquote class="item">Any tag associated with the XSLT namespace.<br />
<br />
</blockquote>
        
       <p class="label">
<em>Template</em>
</p>
       <blockquote class="item">An element, usually with child elements, that specifies a "rule" or set of instructions to perform when a 
             particular kind of node is encountered in the source tree.<br />
<br />
</blockquote>
                
       <p class="label">
<em>XSL Template Instruction</em>
</p>
       <blockquote class="item">Any tag that occurs inside an xsl:template element and is associated with the XSLT namespace.<br />
<br />
</blockquote>
                   
       <p class="label">
<em>Source Tree</em>
</p>
       <blockquote class="item">The XML tree input to the XSL process.<br />
<br />
</blockquote>
        
       <p class="label">
<em>Result Tree</em>
</p>
       <blockquote class="item">The tree that is output by the XSL process.<br />
<br />
</blockquote>
                
       <p class="label">
<em>Match Pattern</em>
</p>
       <blockquote class="item">The part of a template that defines the kind(s) of nodes to which the template applies.<br />
<br />
</blockquote>

</div>
<p>For more definitions of XSLT terminology, see Dave Pawson's <a href="http://www.dpawson.co.uk/xsl/xslvocab.html">XSLT 
   Terminology Clarification</a> and the Glossary in Michael Kay's 
   <a href="http://www.wrox.com/Consumer/Store/Details.asp?ISBN=1861003129">XSLT Programmer's Reference</a>.</p>

<p align="right" size="2">
<a href="#content">(top)</a>
</p>
</div>
<div id="footer">Copyright © 1999-2012 The Apache Software Foundation<br />Apache, Xalan, and the Feather logo are trademarks of The Apache Software Foundation<div class="small">Web Page created on - </div>
</div>
</body>
</html>

../../extra/xdocs/programming.xml
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0HTTP/1.1 100 Continue

HTTP/1.1 200 OK
Date: Mon, 17 Apr 2017 01:22:24 GMT
Server: Apache/2.4.10 (Debian)
Vary: Accept-Encoding
Transfer-Encoding: chunked
Content-Type: text/plain; charset=utf-8


<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>ASF: Programming Tips</title>
<meta http-equiv="content-type" content="text/html; charset=UTF-8" />
<meta http-equiv="Content-Style-Type" content="text/css" />
<link rel="stylesheet" type="text/css" href="resources/apache-xalan.css" />
</head>
<!--
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements. See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership. The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the  "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 -->
<body>
<div id="title">
<table class="HdrTitle">
<tbody>
<tr>
<th rowspan="2">
<a href="http://www.apache.org">
<img alt="Trademark Logo" src="resources/asf_logo.png" width="144" height="75" />
</a>
</th>
<th text-align="center" width="75%">
<a href="index.html" />
</th>
</tr>
<tr>
<td valign="middle">Programming Tips</td>
</tr>
</tbody>
</table>
<table class="HdrButtons" align="center" border="1">
<tbody>
<tr>
<td>
<a href="http://www.apache.org">Apache Foundation</a>
</td>
<td>
<a href="http://xalan.apache.org">Xalan Project</a>
</td>
<td>
<a href="http://xerces.apache.org">Xerces Project</a>
</td>
<td>
<a href="http://www.w3.org/TR">Web Consortium</a>
</td>
<td>
<a href="http://www.oasis-open.org/standards">Oasis Open</a>
</td>
</tr>
</tbody>
</table>
</div>
<div id="navLeft">
<ul />
</div>
<div id="content">
<h2>Programming Tips</h2>
   <ul>
      <li>
<a href="#intro">Introduction</a>
</li>
      <li>
<a href="#memory">Pluggable Memory Management</a>
</li>
      <li>
<a href="#more">More topics</a>
</li>
   </ul>

<a name="intro">‌</a>   
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>Introduction</h3>
<p>This section was created to guide users on how to use some of the new features going into the Xalan 
source code base.  Some of the features discussed in this section are based on feedback and questions
posted on the xalan-c-users newsgroup.  This section will cover the benefits of certain features
and provide users with programming hints on how to utilize the features in their applications.</p>


<a name="memory">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>Pluggable Memory Management</h3>
<p>Pluggable memory management was added as a new feature in Xalan-C Version 1.8;.  This feature introduces an
object called MemoryManager which allows applications with stricter memory management requirements to 
utilize a more efficient allocation method.  This MemoryManager object can be applied to 
each processor instance, thus recovery procedures from memory leaks or processor crashes will be applied to 
the associated instance only.</p>
<p>The memory management model is similar to the memory management feature provided by the Xerces-C XML Parser.</p>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h4>How To Use This Feature</h4>
<p>To apply memory management to your application, the MemoryManager object needs to be specified in two
stages:</p>
<ul>
<li>At initialization phase.  The purpose of specifying a MemoryManager object during initialization is to 
create a separate memory manager for the overall application.  Example of how this can be done100 41340    0  6029  100 35311  66490   380k --:--:-- --:--:-- --:--:--  383k
 is shown in 
the example below<br />
<br />
<blockquote class="source">
<pre>
// Initialization step
static void XalanTransformer::initialize(MemoryManager* initMemoryManager=0);
</pre>
</blockquote>
</li>
<li>Creation of a transformer instance.  This creates a unique memory manager for the instance of the 
processor.  This step is optional.  If no memory manager is provided, the global heap is used as the memory
source.  Example of this is shown below:<br />
<br />
<blockquote class="source">
<pre>
// Create instance of XalanTransformer
MemoryManager      memMgrA;                // memory manager object
XalanTransformer   transformerA(&amp;memMgrA); 

MemoryManager      memMgrB;
XalanTransformer   transformerB(&amp;memMgrB);
XalanTransformer   transformerC(&amp;memMgrB);  // Uses same memory manager object as transformerB
XalanTransformer   transformerD;           // Uses default static memory manager
</pre>
</blockquote>
</li>
</ul>
<p>The above method demonstrates how users can apply the basic pluggable memory management feature.  Users
also have the option of implementing their own memory manager.  This can be done by simply writing methods 
for:</p>
<blockquote class="source">
<pre>
// Method for allocating memory
void* allocate(size_t size);
</pre>
</blockquote>
<p>and</p>
<blockquote class="source">
<pre>
// Method for deallocating memory
void deallocate(void *p);
</pre>
</blockquote>
<p>For an example of how to use this feature, please see the <a href="samples.html#simpletransform">
SimpleTransform</a> sample that has been provided in the binary distributions.</p>



<a name="more">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>More Topics</h3>
<p>Please feel free to give us feedback on what topics you would like to see.</p>
<p>Send comments to <a href="mailto:" />.</p>


<p align="right" size="2">
<a href="#content">(top)</a>
</p>
</div>
<div id="footer">Copyright © 1999-2012 The Apache Software Foundation<br />Apache, Xalan, and the Feather logo are trademarks of The Apache Software Foundation<div class="small">Web Page created on - </div>
</div>
</body>
</html>

../../extra/xdocs/readme.xml
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100 58536    0   192  100 58344   1878   557k --:--:-- --:--:-- --:--:--  558k
HTTP/1.1 100 Continue

HTTP/1.1 200 OK
Date: Mon, 17 Apr 2017 01:22:24 GMT
Server: Apache/2.4.10 (Debian)
Vary: Accept-Encoding
Transfer-Encoding: chunked
Content-Type: text/plain; charset=utf-8


<?xml version="1.0" encoding="UTF-8"?><error>Something went wrong!: [8655325871839389160,/tmp/xzes/8655325871839389160.xml,] [8655325871839389160] [/tmp/xzes/8655325871839389160.xml]</error>
../../extra/xdocs/releasenotes.xml
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100 58629    0   192  100 58437   2044   607k --:--:-- --:--:-- --:--:--  613k
HTTP/1.1 100 Continue

HTTP/1.1 200 OK
Date: Mon, 17 Apr 2017 01:22:24 GMT
Server: Apache/2.4.10 (Debian)
Vary: Accept-Encoding
Transfer-Encoding: chunked
Content-Type: text/plain; charset=utf-8


<?xml version="1.0" encoding="UTF-8"?><error>Something went wrong!: [6687250542995534389,/tmp/xzes/6687250542995534389.xml,] [6687250542995534389] [/tmp/xzes/6687250542995534389.xml]</error>
../../extra/xdocs/resources.xml
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100 36526    0   192  100 36334   2293   423k --:--:-- --:--:-- --:--:--  427k
HTTP/1.1 100 Continue

HTTP/1.1 200 OK
Date: Mon, 17 Apr 2017 01:22:24 GMT
Server: Apache/2.4.10 (Debian)
Vary: Accept-Encoding
Transfer-Encoding: chunked
Content-Type: text/plain; charset=utf-8


<?xml version="1.0" encoding="UTF-8"?><error>Something went wrong!: [4126252388692114331,/tmp/xzes/4126252388692114331.xml,] [4126252388692114331] [/tmp/xzes/4126252388692114331.xml]</error>
../../extra/xdocs/samples.xml
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0HTTP/1.1 100 Continue

HTTP/1.1 200 OK
Date: Mon, 17 Apr 2017 01:22:24 GMT
Server: Apache/2.4.10 (Debian)
Vary: Accept-Encoding
Transfer-Encoding: chunked
Content-Type: text/plain; charset=utf-8


<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>ASF: Xalan-C++ Samples</title>
<meta http-equiv="content-type" content="text/html; charset=UTF-8" />
<meta http-equiv="Content-Style-Type" content="text/css" />
<link rel="stylesheet" type="text/css" href="resources/apache-xalan.css" />
</head>
<!--
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements. See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership. The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the  "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 -->
<body>
<div id="title">
<table class="HdrTitle">
<tbody>
<tr>
<th rowspan="2">
<a href="http://www.apache.org">
<img alt="Trademark Logo" src="resources/asf_logo.png" width="144" height="75" />
</a>
</th>
<th text-align="center" width="75%">
<a href="index.html" />
</th>
</tr>
<tr>
<td valign="middle">Xalan-C++ Samples</td>
</tr>
</tbody>
</table>
<table class="HdrButtons" align="center" border="1">
<tbody>
<tr>
<td>
<a href="http://www.apache.org">Apache Foundation</a>
</td>
<td>
<a href="http://xalan.apache.org">Xalan Project</a>
</td>
<td>
<a href="http://xerces.apache.org">Xerces Project</a>
</td>
<td>
<a href="http://www.w3.org/TR">Web Consortium</a>
</td>
<td>
<a href="http://www.oasis-open.org/standards">Oasis Open</a>
</td>
</tr>
</tbody>
</table>
</div>
<div id="navLeft">
<ul />
</div>
<div id="content">
<h2>Xalan-C++ Samples</h2>
<ul>
  <li>
<a href="#getstarted">Samples to help you get started</a>
</li>
  <li>
<a href="#rebuilding">Rebuilding a Sample application</a>
</li>
  <li>
<a href="#apachemodulexslt">ApacheModuleXSLT</a>
</li>
  <li>
<a href="#compilestylesheet">CompileStylesheet</a>
</li>
  <li>
<a href="#documentbuilder">DocumentBuilder</a>
</li>
  <li>
<a href="#externalfunctions">ExternalFunctions</a>
</li>
  <li>
<a href="#parsedsourcewrappers">ParsedSourceWrappers</a>
</li>
  <li>
<a href="#serializenodeset">SerializeNodeSet</a>
</li>    
  <li>
<a href="#simpletransform">SimpleTransform</a>
</li>
  <li>
<a href="#simplexpathapi">SimpleXPathAPI</a>
</li>
  <li>
<a href="#simplexpathcapi">SimpleXPathCAPI</a>
</li>
  <li>
<a href="#streamtransform">StreamTransform</a>
</li>    
  <li>
<a href="#threadsafe">ThreadSafe</a>
</li>  
  <li>
<a href="#tracelisten">TraceListen</a>
</li>        
  <li>
<a href="#transformtoxercesdom">TransformToXercesDOM</a>
</li>
  <li>
<a href="#usememorymanager">UseMemoryManager</a>
</li>
  <li>
<a href="#usestylesheetparam">UseStylesheetParam</a>
</li>
  <li>
<a href="#xalantransform">XalanTransform</a>
</li>
  <li>
<a href="#xalantransformercallback">XalanTransformerCallback</a>
</li>
</ul>

<a name="getstarted">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>Samples to help you get started</h3>
<p>Each of the subdirectories in the Xalan-C++ samples directory contains the source files for a
   sample application. The executables for the samples are in the build subdirectory, which should be on the system
   path.</p>
<p>With most of the samples, you can use the following procedure:</p>
<ol>
  <li>Go to the samples subdirectory containing the sample (use the DOS shell if you are running Windows)<br />
<br />
</li>
  <li>Run the sample from the command line (as indicated below)<br />
<br />
</li>
  <li>Examine the application source files. You may also want to modify the source files. Remember that if you
      modify a .cpp file, you must rebuild the executable and place it on the path before you can run the
      modified application.</li>
</ol>
<table class="note">
<tr>
<td class="noteImg">
<img src="resources/note.gif" alt="note" />
</td>
<td class="noteTxt">Each sample application looks for input files in the current directory, the directory from
      which you run the application. The input files are in the samples subdirectory along with the sample source
      files. For the UNIX builds, application executables are in the bin subdirectory. For the Windows32 build, the
      application executable is in the bin subdirectory (Xalan-C_1_11_0-&lt;my_Windows_distribution&gt;\bin). To run a 
      sample, be sure the executable is on the path, and run it from the samples subdirectory that contains the input 
      files.</td>
</tr>
</table>
<table class="note">
<tr>
<td class="noteImg">
<img src="resources/note.gif" alt="note" />
</td>
<td class="noteTxt">The most of the samples are implemented without providing a pluggable memory manager. The <a href="#simpletransform">SimpleTransform</a> sample illustrates, 
      in addition to a simple transformation, the usage of the processor with memory manager</td>
</tr>
</table>



<a name="rebuilding">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>Rebuilding a Sample application</h3>
<p>Instructions for rebuilding the samples differ depending on whether you are using the binary package or the source 
package. </p>
<p>For Windows users, the Xalan Visual C++ workspace contains project configurations for building 
   each of the samples.  Users who have downloaded the source package, can find the XalanICU.dsw workspace
   file under:<br />
<br />     <code>Xalan-C_1_11_0-src\src\xalanc\Projects\Win32\VC6</code>
   <br />
<br />  and XalanICU.sln solution file under:<br />
<br />
        <code>Xalan-C_1_11_0-src\src\xalanc\Projects\Win32\VC7.1</code>

   <br />
<br />  Users who have downloaded the binary package, should use the Samples.dsw workspace file 
   located under: <br />
<br />     
   <code>Xalan-C_1_11_0-&lt;my_Win32_distribution&gt;\Samples\Projects\Win32\VC6</code>
<br />
<br />
   or the Samples.sln solution file for .NET V7.1 users, located under: <br />
<br />     
   <code>Xalan-C_1_11_0-&lt;my_Win32_distribution&gt;\Samples\Projects\Win32\VC7.1</code>
<br />
<br />
</p>
<p>The Makefile that comes with the UNIX distributions include targets for rebuilding one or all of 
   the sample applications.  To rebuild one or more sample applications from the UNIX source package, 
   go to the Xalan-C_1_11_0-src directory and run<br />
<br />
        <code>gmake <b>
<i>Target</i>
</b>
</code>
<br />
<br />
   where <b>
<i>Target</i>
</b> is <code>Samples</code> (all the samples), <code>ApacheModuleXSLT</code>, 
   <code>CompileStylesheet</code>, <code>DocumentBuilder</code>, <code>ExternalFunctions</code>, 
   <code>ParsedSourceWrappers</code>, <code>SerializedNodeSet</code>, <code>SimpleTransform</code>,  
   <code>SimpleXPathAPI</code>, <code>SimpleXPathCAPI</code>, <code>StreamTransform</code>, 
   <code>ThreadSafe</code>, <code>TraceListen</code>, <code>TransformToXercesDOM</code>, 
   <code>UseStylesheetParam</code>, <code>XalanTransform</code>, or 
   <code>XalanTransformerCallback</code>.</p>
<p>To rebuild the samples from the UNIX binary package, go to the ../samples directory of your installation,
   run the runConfigure utility for your target platform, and then run gmake.  For example, AIX users would 
   issue the following command:<br />
<br />
        <code>./runConfigure -p aix -c xlc_r -x xlC_r</code>
<br />
        <code>cd samples</code>
<br />
<br />
        <code>gmake <b>
<i>Target</i>
</b>
</code>
<br />
<br />
   where <b>
<i>Target</i>
</b> can be Samples (for building all samples), or the individual sample name as 
   listed above.</p>
<table class="note">
<tr>
<td class="noteImg">
<img src="resources/note.gif" alt="note" />
</td>
<td class="noteTxt">For information on building Apache Module, see <a href="samples.html#apachemodulexslt">ApacheModuleXSLT</a>
</td>
</tr>
</table>


<a name="apachemodulexslt">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>ApacheModuleXSLT</h3>
<table class="note">
<tr>
<td class="noteImg">
<img src="resources/note.gif" alt="note" />
</td>
<td class="noteTxt">This sample must be built with the Apache Web server, and the Xalan-C++ distribution files do not include a binary
      for ApacheModuleXSLT. Assuming you have installed the Apache server on your platform, you can use Visual C++ on Windows to
      build ApacheModuleXSLT.dll, or the Makefile on UNIX to build xslt_module (with the appropriate library suffix).</td>
</tr>
</table>
    
<p>What it does: runs as an Apache module on an Apache Web server; performs transformations and returns the output to a Web
   browser. You configure Apache to respond to a given URL request for an output file (html or txt file in the configuration below)
   by applying an xsl stylesheet file to an xml document file (both with the specified name in a given location) and returning
   the transformation output to the client.</p> 
<p>This sample also illustrates use of the XalanTransformer class and the C API defined in src/XalanTransformer/XalanCAPI.h. It returns 
   transformation output in blocks to a callback function, which enables the browser to start displaying the result before the transformation
   has been completed.</p>
<table class="note">
<tr>
<td class="noteImg">
<img src="resources/note.gif" alt="note" />
</td>
<td class="noteTxt">You may need to adjust the Visual C++ or Makefile settings to locate the required Apache header files. As shipped, the Visual C++ 
      project file looks in \Apache Group\Apache\src\include, and the UNIX Makefile looks in usr/lib.</td>
</tr>
</table>
<p>To build the Apache module, follow the instructions in <a href="buildlibs.html#winbldenv">Steps for doing a Windows 
   build</a> or <a href="buildlibs.html#unixbldenv">Steps for doing a UNIX build</a>. For UNIX platforms, you do the build with<br /> 
   <code>gmake ApacheModuleXSLT</code>.</p>
  
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h4>Setting up and using ApacheModuleXSLT</h4>
<p>To use ApacheModuleXSLT, do the following:</p>
<ol>
  <li>(UNIX only) Be sure the Xalan and Xerces libraries are on your library path (you can accomplish this by copying them to
      /usr/lib; see <a href="getstarted.html#path">Setting up the path/library path</a>), and copy the Apache module to 
      /usr/lib/apache.<br />
<br />
</li>
  <li>Add LoadModule and (UNIX only) AddModule entries to the Apache configuration file: httpd.conf.<br />
<br />
      Windows: <code>LoadModule xslt_module Xalan-C_1_11_0-&lt;my_Windows_distribution&gt;\bin\ApacheModuleXSLT.dll</code>
<br />
<br />
      UNIX: <code>AddModule mod_xslt.c</code>
<br />
              and<br />
              <code>LoadModule xslt_module /usr/lib/apache/mod_xslt.<b>
<i>xx</i>
</b>
</code>
<br />
<br />
      where <b>
<i>xx</i>
</b> is the appropriate library suffix for the UNIX platform ("so" or "a").<br />
<br />
</li>
  <li>Add a &lt;Location&gt; entry to httpd.conf that indicates where xml/xsl file pairs are to be found, and what target file extensions
      to recognize. We suggest the following:<br />
<br />
      <code>&lt;Location /xslt&gt;</code>
<br />
        <code>AddHandler mod_xslt .html</code>
<br />
        <code>AddHandler mod_xslt .txt</code>
<br />
      <code>&lt;/Location&gt;</code>
<br />
<br />
      This &lt;Location&gt; element instructs the module to respond to requests for <b>
<i>xxx</i>
</b>.html and <b>
<i>xxx</i>
</b>.txt files in the 
      in the xslt subdirectory (under the document root; see next item) by applying the <b>
<i>xxx</i>
</b>.xsl stylesheet to <b>
<i>xxx</i>
</b>.xml 
      (both in that directory) and returning the transformation result to the browser.<br />
<br />
      For example, a request for foo.html instructs the module to apply foo.xsl to foo.xml and return the result.<br />
<br />
      Note: It is up to the stylesheet to apply the appropriate xsl:output method to the output. Whether the user specifies html or txt is, of
      itself, immaterial.<br />
<br />
</li>
  <li>Put xml/xsl file pairs in the &lt;Location&gt; subdirectory (xslt in the example)) under the document root directory specified in 
      httpd.conf by the DocumentRoot and &lt;Directory&gt; settings. Alternatively, you can modify these settings to point to 
      Xalan-C_1_11_0-&lt;my_UNIX_distribution&gt;/samples/ApacheModuleXSLT, which includes an xslt subdirectory with xml/xsl file pairs 
      (foo.xml/xsl, apachemod.xml/xsl).<br />
<br />
</li>
  <li>Start the Apache server.<br />
<br />
</li>
  <li>From a Web browser, call the module with a URL as follows:<br />
      <code>http://<b>
<i>serverName</i>
</b>/xslt/<b>
<i>xxx</i>
</b>.html</code>
<br />
      where <b>
<i>serverName</i>
</b> is the Apache server (such as www.myServer.com) and <b>
<i>xxx</i>
</b> is the name of an xml/xsl pair of files 
      (such as foo.xml and foo.xsl) in the xslt subdirectory under the DocumentRoot directory.<br />
<br />
      For example,<br />
      <code>http://www.myServer.com/xslt/apachemod.html</code>
<br />
      instructs ApacheModuleXSLT to apply the apachemod.xsl stylesheet to the apachemod.xml XML document (both files in the xslt directory 
      under the Apache DocumentRoot directory) and return the transformation result to the browser.</li>
</ol>


  
<a name="compilestylesheet">‌</a>    
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>CompileStylesheet</h3>
<p>What it does: Use a compiled stylesheet to perform a series of transformations.</p>
<p>You can run it from the CompileStylesheet subdirectory with</p>
<p>
<code>CompileStylesheet</code>
</p>
<p>See also: <a href="usagepatterns.html#compiled">Compiling stylesheets</a>.</p>


<a name="documentbuilder">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>DocumentBuilder</h3>
<p>What it does: Use a DocumentBuilder to programmatically construct an XML document, apply the foo.xsl stylesheet to
   this document, and write the ouput to foo.out.</p>
<p>You can run it from the DocumentBuilder subdirectory with</p>
<p>
<code>DocumentBuilder</code>
</p>


<a name="externalfunctions">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>ExternalFunctions</h3>
<p>What it does: implement, install, and illustrate the usage of three extension functions. The functions return a
   square root, a cube, and a string with the current date and time. The sample stylesheet (foo.xsl) gets the area
   of a cube and units of measurement from an XML document (foo.xml), computes the length of each side
   of a cube and the volume of the cube, and enters the date and time of the transformation. The output appears in
   foo.out.</p>
<p>Run this sample from the ExternalFunctions subdirectory with</p> 
<p>
<code>ExternalFunctions</code>
</p>
<p>See also: <a href="extensions.html">Extension Functions</a>.</p>
  
  
<a name="parsedsourcewrappers">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>ParsedSourceWrappers</h3>
<p>What it does: performs a transformation with input in the form of a pre-built XercesDOM or XalanSourceTree.</p>
<p>Run this sample from the ParsedSourceWrappers subdirectory with</p>
<p>
<code>ParsedSourceWrappers</code>
</p>
<p>See transformXercesDOM() and transformXalanSourceTree() as called by transform() in ParsedSourceWrappers.cpp.</p>


<a name="serializenodeset">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>SerializeNodeSet</h3>
<p>What it does: Serialize the node set returned by the application of an XPath expression to an XML document.</p>
<p>Run this sample from the SerializeNodeSet subdirectory with</p>
<p>
<code>SerializeNodeSet <b>
<i>XMLFile</i>
</b> <b>
<i>ContextNode</i>
</b> <b>
<i>XPathExpression</i>
</b>
</code>
</p>
<p>where <b>
<i>XMLFile</i>
</b> is an XML source file, <b>
<i>ContextNode</i>
</b> is the location path to the context
   node, and <b>
<i>XPathExpression</i>
</b> is an XPath expression to apply to that context node. The SerializeNodeSet 
   directory contains the same foo.xml sample source file as the preceding examples.</p>
    

<a name="simpletransform">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>SimpleTransform</h3>
<p>What it does: The SimpleTransform class uses the foo.xsl stylesheet to transform foo.xml, and writes the
   output to foo.out.  The source for this sample has been modified to demonstrate the usage of the new pluggable
   memory management feature.</p>
<p>You can run it from the SimpleTransform subdirectory with</p>
<p>
<code>SimpleTransform</code>
</p>
<p>See also: <a href="usagepatterns.html#xalantransformer">Basic procedures for performing XSL
   transformations</a>.</p>

  
<a name="simplexpathapi">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>SimpleXPathAPI</h3>
<p>What it does: Use the XPathEvaluator interface to evaluate an XPath expression from the specified context node of 
   an XML file and display the nodeset returned by the expression.</p>
<table class="note">
<tr>
<td class="noteImg">
<img src="resources/note.gif" alt="note" />
</td>
<td class="noteTxt">You can use this sample as an aid when you want to find out what a given XPath expression returns from a
      given context node in an XML file.</td>
</tr>
</table>
<p>Run this sample from the SimpleXPathAPI subdirectory with</p>
<p>
<code>SimpleXPathAPI <b>
<i>XMLFile</i>
</b> <b>
<i>ContextNode</i>
</b> <b>
<i>XPathExpression</i>
</b>
</code>
</p>
<p>where <b>
<i>XMLFile</i>
</b> is an XML source file, <b>
<i>ContextNode</i>
</b> is the location path to the context
   node, and <b>
<i>XPathExpression</i>
</b> is an XPath expression to apply to that context node.</p> 
<table class="note">
<tr>
<td class="noteImg">
<img src="resources/note.gif" alt="note" />
</td>
<td class="noteTxt">Keep in mind that the string value returned by an XPath expression is the string value of the first node in the 
      nodeset returned by the expresssion.</td>
</tr>
</table>
<p>The XPathWrapper subdirectory contains an XML file named xml.foo (part of it appears below).</p>
<blockquote class="source">
<pre>
&lt;?xml version="1.0"?&gt;
&lt;doc&gt;
  &lt;name first="David" last="Marston"&gt;Mr. Marson&lt;/name&gt;
  &lt;name first="David" last="Bertoni"&gt;Mr. Bertoni&lt;/name&gt;
  ...
  &lt;name first="Paul" last="Dick"&gt;Mr. Dick&lt;/name&gt;
&lt;/doc&gt;
</pre>
</blockquote>
<p>You can try command lines like</p>
<p>
<code>SimpleXPathAPI foo.xml /doc name/@last</code>
</p>
<p>and</p>
<p>
<code>SimpleXPathAPI foo.xml / '//name[position()="4"]/@first'</code>
</p>
<table class="note">
<tr>
<td class="noteImg">
<img src="resources/note.gif" alt="note" />
</td>
<td class="noteTxt">If a SimpleXPathAPI argument includes characters (such as *) that the shell interprets incorrectly, enclose the argument 
      in double quotes.</td>
</tr>
</table>
<p>See also: <a href="usagepatterns.html#xpath">Working with XPath expressions</a>.</p>


<a name="simplexpathcapi">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>SimpleXPathCAPI</h3>
<p>What it does: Use the XPathEvaluator C interface to evaluate an XPath epxeression and display the string value returned 
   by the epxression.</p>
<table class="note">
<tr>
<td class="noteImg">
<img src="resources/note.gif" alt="note" />
</td>
<td class="noteTxt">Keep in mind that the string value returned by an XPath expression is the string value of the first node in the nodeset 
      returned by the epxresssion.</td>
</tr>
</table>
<p>Run this sample from the SimpleXPathCAPI subdirectory with</p>
<p>
<code>SimpleXPathCAPI <b>
<i>XMLFile</i>
</b> <b>
<i>XPathExpression</i>
</b>
</code>
</p>
<p>where <b>
<i>XMLFile</i>
</b> is an XML source file, and <b>
<i>XPathExpression</i>
</b> is an XPath expression to apply to the XML 
   source file. The SimpleXPathCAPI subdirectory contains an XML file named xml.foo identical to foo.xml in the preceding 
   example.</p>
<p>You can try command lines like</p>
<p>
<code>SimpleXPathCAPI foo.xml /doc/name[3]</code>
</p>

  
<a name="streamtransform">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>StreamTransform</h3>
<p>What it does: The StreamTransform class processes character input streams containing a stylesheet and an XML document, and
   writes the transformation output to a character output stream. This sample illustrates the process for working with stylesheets 
   and documents that you assemble in memory.</p>
<p>You can run it from the SimpleTransform subdirectory with</p>
<p>
<code>StreamTransform</code>
</p>

  
<a name="threadsafe">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>ThreadSafe</h3>
<p>What it does: Multiple threads use a single compiled stylesheet (StylesheetRoot) and DOM source tree (XalanNode) to perform
   transformations concurrently. The application tracks the progress of the threads in messages to the console, and each thread
   writes its own output file. Imagine a server application responding to multiple clients who happen to request the same
   transformation.</p>
<p>You can run it from the ThreadSafe subdirectory with</p>
<p>
<code>ThreadSafe</code>
</p>
<p>See also: <a href="usagepatterns.html#compiled">Compiling stylesheets</a>.</p>  


<a name="tracelisten">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>TraceListen</h3>
<p>What it does: Trace events during a transformation; the transformation uses birds.xsl to transform birds.xml and writes the
   output to birds.out.</p>
<p>You can run it from the TraceListen subdirectory with</p>
<p>
<code>TraceListen <b>
<i>traceFlags</i>
</b>
</code>
</p>
<p>where <b>
<i>traceFlags</i>
</b> is one or more of the following:</p>
<p>  <code>-tt</code> (Trace the templates as they are being called)</p>
<p>  <code>-tg</code> (Trace each result tree generation event)</p>
<p>  <code>-ts</code> (Trace each selection event)</p>
<p>  <code>-ttc</code> (Trace the template children as they are being processed)</p>
<p>These flags are also available in the <a href="commandline.html">command-line utility (TestXSLT)</a>.</p>
<p>The core of this example is the following fragment:</p>
<blockquote class="source">
<pre>
// Set up a diagnostic writer to be used by the TraceListener...
XalanStdOutputStream  theStdErr(cerr);
XalanOutputStreamPrintWriter  diagnosticsWriter(theStdErr);
// Make sure that error reporting, which includes any TraceListener 
// output does not throw exceptions when transcoding, since that could 
// result in an exception being thrown while another exception is active.
// In particular, characters that the TraceListener writes might not be 
// representable in the local code page.
theStdErr.setThrowTranscodeException(false);

// Set up the TraceListener...
// traceTemplates, traceTemplateChildren, traceGenerationEvent,
// and TraceSelectionEvent are booleans set by the command line.
TraceListenerDefault theTraceListener(
        diagnosticsWriter,
        traceTemplates,
        traceTemplateChildren,
        traceGenerationEvent,
        traceSelectionEvent);

// Add the TraceListener to the XSLT processor...
theProcessor.setTraceSelects(traceSelectionEvent);
theProcessor.addTraceListener(&amp;theTraceListener);

// Perform the transformation
....
</pre>
</blockquote>
  
    
<a name="transformtoxercesdom">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>TransformToXercesDOM</h3>
<p>What it does: Performs a simple transformation but puts the result in a Xerces DOMDocument</p>
<p>Run this sample from the TransformToXercesDOM subdirectory with</p>
<p>
<code>TransformToXercesDOM <b>
<i>XMLFile</i>
</b> <b>
<i>XSLFile</i>
</b>
</code>
</p>
<p>where <b>
<i>XMLFile</i>
</b> is a source XML file, and <b>
<i>XSLFile</i>
</b> is the XLST input file.  The program will use 
   <b>
<i>XSLFile</i>
</b> to transform the input100 84178    0 28404  100 55774   297k   583k --:--:-- --:--:-- --:--:--  585k
 file <b>
<i>XMLFile</i>
</b> using Xerces DOM as the output destination.</p>	  
<p>See the FormatterToXercesDOM usage in the sample code.</p>


<a name="usestylesheetparam">‌</a>    
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>UseStylesheetParam</h3>

<p>What it does: Performs a transformation using top-level stylesheet parameters.  There are three supported types of parameters.  One is a text string.  A second is a number of type double.  A nodeset or parsed document can also be used.</p>

<p>You can run it from the UseStylesheetParam subdirectory with</p>

<p>
<code>UseStylesheetParam <b>
<i>xmlfile</i>
</b> <b>
<i>stylesheet</i>
</b> <b>
<i>outfile</i>
</b> [options]</code>
</p>

<p>where the options are:</p>

<p>
<code>    -s key "'String-Value'"</code>
<br />
<code>    -n key Number</code>
<br />
<code>    -d key "Document-URL"</code>
</p>

<p>The files used by the sample program and the top-level parameter nodesets for this illustration are to be in working directory in which the sample program runs.</p>

<p>Using the sample program:</p>

<p>
<code>UseStylesheetParam foo.xml foo.xslt foo.out \<br />
    -s stringA "'This is a test string value'" \<br />
    -n numberA  123.012345 \<br />
    -d parmA "parmA.xml" \<br />
    -d parmB "parmB.xml"</code>
</p>

<p>The <b>
<i>parmA.xml</i>
</b> and <b>
<i>parmB.xml</i>
</b> are parsed and converted to nodesets.  The stylesheet <b>
<i>foo.xslt</i>
</b> merges the contents of <b>
<i>foo.xml</i>
</b> and the parameters into the <b>
<i>foo.out</i>
</b> file.</p>

<p>The source sample is implemented in C++.  Another example is implemented in 'C' using the XalanCAPI library <b>
<i>TestCAPIparm.c</i>
</b>.  The usage interface for both is the same.</p>

<p>See also: <a href="usagepatterns.html#params">Setting stylesheet parameters</a>.</p>


<a name="xalantransform">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>XalanTransform</h3>
<p>What it does: XalanTransform uses the XalanTransformer class and the associated C++ API to apply an XSL stylesheet 
   file to an XML document file and write the transformation output to either an output file or to a stream. XalanTransform 
   takes command-line arguments for the XML document to be transformed, the XSL stylesheet to apply, and an optional output 
   file argument. If you omit the third argument, XalanTransform writes the transformation output to a stream that is sent to 
   standard out (the console).</p>
<p>You can run XalanTransform from the XalanTransform subdirectory with</p>
<p>
<code>XalanTransform foo.xml foo.xsl foo.out</code>
</p>
<p>Omit the third argument to write the transformation result to the console. See also: <a href="usagepatterns.html#xalantransformer">Using the XalanTransformer class.</a>.</p>

  
<a name="xalantransformercallback">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>XalanTransformerCallback</h3>
<p>What it does: Return transformation output in blocks to a callback function, which writes the output to a file.
   This sample illustrates the use of a callback function to incrementally process a transformation result, that is to begin
   working with the transformation result before the transformation has been completed. See <a href="usagepatterns.html#incremental">Processing output incrementally</a>.</p>
<p>You can run it from the XalanTransformerCallback subdirectory with</p>
<p>
<code>XalanTransformerCallback foo.xml foo.xsl [foo.out]</code>
</p>
<table class="note">
<tr>
<td class="noteImg">
<img src="resources/note.gif" alt="note" />
</td>
<td class="noteTxt">If you omit the third argument, the transformation result is written to the console.</td>
</tr>
</table>

  
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
</div>
<div id="footer">Copyright © 1999-2012 The Apache Software Foundation<br />Apache, Xalan, and the Feather logo are trademarks of The Apache Software Foundation<div class="small">Web Page created on - </div>
</div>
</body>
</html>

../../extra/xdocs/secureweb.xml
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0HTTP/1.1 100 Continue

HTTP/1.1 200 OK
Date: Mon, 17 Apr 2017 01:22:24 GMT
Server: Apache/2.4.10 (Debian)
Vary: Accept-Encoding
Transfer-Encoding: chunked
Content-Type: text/plain; charset=utf-8


<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>ASF: XML Security Overview</title>
<meta http-equiv="content-type" content="text/html; charset=UTF-8" />
<meta http-equiv="Content-Style-Type" content="text/css" />
<link rel="stylesheet" type="text/css" href="resources/apache-xalan.css" />
</head>
<!--
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements. See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership. The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the  "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 -->
<body>
<div id="title">
<table class="HdrTitle">
<tbody>
<tr>
<th rowspan="2">
<a href="http://www.apache.org">
<img alt="Trademark Logo" src="resources/asf_logo.png" width="144" height="75" />
</a>
</th>
<th text-align="center" width="75%">
<a href="index.html" />
</th>
</tr>
<tr>
<td valign="middle">XML Security Overview</td>
</tr>
</tbody>
</table>
<table class="HdrButtons" align="center" border="1">
<tbody>
<tr>
<td>
<a href="http://www.apache.org">Apache Foundation</a>
</td>
<td>
<a href="http://xalan.apache.org">Xalan Project</a>
</td>
<td>
<a href="http://xerces.apache.org">Xerces Project</a>
</td>
<td>
<a href="http://www.w3.org/TR">Web Consortium</a>
</td>
<td>
<a href="http://www.oasis-open.org/standards">Oasis Open</a>
</td>
</tr>
</tbody>
</table>
</div>
<div id="navLeft">
<ul />
</div>
<div id="content">
<h2>XML Security Overview</h2>
<ul>
<li>
<a href="#xsov_xmlParser">XML Parser Threats</a>
</li>
<li>
<a href="#xsov_resolvEntity">Resolving External Entities</a>
</li>
<li>
<a href="#xsov_trustEntity">Trusted External Entities</a>
</li>
<li>
<a href="#xsov_piThreat">Processing Instruction (PI) Threats</a>
</li>
<li>
<a href="#xsov_soapThreat">SOAP Simple Object Access Protocol</a>
</li>
<li>
<a href="#xsov_wsdlThreat">WSDL Web Service Description Language</a>
</li>
<li>
<a href="#xsov_uriThreat">URI Uniform Resource Identifiers</a>
</li>
<li>
<a href="#xsov_urlThreat">URL Uniform Resource Locators</a>
</li>
<li>
<a href="#xsov_malUtfStrings">Malformed UTF-8 and UTF-16 Strings</a>
</li>
<li>
<a href="#xsov_canonicalXML">Canonical XML Issues</a>
</li>
<li>
<a href="#xsov_xhtmlWorkaround">XHTML Output Mode - Workaround</a>
</li>
</ul>

<br />
<p>
<b>This document goes well beyond XSLT. Use it as a general reference.</b>
</p>
<p>There are numerous security issues and problems that are 
endemic to the XML architecture. 
I will try to identify some of the most common issues and threats 
and describe some mitigation strategies.
</p>
<p>The biggest threat issue is a matter of trust. 
How well do you trust your sources of XML data? 
What are the tools that can help increase the trust?
</p>
<p>Most Web Service communications uses HTTP over standard TCP ports. 
The HTTP protocol on standard TCP ports has free access through business firewalls. 
How well do your proxy servers handle the Web Service security issues 
required for your applications?
</p>
<p>How well are your resource identifiers protected? 
How well do your applications cope with resource identifier spoofing? 
Can your resource identifiers be trusted by outside clients? 
Can you trust the credentials of your clients?
</p>
<p>Will the SOAP interface for your Web Service send error messages 
to an untrusted Web Service address?
</p>
<p>Is your WSDL interface description file readily available for download, 
thus enabling persons with malicious intent to create targeted attacks on your Web Services?
</p>
<p>Can you trust the client credentials that use your Web Service application?
</p>
<p>There are numerous security issues that are not directly involved in 
the markup of XML or its processing. 
These issues relate to infrastructure.
</p>
<p>Can you trust your DNS (Domain Name Service) and reduce its vulnerability to hijacking?
</p>
<p>Are your web servers hardened against known application vulnerabilities?
</p>
<p>Are your applications hardened against 
cross site scripting and SQL injection?
</p>
<p>Can your client applications trust the scripts 
that are transmitted as web pages?
</p>
<p>Can your web server trust the scripts that are submitted?
</p>
<p>Is application data sanitized before being consumed by your applications?
</p>

<a name="xsov_xmlParser">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>XML Parser Threats</h3>

<p>This list will help you find the XML threat vectors that need to be addressed.  
Some vectors cannot be easily resolved.
</p>
<ul>
<li>Resolving External Entities</li>
<li>Implicit Trust of Internal DTD</li>
<li>Resource Identifier Spoofing</li>
<li>Malformed UTF-8 and UTF-16</li>
<li>Secure the trust of external DTD descriptions</li>
<li>Secure the trust of external Schema definitions</li>
<li>Secure the trust of entity import and include constructs</li>
<li>Configuration of Entity Resolver Catalogs</li>
</ul>


<a name="xsov_resolvEntity">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>Resolving External Entities</h3>

<p>The XML1.0 and XML1.1 standards specify a <code>DOCTYPE</code> format. 
The processing may uncover significant entity resolver deficiencies.
</p>

<p>
<code>&lt;!DOCTYPE name PUBLIC "public-id" "system-id" [internal-DTD]&gt;</code>
<br />
<code>&lt;!DOCTYPE name SYSTEM "system-id" [internal-DTD]&gt;</code>
</p>
<p>XML Parsers MUST process the <code>[internal-DTD]</code> if it exists.
</p>
<p>XML Parsers MAY process the external <code>"system-id"</code> if it can be found.
</p>
<p>XML Parsers MAY process the external <code>"public-id"</code> if it can be found.
</p>
<p>XML Parsers MAY prefer either the <code>"public-id"</code> or <code>"system-id"</code> 
if both are specified.
</p>
<p>XML Parsers MAY ignore both the <code>"public-id"</code> and <code>"system-id"</code> 
if present.
</p>
<p>Declaring a parameter entity notation <code>"%entity;"</code> 
in the <code>[internal-DTD]</code> and expanding the content within the 
<code>[internal-DTD]</code> will force the XML parser to import the content 
referenced by the <code>"%entity;"</code> notation.
</p>
<p>Declaring a general entity notation <code>"&amp;entity;"</code> in the 
<code>[internal-DTD]</code> and expanding the content within the body of 
the XML document will force the XML parser to import the content referenced 
by the <code>"&amp;entity"</code> notation.
</p>
<p>The default method of resolving external entities is by resolving entity 
name strings relative to DNS named hosts and/or path names relative to the 
local computer system.  When receiving XML documents from an outside source, 
these entity reference locations may be unreachable, unreliable, or untrusted.
</p>
<p>Web Service SOAP XML documents MUST NOT have <code>DOCTYPE</code> definitions. 
SOAP processors should not process DOCTYPE definitions. 
The conformance is implementation dependent.
</p>
<p>
<a href="http://www.w3.org/TR/soap">http://www.w3.org/TR/soap</a>
</p>


<a name="xsov_trustEntity">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>Trusted External Entities</h3>

<p>The <b>
<i>OASIS XML Catalogs</i>
</b> specification, if implemented by an application, 
can specify a set of external entities that can be trusted by mapping known 
identifiers to local or trusted resources.  A secure application should 
not trust entity identifiers whose resources cannot be localized and secured.
</p>
<p>
<a href="http://www.oasis-open.org/committees/entity">http://www.oasis-open.org/committees/entity</a>
</p>
<p>A similar method can be designed specifically for each application.
</p>
<p>A trusted application may need to pre-screen any entity definitions in XML 
before passing the information into the core of the application.
</p>
<p>A trusted application should install some type of entity resolving catalog 
or database that can be trusted.
</p>


<a name="xsov_piThreat">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>Processing Instruction (PI) Threats</h3>

<p>Processing instructions are a mechanism to send specific information 
into an application.  A common processing instruction is a 
stylesheet declaration.  
This information is part of an XML document and comes usually 
after the XML header and before the root element.
</p>
<p>A stylesheet declaration may cause an application to look for an 
untrusted XSLT stylesheet to use for transformation of the 
following root element.  A standard exists for associating style sheets with XML documents.
</p>
<p>
<a href="http://www.w3.org/TR/xml-stylesheet">http://www.w3.org/TR/xml-stylesheet</a>
</p>
<p>Examples in the xml-stylesheet recommendation describes how to use the 
processing instruction to associate CSS stylesheets for XHTML.  
Applications that use XSLT transformations will interpret the 
xml-stylesheet processing instruction as the location of a 
XSLT transformation stylesheet.
</p>
<p>As more processing instructions become standardized and in common use, 
their threat of misuse increases.
</p>


<a name="xsov_soapThreat">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>SOAP Simple Object Access Protocol</h3>

<p>The SOAP specification explicitly forbids the transport of 
DOCTYPE definitions and PI processing instructions.
</p>
<p>The SOAP specifies a transport envelope that encapsulates 
an XML message for transport. SOAP can also handle various 
transmission status indicators implying confirmation of delivery, 
error messages, and queue status messages. 
SOAP transports can be loosely coupled and intermittent. 
SOAP is used extensively in the design and deployment of Web Service architectures. 
A companion Web Service specification is WSDL, the Web Service Definition Language.
</p>
<p>The SOAP protocol as widely deployed by Microsoft and other vendors 
is based on specifications that predate the adoption 
by the <a href="http://www.w3.org">World Wide Web Consortium (W3C)</a>. 
SOAP is not based on Microsoft technology. 
It is an open standard drafted by UserLand, Ariba, Commerce One, Compaq, 
Developmentor, HP, IBM, IONA, Lotus, Microsoft, and SAP. 
<a href="http://www.w3.org/TR/2000/NOTE-SOAP-20000508">SOAP 1.1</a> 
was presented to the W3C in May 2000 as an official Internet standard. 
</p>
<p>The original <a href="http://www.w3.org/TR/soap11">SOAP 1.1</a> standard 
is associated with this URI namespace prefix.
</p>
<p>
<code>http://schemas.xmlsoap.org/soap/</code>
</p>
<p>There are significant changes in naming conventions since SOAP 1.1 
was adopted by W3C as a recommended standard. 
The current iteration is <a href="http://www.w3.org/TR/soap12">SOAP 1.2</a> 
and is associated with this URI namespace prefix.
</p>
<p>
<code>http://www.w3.org/2003/05</code>
</p>
<p>The basic security threat to the SOAP architecture is 
the ability to spoof Web Service addresses and telling a 
SOAP server to respond to a rogue Web Service address 
when a <code>mustUnderstand</code> attribute is processed 
and an error indication is raised.
</p>
<p>Other intelligence that can be obtained might be the 
location of a public accessible WSDL definition 
of the messages being transported by SOAP, 
thus allowing additional malware attacks to be automatically generated.
</p>


<a name="xsov_wsdlThreat">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>WSDL Web Service Description Language</h3>

<p>WSDL is known as the Web Service Description Language. 
The WSDL XML document is a an interface description that can be transformed 
into various programming languages. 
Such transformed interface descriptions are recognized as 
Java Interfaces and C++ Virtual Classes.
</p>
<p>The original <a href="http://www.w3.org/TR/wsdl">WSDL 1.1</a> standard 
is associated with this URI namespace prefix.
</p>
<p>
<code>http://schemas.xmlsoap.org/wsdl/</code>
</p>
<p>The current <a href="http://www.w3.org/TR/wsdl20">WSDL 2.0</a> standard 
is maintained by W3C in their namespace with prefix.
</p>
<p>
<code>http://www.w3.org/</code>
</p>
<p>The WSDL can provide a template for generating a compliant Web Service systems 
for multiple and hetrogeneous platforms.
</p>
<p>A WSDL document that can benefit developers can also be used by malware 
and hackers to taylor specific threats against targeted Web Services.
</p>
<p>The SOA (Service Oriented Architecure), 
SAAS (Software As A Service), 
PAAS (Platform As A Service) are families of 
Web Services used as interfaces into what is 
generally known as Cloud Computing.
</p>


<a name="xsov_uriThreat">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>URI Uniform Resource Identifiers</h3>

<p>The URI does not need to specify the location of a resource. 
It merely provides a resource name. A catalog, database, 
or other mechanism is used to map URIs to resource locations.
</p>
<p>The security issue here is that most URIs are used with a 
DNS (Domain Name Service) to find a host and path to a resource. 
The URI is then treated as a URL (Uniform Resource Locator).
</p>
<p>The mitigation of these threats requires diligence of the 
application architects to ensure an appropriate level of trust 
for the URIs and URLs used in their applications.
</p>
<p>The transmission media is inherently untrusted. 
Often SOAP bindings and HTTP transports are used. 
Web Service addressing is readily spoofed.
</p>


<a name="xsov_urlThreat">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>URL Uniform Resource Locators</h3>

<p>See: <a href="#xsov_uriThreat">URI Uniform Resource Identifiers</a>
</p>


<a name="xsov_malUtfStrings">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>Malformed UTF-8 and UTF-16 Strings</h3>

<p>Public Key Infrastructure (X.509) certificates are leased from a 
certificate authority or are self-signed. 
The distinguished names and parts thereof are usually rendered in unicode.
</p>
<p>The value of zero is not a valid Unicode character. 
It is possible to create non-zero UTF-8 and UTF-16 sequences that equate to zero, 
which is not allowed. 
Some rogue hackers have successfully obtained wild-card PKI (X.509) certificates 
by prepending a UTF-8(zero) in a distinguished name when applying for a certificate. 
Such a certificate could be used to successfully sign anything.
</p>
<p>Applications should not blindly accept UTF-8 and UTF-16 strings 
without verifying the proper encoding for those strings. 
Contents that equate to bad Unicode character values should be denied.
</p>


<a name="xsov_canonicalXML">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>Canonical XML Issues</h3>

<p>Canonical XML is a tranformation of an XML document into a 
canonical form useful for signing. 
This is used in some Web Service security implementations.
</p>
<p>There are several areas where Canonical XML will create XML documents 
that have severe application problems.
</p>
<p>The number values are rendered in Base-10 as decimal fractions. 
The computations performed by computers are usually in Base-2 floating point arithmetic. 
You therefore have truncation or roundoff issues when converting between 
decimal fractions and Base-2 fractions.
</p>
<p>The canonical process may collapse whitespace and transform 
multi-character line endings to single-character line endings. 
When whitespace is significant, the canonical issues for signing can cause problems.
</p>
<p>It is possible to create XHTML documents that will not work with some browsers. 
The empty &100 66397    0 18662  100 47735   198k   508k --:--:-- --:--:-- --:--:--  512k
lt;a/&gt; anchor element is not allowed by many browsers, 
therefore &lt;a&gt;&lt;/a&gt; is required. 
A standard XML canonical process may collapse elements with no content into empty elements. 
The empty paragraph&lt;p/&gt; is disallowed.  The &lt;p&gt;&lt;/p&gt; is supported.
</p>
<p>The World Wide Web Consortium (W3C) has additional detailed discussion of 
<a href="http://www.w3.org/TR/C14N-issues/">canonicalization issues</a>.
</p>


<a name="xsov_xhtmlWorkaround">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>XHTML Output Mode - Workaround</h3>

<p>The Xalan-C/C++ library currently has no XHTML output mode.
Since XHTML is to be well-formed XML, the desire is to use the XML output method.
</p>
<p>XHTML is based on HTML version 4.
</p>
<p>Empty elements declared by HTML-4 should have a space before the 
trailing '/&gt;' markup (i.e. &lt;br /&gt; and &lt;hr /&gt;). 
XML output mode does not normally have this space when using 
the &lt;xsl:element name="br" /&gt; in your stylesheet. 
Most modern browsers are ok with no space, but viewing the 
browser source shows a warning condition.
</p>
<p>Non-empty elements declared by HTML-4 should not be rendered as empty XML elements. 
If there is no content, the elements should be rendered with both a start-tag and end-tag 
(i.e. &lt;a name="xxx"&gt;&lt;/a&gt;) instead of an XML empty-element. 
XSLT processors usually create an empty-element 
(i.e. &lt;a name="xxx"/&gt;) when the element being defined has no content 
other than attributes.
</p>
<p>For XSLT processors creating XML documents for XHTML, 
you can create what looks like an element with no content by including 
the &amp;#8204; character 
(a zero-width non-joining character often known as &amp;zwnj;) 
as the element text content. 
This also allows transitional browsers the ability to find the end tag.
</p>
<p>
<blockquote class="source">
<pre>  DTD    &lt;!ENTITY zwnj    "&amp;#8204;"&gt;

  &lt;a name="marker"&gt;&amp;zwnj;&lt;/a&gt;</pre>
</blockquote>
</p>
<p>Transitional XHTML is not usually well-formed XML. 
It becomes a mix of HTML version 4 and XML markup. 
Strict XHTML is required to be well-formed XML.
</p>

<p align="right" size="2">
<a href="#content">(top)</a>
</p>
</div>
<div id="footer">Copyright © 1999-2012 The Apache Software Foundation<br />Apache, Xalan, and the Feather logo are trademarks of The Apache Software Foundation<div class="small">Web Page created on - </div>
</div>
</body>
</html>

../../extra/xdocs/test-faqs.xml
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0HTTP/1.1 100 Continue

HTTP/1.1 200 OK
Date: Mon, 17 Apr 2017 01:22:24 GMT
Server: Apache/2.4.10 (Debian)
Vary: Accept-Encoding
Transfer-Encoding: chunked
Content-Type: text/plain; charset=utf-8


<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>ASF: Frequently asked questions</title>
<meta http-equiv="content-type" content="text/html; charset=UTF-8" />
<meta http-equiv="Content-Style-Type" content="text/css" />
<link rel="stylesheet" type="text/css" href="resources/apache-xalan.css" />
</head>
<!--
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements. See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership. The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the  "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 -->
<body>
<div id="title">
<table class="HdrTitle">
<tbody>
<tr>
<th rowspan="2">
<a href="http://www.apache.org">
<img alt="Trademark Logo" src="resources/asf_logo.png" width="144" height="75" />
</a>
</th>
<th text-align="center" width="75%">
<a href="index.html" />
</th>
</tr>
<tr>
<td valign="middle">Frequently asked questions</td>
</tr>
</tbody>
</table>
<table class="HdrButtons" align="center" border="1">
<tbody>
<tr>
<td>
<a href="http://www.apache.org">Apache Foundation</a>
</td>
<td>
<a href="http://xalan.apache.org">Xalan Project</a>
</td>
<td>
<a href="http://xerces.apache.org">Xerces Project</a>
</td>
<td>
<a href="http://www.w3.org/TR">Web Consortium</a>
</td>
<td>
<a href="http://www.oasis-open.org/standards">Oasis Open</a>
</td>
</tr>
</tbody>
</table>
</div>
<div id="navLeft">
<ul />
</div>
<div id="content">
<h2 class="faqSubHead">Questions</h2>
<h3>Faq-Group 1</h3>
<ol start="1">
<li>
<a href="#faq-1">Faq #1</a>
</li>
<li>
<a href="#faq-2">Faq #2</a>
</li>
<li>
<a href="#faq-3">Faq #3</a>
</li>
</ol>
<h3>Faq-Group 2</h3>
<ol start="4">
<li>
<a href="#faq-4">Faq #4</a>
</li>
<li>
<a href="#faq-5">Faq #5</a>
</li>
</ol>
<h3>Faq-Group 3</h3>
<ol start="6">
<li>
<a href="#faq-6">Faq #6 with Multiple Answers</a>
</li>
</ol>
<h3>Faq-Group 4 = Empty</h3>
<h3>Faq-Group 5</h3>
<ol start="7">
<li>
<a href="#faq-7">Faq #7</a>
</li>
<li>
<a href="#faq-8">Faq #8</a>
</li>
<li>
<a href="#faq-9">Faq #9 with no Answer</a>
</li>
<li>
<a href="#faq-10">Faq #10 with no Question</a>
</li>
<li>
<a href="#faq-11">Faq #11</a>
</li>
</ol>
<h3>Faq-Group 6</h3>
<ol start="12">
<li>
<a href="#faq-12">Faq #12</a>
</li>
<li>
<a href="#faq-13">Faq #13</a>
</li>
</ol>
<h2 class="faqSubHead">Answers</h2>
<h3 id="faq-1" class="faqTitle">1. Faq #1</h3>
<div class="faqQuestion">Test Question #1</div>
<br />
<hr />
<div class="faqAnswer">
<p>Test Answer #1</p>
</div>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3 id="faq-2" class="faqTitle">2. Faq #2</h3>
<div class="faqQuestion">Test Question #2</div>
<br />
<hr />
<div class="faqAnswer">
<p>Test Answer #2</p>
</div>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3 id="faq-3" class="faqTitle">3. Faq #3</h3>
<div class="faqQuestion">Test Question #3</div>
<br />
<hr />
<div class="faqAnswer">
<p>Test Answer #3</p>
</div>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3 id="faq-4" class="faqTitle">4. Faq #4</h3>
<div class="faqQuestion">Test Question #4</div>
<br />
<hr />
<div class="faqAnswer">
<p>Test Answer #4</p>
</div>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3 id="faq-5" class="faqTitle">5.100 38800    0  6148  100 32652  58361   302k --:--:-- --:--:-- --:--:--  303k
 Faq #5</h3>
<div class="faqQuestion">Test Question #5</div>
<br />
<hr />
<div class="faqAnswer">
<p>Test Answer #5</p>
</div>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3 id="faq-6" class="faqTitle">6. Faq #6 with Multiple Answers</h3>
<div class="faqQuestion">Test Question #6</div>
<br />
<hr />
<div class="faqAnswer">
<p>Test Answer #6</p>
</div>
<br />
<hr />
<div class="faqAnswer">
<p>This item has more than one answer</p>
</div>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3 id="faq-7" class="faqTitle">7. Faq #7</h3>
<div class="faqQuestion">Test Question #7</div>
<br />
<hr />
<div class="faqAnswer">
<p>Test Answer #7</p>
</div>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3 id="faq-8" class="faqTitle">8. Faq #8</h3>
<div class="faqQuestion">Test Question #8</div>
<br />
<hr />
<div class="faqAnswer">
<p>Test Answer #8</p>
</div>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3 id="faq-9" class="faqTitle">9. Faq #9 with no Answer</h3>
<div class="faqQuestion">Test Question #9</div>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3 id="faq-10" class="faqTitle">10. Faq #10 with no Question</h3>
<br />
<hr />
<div class="faqAnswer">
<p>Test Answer #10</p>
</div>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3 id="faq-11" class="faqTitle">11. Faq #11</h3>
<div class="faqQuestion">Test Question #11</div>
<br />
<hr />
<div class="faqAnswer">
<p>Test Answer #11</p>
</div>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3 id="faq-12" class="faqTitle">12. Faq #12</h3>
<div class="faqQuestion">Test Question #12</div>
<br />
<hr />
<div class="faqAnswer">
<p>Test Answer #12</p>
</div>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3 id="faq-13" class="faqTitle">13. Faq #13</h3>
<div class="faqQuestion">Test Question #13</div>
<br />
<hr />
<div class="faqAnswer">
<p>Test Answer #13</p>
</div>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
</div>
<div id="footer">Copyright © 1999-2012 The Apache Software Foundation<br />Apache, Xalan, and the Feather logo are trademarks of The Apache Software Foundation<div class="small">Web Page created on - </div>
</div>
</body>
</html>

../../extra/xdocs/usagepatterns.xml
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0HTTP/1.1 100 Continue

HTTP/1.1 200 OK
Date: Mon, 17 Apr 2017 01:22:24 GMT
Server: Apache/2.4.10 (Debian)
Vary: Accept-Encoding
Transfer-Encoding: chunked
Content-Type: text/plain; charset=utf-8


<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html>
<head>
<title>ASF: Xalan-C++ Basic usage patterns</title>
<meta http-equiv="content-type" content="text/html; charset=UTF-8" />
<meta http-equiv="Content-Style-Type" content="text/css" />
<link rel="stylesheet" type="text/css" href="resources/apache-xalan.css" />
</head>
<!--
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements. See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership. The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the  "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 -->
<body>
<div id="title">
<table class="HdrTitle">
<tbody>
<tr>
<th rowspan="2">
<a href="http://www.apache.org">
<img alt="Trademark Logo" src="resources/asf_logo.png" width="144" height="75" />
</a>
</th>
<th text-align="center" width="75%">
<a href="index.html" />
</th>
</tr>
<tr>
<td valign="middle">Xalan-C++ Basic usage patterns</td>
</tr>
</tbody>
</table>
<table class="HdrButtons" align="center" border="1">
<tbody>
<tr>
<td>
<a href="http://www.apache.org">Apache Foundation</a>
</td>
<td>
<a href="http://xalan.apache.org">Xalan Project</a>
</td>
<td>
<a href="http://xerces.apache.org">Xerces Project</a>
</td>
<td>
<a href="http://www.w3.org/TR">Web Consortium</a>
</td>
<td>
<a href="http://www.oasis-open.org/standards">Oasis Open</a>
</td>
</tr>
</tbody>
</table>
</div>
<div id="navLeft">
<ul />
</div>
<div id="content">
<h2>Xalan-C++ Basic usage patterns</h2>
<ul>
  <li>
<a href="#intro">Introduction</a>
</li>
  <li>
<a href="#xalantransformer">Basic usage pattern with the XalanTransformer C++ API</a>
</li>
  <li>
<a href="#stylepi">Using a stylesheet processing instruction</a>
</li>
  <li>
<a href="#params">Setting stylesheet parameters</a>
</li>
  <li>
<a href="#incremental">Processing output incrementally</a>
</li>
  <li>
<a href="#compiled">Performing a series of transformations</a>
</li>
  <li>
<a href="#dom">Working with DOM input and output</a>
</li>
  <li>
<a href="#xercesdomwrapperparsedsource">Using a Xerces DOM as the source for a Xalan transformation</a>
</li>
  <li>
<a href="#xpath">Working with XPath expressions</a>
</li>
  <li>
<a href="#tracelistener">Using the TraceListener</a>
</li>
  <li>
<a href="#icu">Using the International Components for Unicode (ICU)</a>
</li>
  <li>
<a href="#capi">Basic usage pattern with the XalanTransformer C API</a>
</li>
  <li>
<a href="#cvar">Variations with the XalanTransformer C API</a>
</li>
  <li>See also: <a href="extensions.html">Creating and using extension functions</a>
</li>
</ul>
  
<a name="intro">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>Introduction</h3>  
<p>To perform a transformation, use one of the <a href="apiDocs/classXalanTransformer.html">XalanTransformer
   </a> transform() methods. The transformation requires an XML source document and an XSL stylesheet. Both of these objects 
   may be represented by instances of <a href="apiDocs/classXSLTInputSource.html">XSLTInputSource </a>. You can construct 
   an XSLTInputSource with a string (the system ID for a file or URI), an input stream, or a DOM.</p>
<p>If you are using an XSL stylesheet to perform a series of transformations, you can improve performance by calling transform() 
   with a compiled stylesheet, an instance of <a href="apiDocs/classXalanCompiledStylesheet.html">XalanCompiledStylesheet</a>. 
   If you are transforming an XML source more than once, you should call transform() with a parsed XML source, an instance of 
   <a href="apiDocs/classXalanParsedSource.html">XalanParsedSource</a>. See <a href="#compiled">Performing a series of 
   transformations</a>.</p>
<p>If you XML source document contains a stylesheet Processing Instruction (PI), you do not need to include a stylesheet object 
  when you call transform().</p>
<p>The transformation output is represented by an <a href="apiDocs/classXSLTResultTarget.html">XSLTResultTarget</a>, which 
   you can set up to refer to an output stream, the system ID for a file or URI, or a Formatter for one of the various styles of 
   DOM output.</p>
<p>For detailed API documentation, see <a href="apiDocs/index.html">Xalan-C++ API</a>. For an overview of the command-line 
   utility, see <a href="commandline.html">Command-Line Utility</a>.</p>


<a name="xalantransformer">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>Basic usage patten with the XalanTransformer C++ API</h3>
<p>Using <a href="apiDocs/classXalanTransformer.html">XalanTransformer</a> and the C++ API, you can perform one or more 
   transformations as described in the following steps.</p>
<table class="note">
<tr>
<td class="noteImg">
<img src="resources/note.gif" alt="note" />
</td>
<td class="noteTxt">For a working sample that illustrates these steps, see the <a href="samples.html#xalantransform">XalanTransform</a> 
      sample.</td>
</tr>
</table>
      
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h4>1. Include the required header files.</h4>
<p>Always start with xalanc/Include/PlatformDefinitions.hpp, the Xalan-C++ base header file. Also include xercesc/util/PlatformUtils.hpp, 
   xalanc/XalanTransformer/XalanTransformer.hpp, and any other header files your particular application requires.</p>
<blockquote class="source">
<pre>
#include &lt;xalanc/Include/PlatformDefinitions.hpp&gt;
#include &lt;xercesc/util/PlatformUtils.hpp&gt;
#include &lt;xalanc/XalanTransformer/XalanTransformer.hpp&gt;
...
</pre>
</blockquote>


<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h4>2. Define namespaces</h4>
<p>As of version 1.5, Xalan-C++ now uses C++ namespaces for those platforms which support them.  A number of macros are provided to 
   make using the Xalan-C++ (and Xerces-C++) namespaces easier.</p>
<p>In the following example, the <b>XALAN_USING_XERCES</b> and <b>XALAN_USING_XALAN</b> macros are used to declare that the 
   program is using <b>XMLPlatformUtils</b> and <b>XalanTransformer</b> from the Xerces-C++ and Xalan-C++ namespaces respectively.</p>
<blockquote class="source">
<pre>
XALAN_USING_XERCES(XMLPlatformUtils)
XALAN_USING_XALAN(XalanTransformer)
</pre>
</blockquote>

<p>These macros can be used immediately after the included header files (for global applicability in a given source file) or within 
   functions and methods for local applicability.</p>
<table class="note">
<tr>
<td class="noteImg">
<img src="resources/note.gif" alt="note" />
</td>
<td class="noteTxt">Whilst you can use the standard C++ namespace syntax directly, the Xerces-C++ and Xalan-C++ namespaces are linked to the version 
      number.  For example, the Xalan namespace is currently <b>xalanc_1_11</b>.  The macros will automatically take care of this 
      when code is re-compiled against a new version of the libraries.  Using the namespaces directly will require each namespace 
      related statement be updated by hand.</td>
</tr>
</table>


<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h4>3. Initialize Xerces and Xalan.</h4>
<p>Use the static initializers to initialize the Xalan-C++ and Xerces-C++ platforms. You must initialize Xerces-C++ once per process. You 
   may initialize and terminate Xalan-C++ multiple times, but this is not recommended: it is inefficient and is not thread safe.</p>  
<blockquote class="source">
<pre>
XMLPlatformUtils::Initialize();
XalanTransformer::initialize();
</pre>
</blockquote>


<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h4>4. Create a XalanTransformer.</h4>
<blockquote class="source">
<pre>
XalanTransformer theXalanTransformer;
</pre>
</blockquote>


<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h4>5. Perform each transformation.</h4>
<p>You can explicitly instantiate <a href="apiDocs/classXSLTInputSource.html">XSLTInputSource</a> objects for the XML 
   source document and XSL stylesheet, and an <a href="apiDocs/classXSLTResultTarget.html">XSLTResultTarget</a> object 
   for the output, and then call <a href="apiDocs/classXalanTransformer.html">XalanTransformer</a> transform() with those 
   objects as parameters. For example:</p>
<blockquote class="source">
<pre>
XSLTInputSource xmlIn("foo.xml");
XSLTInputSource xslIn("foo.xsl");
XSLTResultTarget xmlOut("foo-out.xml");
int theResult =
    theXalanTransformer.transform(xmlIn,xslIn,xmlOut)
</pre>
</blockquote>

<p>Alternatively, you can call transform() with the strings (system identifiers), streams, and/or DOMs that the compiler needs 
   to implicitly construct the <a href="apiDocs/classXSLTInputSource.html">XSLTInputSource</a> and 
   <a href="apiDocs/classXSLTResultTarget.html">XSLTResultTarget</a> objects. For example:</p>
<blockquote class="source">
<pre>
const char* xmlIn = "foo.xml";
const char* xslIn = "foo.xsl";
const char* xmlOut = "foo-out.xml";
int theResult =
    theXalanTransformer.transform(xmlIn,xslIn,xmlOut)
</pre>
</blockquote>
<p>Keep in mind that <a href="apiDocs/classXSLTInputSource.html">XSLTInputSource</a> and 
   <a href="apiDocs/classXSLTResultTarget.html">XSLTResultTarget</a> provide a variety of single-argument constructors that 
   you can use in this manner:</p>
<ul>
  <li>
<code>XSLTInputSource(const char* systemID);</code>
</li>
  <li>
<code>XSLTInputSource(const XMLCh* systemID);//Unicode chars</code>
</li>
  <li>
<code>XSLTInputSource(istream* stream);</code>
</li>
  <li>
<code>XSLTInputSource(XalanNode* node);</code>
<br />
<br />
</li>
  <li>
<code>XSLTResultTarget(char* fileName);</code>
</li>
  <li>
<code>XSLTResultTarget(XalanDOMString&amp; fileName);</code>
</li>
  <li>
<code>XSLTResultTarget(ostream* stream);</code>
</li>
  <li>
<code>XSLTResultTarget(ostream&amp; stream);</code>
</li>  
  <li>
<code>XSLTResultTarget(Writer* characterStream);</code>
</li>
  <li>
<code>XSLTResultTarget(XalanDocument* document);</code>
</li>
  <li>
<code>XSLTResultTarget(XalanDocumentFragment* documentFragment);</code>
</li>
  <li>
<code>XSLTResultTarget(XalanElement* element);</code>
</li>
  <li>
<code>XSLTResultTarget(FormatterListener&amp; flistener);</code>
</li>
</ul>
<table class="note">
<tr>
<td class="noteImg">
<img src="resources/note.gif" alt="note" />
</td>
<td class="noteTxt">Each transform() method returns an integer code, 0 for success. If an error occurs, you can use the getLastError() method 
      to return a pointer to the error message.</td>
</tr>
</table>


<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h4>6. Shut down Xalan.</h4>
<p>When you shut down Xalan, you may also want to shut down Xerces and ICU support (if enabled). Keep the following considerations 
   in mind:</p>
<ul>
  <li>Once you have shut down Xerces, you can no longer make Xalan or Xerces calls in the current process.<br />
<br />
</li>
  <li>Shut down ICU support if you have enabled it (see <a href="#icusupport">enabling ICU support</a>) and if the 
      application is exiting or no longer requires the ICU. The <code>XMLPlatformUtils::Terminate()</code> call does nothing 
      if ICU support has not been enabled.</li>
  <li>Ensure that there are no Xalan-C++ or Xerces-C++ objects extant at the point of termination.  Any deletion of objects after 
      termination could cause errors.</li>
</ul>
<p>Use the static terminators.</p>
<blockquote class="source">
<pre>
XalanTransformer::terminate();
XMLPlatformUtils::Terminate();
XalanTransformer::ICUCleanUp();
</pre>
</blockquote>



<a name="stylepi">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>Using a stylesheet processing instruction</h3>
<p>If you want to use the stylesheet referred to by a stylesheet processing instruction in the XML document, simply call 
   transform() without the second XSLTInputSource argument. For example:</p>
<blockquote class="source">
<pre>
// foo.xml contains a stylesheet PI
const char* xmlIn = "foo.xml";
const char* xmlOut = "foo-out.xml";
int theResult =
    theXalanTransformer.transform(xmlIn,xmlOut)
</pre>
</blockquote>


<a name="params">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>Setting Stylesheet Parameters</h3>

<p>An XSL stylesheet can include parameters that are set at run time before a transformation takes place.  Traditionally, a top-level parameter value is of text string type.  The Xalan library now supports three types of top-level parameters that can be set.  One is a text string parameter.  Another is a number parameter of floating point type double.  The third is a nodeset (XalanNode *) parameter, usually implemented as a parsed document.</p>

<p>Any XObject that is created outside of the transformation can be associated with a top-level parameter.  The XalanTransformer has an XObject factory whereby top-level parameters can be owned by the XalanTransformer object.</p>

<p>To set a stylesheet parameter, use the 
<a href="apiDocs/classXalanTransformer.html">XalanTransformer</a> setStylesheetParam() method. The setStylesheetParam() method takes two arguments: the parameter name and the value.  The value can be a string type, a number double type, an (XalanNode *) pointer to a nodeset or parsed document, or any XObjectPtr returned from an XObject factory.</p>

<p>Top level parameters are sticky.  Once set to an instance of an XalanTransformer object, they can be used for multiple transformations.  The XalanTransformer reset() method prepares a transformer for a new transformation.  Use the clearStylesheetParams() method to release the top-level stylesheet parameters.</p>

<p>The Xalan command line utility currently supports only a text string value for a top-level stylesheet parameter.  The single quotes are required to identify a text string value.</p>

<p>
<code>Xalan -p param1 "'string expression'"foo.xml foo.xsl</code>
</p>

<p>If the string expression includes spaces or other characters that the shell intercepts, first enclose the string in single quotes so Xalan-C++ interprets it as a string expression, and then enclose the resulting string in double quotes so the shell interprets it as a single argument.</p>

<p>The <a href="samples.html#usestylesheetparam">UseStylesheetParam</a> sample application supports all three types of top-level stylesheet parameters.</p>

<p>The 'C' language interface XalanCAPI also supports the three types of top-level parameters.  The sample program TestCAPIparms.c shows how to use top-level parameters with 'C' language programs.</p>

<table class="note">
<tr>
<td class="noteImg">
<img src="resources/note.gif" alt="note" />
</td>
<td class="noteTxt">The Xalan command line utility should be revised to accommodate the number and nodeset types of top-level stylesheet parameters. Only text string values are currently supported.</td>
</tr>
</table>

<p>Top-level stylesheet parameters of nodeset type (XalanNode *) are useful for the merging of multiple XML documents.</p>


<a name="incremental">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>Processing output incrementally</h3>
<p>
<a href="apiDocs/classXalanTransformer.html">XalanTransformer</a> provides a transform() method that sends the output in blocks 
to a callback function, which enables you to begin processing the output while the transformation is still in process:</p>
<blockquote class="source">
<pre>
int
transform(const XSLTInputSource&amp; xmlIn,
          const XSLTInputSource&amp; xslIn,
          void* theOutputHandle,
          XalanOutputHandlerType theOutputHandler,
          XalanFlushHanderType theFlushHandler = 0);
</pre>
</blockquote>
<p>For an example, see <a href="samples.html#xalantransformercallback">XalanTransformerCallback</a>.</p>


<a name="compiled">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>Performing a series of transformations</h3>
<p>Before Xalan performs a standard transformation, it must parse the XML document and compile the XSL stylesheet into binary 
   representations. If you plan to use the same XML document or stylesheet in a series of transformations, you can improve performance 
   by parsing the XML document or compiling the stylesheet once and using the binary representation when you call transform().</p>
<p>
<a href="apiDocs/classXalanTransformer.html">XalanTransformer</a> includes methods for creating compiled stylesheets and 
   parsed XML documents: the compileStylesheet() method returns a pointer to a <a href="apiDocs/classXalanCompiledStylesheet.html">
   XalanCompiledStylesheet</a>; the parseSource() method returns a pointer to a <a href="apiDocs/classXalanParsedSource.html">
   XalanParsedSource</a>.</p>
<table class="note">
<tr>
<td class="noteImg">
<img src="resources/note.gif" alt="note" />
</td>
<td class="noteTxt">In the case of failure, both methods return 0.</td>
</tr>
</table>
<p>Example using a XalanCompiledStylesheet to perform multiple transformations:</p>
<blockquote class="source">
<pre>
XalanCompiledStylesheet* compiledStylesheet = 0;
compiledStylesheet = theXalanTransformer.compileStylesheet("foo.xsl");
assert(compiledStylesheet!=0);
theXalanTransformer.transform("foo1.xml", *compiledStylesheet, "foo1.out.");
theXalanTransformer.transform("foo2.xml", *compiledStylesheet, "foo2.out");
...
</pre>
</blockquote>
<p>For a working sample, see the <a href="samples.html#compilestylesheet">CompileStylesheet</a> sample.</p>
<p>Example using a XalanParsedSource for multiple transformations:</p>
<blockquote class="source">
<pre>
XalanParsedSource* parsedXML = 0;
parsedXML = theXalanTransformer.parseSource("foo.xml");
assert(parsedXML!=0);
theXalanTransformer.transform(*parsedXML, "foo1.xsl", "foo-xsl1.out");
theXalanTransformer.transform(*parsedXML, "foo2.xsl", "foo-xsl2.out");
...
</pre>
</blockquote>
<p>For a sample that uses both a parsed XML source and a compiled stylesheet, see <a href="samples.html#threadsafe">ThreadSafe
</a>.</p>


<a name="dom">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>Working with DOM input and output</h3>
<p>You can set up an <a href="apiDocs/classXSLTResultTarget.html">XSLTResultTarget</a> to produce a DOM when you perform a 
   transformation. You can also use a DOM as input for a transformation.</p>
<p>The following code fragment illustrates the procedures for working with DOM output :</p>
<blockquote class="source">
<pre>

// Use the Xerces DOM parser to create a DOMDocument.

#include &lt;xercesc/dom/DOMDocument.hpp&gt;
#include &lt;xercesc/dom/DOMImplementation.hpp&gt;

#include &lt;xalanc/XMLSupport/FormatterToXML.hpp&gt;
#include &lt;xalanc/XMLSupport/XalanTransformer.hpp&gt;

XALAN_USING_XERCES(DOMDocument)
XALAN_USING_XERCES(DOMImplementation)

XALAN_USING_XALAN(FormatterToXML)
XALAN_USING_XALAN(XalanTransformer)


    // If you want to produce DOM output, create an empty Xerces Document
    // to contain the transformation output.
    
    DOMDocument * theDOM = 
        DOMImplementation::getImplementation()-&gt;createDocument();    

    // Now create a FormatterListener which can be used by the transformer
    // to send each output node to the new Xerces document

    FormatterToXercesDOM theFormatter(theDOM);

    // Now do the transform as normal
    XalanTransformer theXalanTransformer
    int theResult = theXalanTransformer.transform(
        "foo.xml", 
        "foo.xsl", 
        theFormatter);
...

    // After you perform the transformation, the DOMDocument contains
    // the output.
</pre>
</blockquote>
<table class="note">
<tr>
<td class="noteImg">
<img src="resources/note.gif" alt="note" />
</td>
<td class="noteTxt">You can also follow the same process but use a <b>FormatterToDeprecatedXercesDOM</b> if you require a DOM_Document
      output.  However this is discouraged, as support for the deprecated DOM may be removed in future releases of Xalan-C++</td>
</tr>
</table>
<p>If you want to use a Xerces DOM object as input for a transformation without wrapping the DOM in a XercesParserLiaison, see 
   <a href="#xercesdomwrapperparsedsource">passing in a Xerces DOM</a>.</p>

<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h4>Limitations</h4>
<p>Performance is much better when Xalan-C++ uses native source tree handling rather than interacting with the Xerces DOMParser.</p>
<p>If you are using the deprecated DOM, the Xerces DOMParser by default, creates a DOM_XMLDecNode in the DOM tree to represent 
   the XML declaration. The Xalan bridge for the Xerces DOM does not support this non-standard node type. Accordingly, you must 
   call DOMParser::setToCreateXMLDeclTypeNode(false) <b>before</b> you parse the XML file. If not, the behavior is undefined, 
   and your application may crash.</p>


<a name="xercesdomwrapperparsedsource">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h4>Passing in a Xerces DOM to a transformation</h4>
<p>You may want to use a Xerces DOM that was created without using the XalanTransformer class. As the following code snippet 
   illustrates, you can use <a href="apiDocs/classXercesDOMWrapperParsedSource.html">XercesDOMWrapperParsedSource</a> to 
   pass in a Xerces DOM as the source for an XSL transformation.</p>
<blockquote class="source">
<pre>
#include &lt;xercesc/parsers/DOMParser.hpp&gt;
#include &lt;xalanc/XalanTransformer/XercesDOMWrapperParsedSource.hpp&gt;

void parseWithXerces(XalanTransformer &amp;xalan, 
                     const XSLTInputSource &amp;xmlInput,
                     const XalanCompiledStylesheet* styleSheet,
                     const XSLTResultTarget &amp;output,
                     XMLFileReporter &amp;logFile)
{
    XercesDOMParser theParser;
  
    // Turn on validation and namespace support.
    theParser.setDoValidation(true);
    theParser.setDoNamespaces(true);

    // Parse the document
  
    theParser.parse(xmlInput);
    DOMDocument *theDOM = theParser.getDocument();
    theDOM-&gt;normalize();

    XercesDOMSupport theDOMSupport;
    XercesParserLiaison theParserLiaison;
  
    // Use the DOM to create a XercesDOMWrapperParsedSource, 
    // which you can pass to the transform method.
    try
    {
        const XercesDOMWrapperParsedSource parsedSource(
                                   theDOM,
                                   theParserLiaison,
                                   theDOMSupport,
                                   XalanDOMString(xmlInput.getSystemId()));

        xalan.transform(parsedSource, stylesheet, output);

    }
    catch (....)
    {
      ...
    }
}  
</pre>
</blockquote>



<a name="xpath">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>Working with XPath expressions</h3>
<p>XSL stylesheets use XPath expressions to select nodes, specify conditions, and generate text for the result tree. XPath 
   provides an API that you can call directly. For example, you may want to select nodes programmatically and do your own 
   processing without a stylesheet. Xalan-C++ provides an XPathEvaluator interface to simplify the process of executing XPath 
   expressions.</p>
<p>For an example that executes XPath expressions against XML source files, see <a href="samples.html#simplexpathapi">
   SimpleXPathAPI</a> (takes advantage of the XPathEvaluator interface) and <a href="samples.html#xpathwrapper">
   XPathWrapper</a>.</p>


<a name="tracelistener">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>Using TraceListener</h3>
<p>TraceListener is a debugging abstract base class implemented by TraceListenerDefault. You can use TraceListener to trace 
   any combination of the following:</p>
<ul>
  <li>Calls to templates</li>
  <li>Calls to template children</li>
  <li>Selection events</li>    
  <li>Result tree generation events</li>
</ul>
<p>To construct a TraceListener with TraceListenerDefault, you need a PrintWriter and a boolean for each of these four 
   tracing options. You can then use the XSLTEngimeImpl setTraceSelects and addTraceListener methods to add the TraceListener 
   to an XSLTProcessor. See the <a href="samples.html#tracelisten">TraceListen</a> sample application.</p>
<p>The TraceListen uses TraceListenerDefault to write events to the screen.</p>


<a name="icu">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>Using the ICU</h3>
<p>You can use the <a href="" /> to extend support for encoding, number formatting, and sorting.</p>
<ul>
  <li>
<b>Encoding</b>
      <br /> Xerces-C++ and Xalan-C++ use UTF-16 encoding to work with Unicode data.  If you integrate the ICU with Xerces-C++, both 
      Xerces-C++ and Xalan-C++ use ICU support for input and output transcoding.<br />
<br />
</li>
  <li>
<b>format-number()</b>
      <br />This XSLT function includes two or three arguments (the third is optional): number, format pattern, and decimal-format 
      name. Xalan-C++ ignores the format pattern and optional decimal-format name. If you install ICU support for format-number(), 
      this function is fully supported with all its arguments.<br />
<br />
</li>
  <li>
<b>xsl:sort</b>
      <br />If you install ICU support for xml:sort, Xalan-C++ implements Unicode-style collation.</li>
</ul>

<p>If you choose to build Xalan with ICU, you will need to rebuild Xerces with ICU as well.</p>
<p>To get the ICU:</p> 
<ol>
  <li>Download and unzip the <a href="" /> from the IBM developerWorks open source zone.<br />
<br />
</li>
  <li>Do an ICU build -- see the Windows NT or Unix build instructions in the build_instruct.html that accompanies the download.<br />
      <b>Important</b> For Windows, define the environment variable ICUROOT and then restart Visual C++ or Visual Studio .NET. 
      in order for the ICUROOT variable to take effect.<br />
<br />
</li>
</ol>

<a name="icusupport">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h4>Enabling ICU support for encoding</h4>
<p>If you want to enable ICU support for encoding, you must integrate ICU with your Xerces-C++ build. Xerces-C++ uses ICU for input 
   encoding. See <a href="" />.</p>
<p>Once you have integrated the ICU with Xerces-C++, Xalan-C++ automatically uses ICU support for output encoding (the xsl:output 
   encoding attribute).</p>


<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h4>Enabling ICU support for number formatting and sorting</h4> 
<p>If you only want to use the ICU to support number formatting and sorting, you do not need to integrate the ICU with Xalan-C++, 
   but you must do the following in the application where you want to enable ICU support:</p>
<ol>
  <li>Define the environment variable ICUROOT.<br />
<br />
</li>
  <li>Substitute ICU support for format-number(), xsl:number, and/or xsl:sort.<br />
<br />
</li>
  <li>Rebuild the Xalan library to include the ICUBridge.</li>
</ol>
<p>
<b>ICUBridge</b>
</p>
<p>All Xalan-C++ references to ICU are centralized in the ICUBridge module, which supplies the infrastructure for enabling ICU 
   support for number formatting and sorting.</p>
<blockquote class="source">
<pre>
#include &lt;xalanc/ICUBridge/ICUBridge.hpp&gt;
#include &lt;xalanc/ICUBridge/FunctionICUFormatNumber.hpp&gt;
#include &lt;xalanc/ICUBridge/ICUXalanNumberFormatFactory.hpp&gt;
#include &lt;xalanc/ICUBridge/ICUBridgeCollationCompareFunctor.hpp&gt;
</pre>
</blockquote>
<p>For Windows, do a clean build of the Xalan library using the "XalanICU.dsw" workspace (for Visual C++ users) or 
   "XalanICU.sln" solution (for Visual Studio .NET users).</p>
<p>For UNIX:</p>
<ol>
  <li>Define the XALAN_USE_ICU environment variable.<br />
<br />
</li>
  <li>Set the XALANROOT environment variable to the path to to the ICU root (unless you have copied the ICU library to
      /usr/lib).<br />
<br />
</li> 
  <li>
<a href="buildlibs.html#unixbldenv">Rebuild the Xalan library</a> (libxalan-c.so.111 for Linux, libxalan-c111.so for AIX,
      libxalan-c.sl.111.0 for HP-UX 11, and libxalan-c1_11.so for Solaris).<br />
<br />
</li>
  <li>Be sure the Xalan library is on the library path (LD_LIBRARY_PATH for Red Hat Linux, LIBPATH for AIX, SHLIB_PATH for 
      HP-UX 11, LD_LIBRARY_PATH for Solaris).</li>
</ol>
<table class="note">
<tr>
<td class="noteImg">
<img src="resources/note.gif" alt="note" />
</td>
<td class="noteTxt">The command you use for setting environment variables depends on the shell you are using.<br />
      For Bourne Shell, K Shell, or Bash use <b>export</b> ENVAR="val"<br />
      For C Shell, use <b>setenv</b> ENVAR "val"<br />
      where ENVAR is the environment variable name and val is the environment variable
      setting. You can check the setting of an environment variable with <b>echo</b> $ENVAR<br />To define XALAN_USE_ICU, 
      set its value to "1".
</td>
</tr>
</table>
<p>
<b>Number formatting</b>
</p>
<p>To enable ICU support for the XSLT format-number() function, do the following:</p>
<blockquote class="source">
<pre>
// Install ICU support for the format-number() function.
FunctionICUFormatNumber::FunctionICUFormatNumberInstaller theInstaller;
</pre>
</blockquote>

<p>
<b>Sorting</b>
</p> 
<p>To enable ICU support for xsl:sort, do the following:</p>
<blockquote class="source">
<pre>
// Set up a StylesheetExecutionContextDefaultobject
// (named theExecutionContext in the following fragment),
// and install the ICUCollationCompareFunctor.
ICUBridgeCollationCompareFunctortheICUFunctor;
theExecutionContext.installCollationCompareFunctor(&amp;theICUFunctor);
</pre>
</blockquote>



<a name="capi">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>Basic XalanTransformer usage pattern with the C API</h3>
<p>We also include a simple C interface for using the XalanTransformer class. See <a href="apiDocs/XalanCAPI_8h.html">
   XalanTransformer/XalanCAPI.h</a>. The <a href="samples.html#apachemodulexslt">ApacheModuleXSLT</a> sample 
   illustrates the use of this C API.</p>
<p>Basic strategy:</p>

<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h4>1. Include the XalanTransformer C API header</h4>
<blockquote class="source">
<pre>#include &lt;XalanTransformer/XalanCAPI.h&gt;</pre>
</blockquote>

<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h4>2. Initialize Xalan and Xerces</h4>
<blockquote class="source">
<pre>XalanInitialize();</pre>
</blockquote> 

<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h4>3. Create a Xalan transformer</h4>
<blockquote class="source">
<pre>
XalanHandle xalan = NULL;
xalan = CreateXalanTransformer();
</pre>
</blockquote>

<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h4>4. Perform each transformation</h4>
<p>  For example:</p>
<blockquote class="source">
<pre>
const char * xmlfilename = "foo.xml";
const char* xslfilename = "foo.xsl";
const char* outfilename = "foo.out";
int theResult = 0;
theResult = XalanTransformToFile(xmlfilename,
                                 xslfilename,
                                 outfilename,
                                 xalan);
</pre>
</blockquote>
<table class="note">
<tr>
<td class="noteImg">
<img src="resources/note.gif" alt="note" />
</td>
<td class="noteTxt">If the XML input file contains a stylesheet processing instruction that you want to use, use an empty XSLTInputSource 
      for the stylesheet argument.</td>
</tr>
</table>
                             
    
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h4>5. Shut down Xalan</h4>
<blockquote class="source">
<pre>XalanTerminate();</pre>
</blockquote>



<a name="cvar">‌</a>
<p align="right" size="2">
<a href="#content">(top)</a>
</p>
<h3>Variations with the XalanTransformer C API</h3>
<p>The <a href="apiDocs/XalanCAPI_8h.html">Xalan C API</a> supports approximately the same set of options as the C++ API. 
   In particular, you can</p>
<ul>
  <li>Use stylesheet processing instructions (PI) to indicate the URI of the stylesheet. Supply NULL for the stylesheet argument.<br />
<br />
</li>
  <li100 94240    0 33783  100 60457   309k   553k --:--:-- --:--:-- --:--:--  556k
>Set stylesheet parameters. Use the SetStylesheetParam() function.<br />
<br />
</li>
  <li>Compile stylesheets. Use the CompileStylesheet() method to compile a stylesheet, and the TransformToFileCSS() or TransformToDataCSS() function to use the compiled stylesheet in a transformation.<br />
<br />
</li>
  <li>Parse XML sources. Use the XalanParseSource() or XalanParseSouceUseXalan() method.<br />
<br />
</li>
  <li>Place the transformation output in a character array. Use the TransformToData() or TransformToDataCSS() function. After you perform the transformation, use the XalanFreeData() function to free memory allocated for the output data.<br />
<br />
</li>
  <li>Send the output to a callback function to process blocks of output data as they arrive.</li>
</ul> 
<p>For a sample that sends output in blocks to a callback function, see <a href="samples.html#apachemodulexslt">
   ApacheModuleXSLT</a>.</p>


<p align="right" size="2">
<a href="#content">(top)</a>
</p>
</div>
<div id="footer">Copyright © 1999-2012 The Apache Software Foundation<br />Apache, Xalan, and the Feather logo are trademarks of The Apache Software Foundation<div class="small">Web Page created on - </div>
</div>
</body>
</html>

../../extra/xdocs/whatsnew.xml
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100 48302    0   192  100 48110   1854   453k --:--:-- --:--:-- --:--:--  451k100 48302    0   192  100 48110   1836   449k --:--:-- --:--:-- --:--:--  447k
HTTP/1.1 100 Continue

HTTP/1.1 200 OK
Date: Mon, 17 Apr 2017 01:22:24 GMT
Server: Apache/2.4.10 (Debian)
Vary: Accept-Encoding
Transfer-Encoding: chunked
Content-Type: text/plain; charset=utf-8


<?xml version="1.0" encoding="UTF-8"?><error>Something went wrong!: [7827404922755987619,/tmp/xzes/7827404922755987619.xml,] [7827404922755987619] [/tmp/xzes/7827404922755987619.xml]</error>
../../extra/xdocs/xalan.xml
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0100 35002    0   192  100 34810   1958   346k --:--:-- --:--:-- --:--:--  346k
HTTP/1.1 100 Continue

HTTP/1.1 200 OK
Date: Mon, 17 Apr 2017 01:22:25 GMT
Server: Apache/2.4.10 (Debian)
Vary: Accept-Encoding
Transfer-Encoding: chunked
Content-Type: text/plain; charset=utf-8


<?xml version="1.0" encoding="UTF-8"?><error>Something went wrong!: [6371108050314308379,/tmp/xzes/6371108050314308379.xml,] [6371108050314308379] [/tmp/xzes/6371108050314308379.xml]</error>
